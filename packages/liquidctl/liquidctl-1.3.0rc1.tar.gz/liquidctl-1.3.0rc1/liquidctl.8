'\" t
.TH LIQUIDCTL 8 2019\-11\-03 "liquidctl" "System Manager's Manual"
.
.SH NAME
liquidctl \- monitor and control liquid coolers and other devices
.
.SH SYNOPSIS
.SY liquidctl
.RI [ options ]
.B list
.SY liquidctl
.RI [ options ]
.B initialize
.RB [ all ]
.SY liquidctl
.RI [ options ]
.B status
.SY liquidctl
.RI [ options ]
.B set
.I channel
.B speed
.RI ( temperature
.IR percentage )
\&.\|.\|.\&
.SY liquidctl
.RI [ options ]
.B set
.I channel
.B speed
.I percentage
.SY liquidctl
.RI [ options ]
.B set
.I channel
.B color
.I mode
.RI [ color
\&.\|.\|.\&]
.SY liquidctl
.B \-\-version
.SY liquidctl
.B \-\-help
.YS
.
.SH DESCRIPTION
\fBliquidctl\fR is a utility for monitoring and controlling some hardware
monitoring devices not yet supported at the kernel level.  Because
\fBliquidctl\fR directly accesses the hardware devices root privileges are
generally required, though this can be avoided with appropriate udev rules.
.PP
\fBliquidctl list\fR outputs all compatible devices found on the system.  In
case more than one device is found, the device ID can be used to
select it in later invocations.  Passing \fI\-\-verbose\fR enables the display
of additional identifiers and addresses that can also be used to select
specific devices.  These are preferred for non-interactive invocations as they,
unlike device IDs, are more stable across reboots and software or hardware
updates.
.PP
\fBliquidctl initialize\fR should be called for every device after a reboot,
since many of them require some initialization code before correctly responding
to other commands.  \fBliquidctl initialize all\fR simplifies that and attempts
to initialize all devices at once.
.PP
\fBliquidctl status\fR displays the status of a device or, if no selection
options have been passed, of all available devices.
.PP
\fBliquidctl set \fIchannel\fB speed\fR allows the user to set fan and pump
speeds.  These, depending on the device, can be set to fixed duty values,
variable temperatureâ€“duty curves, or both.
.PP
\fBliquidctl set \fIchannel\fB color\fR allows the user to configure and set
lighting modes.  Each color is specified in hexadecimal RGB, without prefixes
(e.g. \fIff2608\fR).  Which modes and additional options are supported is
device dependent.
.
.SH OPTIONS
.
.SS Device selection options
Devices can be selected using one or more values taken from \fBlist \fI\-\-verbose\fP.
.TP
.BI \-\-vendor= id
Filter devices by vendor id.
.TP
.BI \-\-product= id
Filter devices by product id.
.TP
.BI \-\-release= number
Filter devices by release number.
.TP
.BI \-\-serial= number
Filter devices by serial number.
.TP
.BI \-\-bus= bus
Filter devices by bus.
.TP
.BI \-\-address= address
Filter devices by address in bus.
.TP
.BI \-\-usb\-port= port
Filter devices by USB port in bus.
.TP
.BI \-\-pick= number
Pick among many results for a given filter.
.TP
.BI \-d\  id\fR,\ \fP \-\-device= id
Select device by listing ID.
.
.SS Animation options
Some devices and animation modes support additional options.
.TP
.BI \-\-speed= value
Abstract animation speed (device/mode specific).
.TP
.BI \-\-time\-per\-color= value
Time to wait on each color (seconds).
.TP
.BI \-\-time\-off= value
Time to wait with the LED turned off (seconds).
.TP
.BI \-\-alert\-threshold= number
Threshold temperature for a visual alert (degrees Celsius).
.TP
.BI \-\-alert\-color= color
Color used by the visual high temperature alert.
.
.SS Other options
.TP
.B \-v\fR, \fP\-\-verbose
Output additional information.
.TP
.B \-g\fR, \fB\-\-debug
Show debug information on \fIstderr\fR.
.TP
.BI \-\-hid= module
Override API for USB HIDs: usb, hid or hidraw.
.TP
.B \-\-legacy\-690lc
Use Asetek 690LC in legacy mode (old Krakens).
.TP
.B \-\-single-12v-ocp
Enable single rail +12V OCP.
.TP
.B \-\-version
Display the version number.
.TP
.B \-\-help
Show the embedded help.
.
.SH EXIT STATUS
1 if there was an error, 0 otherwise.
.
.SH FILES
.TP
.I /run/liquidctl/*
Temporary storage required by some drivers.
.\" on Linux systems where /run is not available, or on other platforms, the
.\" temporary storage will be placed elsewhere (see asetek.py and it's use of
.\" appdirs); package maintainers should update this man page when necessary
.
.SH EXAMPLE
.SY liquidctl
.B list \-\-verbose
.SY liquidctl
.B initialize all
.SY liquidctl
.BI \-\-product\  0x170e\  set\  pump\  speed\  90
.SY liquidctl
.BI \-\-serial\  123ABC789\  set\  led\  color\  fading
.I 350017 ff2608
.SY liquidctl
.B status
.YS
.
.SH DEVICE SPECIFICS
.
.SS Corsair H80i GT, H100i GTX, H110i GTX
.SS Corsair H80i v2, H100i v2, H115i
.SS EVGA CLC 120 (CL12), 240, 280, 360
Cooling channels: \fIpump\fR, \fIfan\fR.
.PP
Lighting channels: \fIlogo\fR.
.TS
l c c
---
l c c .
Mode	#colors	notes
\fIrainbow\fR	0	only availble on EVGA coolers
\fIfading\fR	2
\fIblinking\fR	1
\fIfixed\fR	1
\fIblackout\fR	0	no high-temperature alerts
.TE
.PP
The \fIrainbow\fR mode speed can be configured with
.BI \-\-speed= [1\(en6] .
The speed of the other modes is instead customized with
.B \-\-time\-per\-color
.RI ( fading\  and\  blinking )
and
.B \-\-time\-off
.RI ( blinking\  only).
.PP
All modes except
.I blackout
support a visual high-temperature alert configured with
.B \-\-alert\-threshold
and
.BR \-\-alert\-color .
.
.SS NZXT Kraken X40, X60
.SS NZXT Kraken X31, X41, X61
Supports the same modes and options as a Corsair H80i GT (or similar), but
requires \fB\-\-legacy\-690lc\fR to be passed on all invocations.
.
.SS NZXT Kraken M22
.SS NZXT Kraken X42, X52, X62, X72
Cooling channels (only X42, X52, X62, X72): \fIpump\fR, \fIfan\fR.
.PP
Lighting channels: \fIlogo\fR, \fIring\fR, \fIsync\fR.
.TS
l c c c
----
l c c c .
Mode	logo	ring	#colors
\fIoff\fR	yes	yes	0
\fIfixed\fR	yes	yes	1
\fIsuper\-fixed\fR	yes	yes	1\(en9
\fIfading\fR	yes	yes	2\(en8
\fI(backwards\-)?spectrum\-wave\fR	yes	yes	0
\fI(backwards\-)?super\-wave\fR	no	yes	1\(en8
\fI(backwards\-)?marquee\-[3\-6]\fR	no	yes	1
\fIcovering\-(backwards\-)?marquee\fR	no	yes	1\(en8
\fIalternating\fR	no	yes	2
\fI(backwards\-)?moving\-alternating\fR	no	yes	2
\fIbreathing\fR	yes	yes	1\(en8
\fIsuper\-breathing\fR	yes	yes	1\(en9
\fIpulse\fR	yes	yes	1\(en8
\fItai\-chi\fR	no	yes	2
\fIwater\-cooler\fR	no	yes	0
\fIloading\fR	no	yes	1
\fIwings\fR	no	yes	1
.TE
.PP
When applicable the animation speed can be set with
.BI \-\-speed= value ,
where the allowed values are: \fIslowest\fR, \fIslow\fR, \fInormal\fR,
\fIfast\fR, \fIfastest\fR.
.
.SS Corsair HX750i, HX850i, HX1000i, HX1200i
.SS Corsair RM650i, RM750i, RM850i, RM1000i
Fan channels: \fIfan\fR.
.PP
Lighting channels: none.
.PP
Setting a fixed fan speed changes the fan mode to software control.  To revert
back to hardware control, run \fBinitialize\fR again.
.PP
(Experimental feature) The +12V rails normally function in multiple-rail mode.
Single-rail mode can be selected by passing \fB\-\-single\-12v\-ocp\fR to
\fBinitialize\fR.  To revert back to multitple-rail mode, run \fBinitialize\fR
again without that flag.
.
.SS NZXT E500, E650, E850
Fan channels: none (feature not supported yet).
.PP
Lighting channels: none.
.
.SS NZXT Grid+ V3
Fan channels: \fIfan[1\(en6]\fR.
.PP
Lighting channels: none.
.
.SS NZXT Smart Device (V1)
Fan channels: \fIfan[1\(en3]\fR.
.PP
Lighting channels: \fIled\fR.
.TS
l c
----
l c .
Mode	#colors
\fIoff\fR	0
\fIfixed\fR	1
\fIsuper\-fixed\fR	1\(en40
\fIfading\fR	2\(en8
\fI(backwards\-)?spectrum\-wave\fR	0
\fI(backwards\-)?super\-wave\fR	1\(en40
\fI(backwards\-)?marquee\-[3\-6]\fR	1
\fIcovering\-(backwards\-)?marquee\fR	1\(en8
\fIalternating\fR	2
\fI(backwards\-)?moving\-alternating\fR	2
\fIbreathing\fR	1\(en8
\fIsuper\-breathing\fR	1\(en40
\fIpulse\fR	1\(en8
\fIcandle\fR	1
\fIwings\fR	1
.TE
.PP
When applicable the animation speed can be set with
.BI \-\-speed= value ,
where the allowed values are: \fIslowest\fR, \fIslow\fR, \fInormal\fR,
\fIfast\fR, \fIfastest\fR.
.
.SS NZXT Smart Device V2
Fan channels: \fIfan[1\(en3]\fR.
.PP
Lighting channels: \fIled[1\(en2]\fR.
.TS
l c
----
l c .
Mode	#colors
\fIoff\fR	0
\fIfixed\fR	1
\fIsuper\-fixed\fR	1\(en40
\fIfading\fR	2\(en8
\fI(backwards\-)?spectrum\-wave\fR	0
\fI(backwards\-)?marquee\-[3\-6]\fR	1
\fIcovering\-(backwards\-)?marquee\fR	1\(en8
\fIalternating\-[3\-6]\fR	2
\fI(backwards\-)?moving\-alternating\-[3\-6]\fR	2
\fIpulse\fR	1\(en8
\fIbreathing\fR	1\(en8
\fIsuper\-breathing\fR	1\(en40
\fIcandle\fR	1
\fIstarry\-night\fR	1
\fI(backwards\-)?rainbow\-flow\fR	0
\fI(backwards\-)?super\-rainbow\fR	0
\fI(backwards\-)?rainbow\-pulse\fR	0
\fIwings\fR	1
.TE
.PP
When applicable the animation speed can be set with
.BI \-\-speed= value ,
where the allowed values are: \fIslowest\fR, \fIslow\fR, \fInormal\fR,
\fIfast\fR, \fIfastest\fR.
.
.SH SEE ALSO
The complete documentation, including device specific details, is available in
the project's sources and
.UR https://github.com/jonasmalacofilho/liquidctl
homepage
.UE .
