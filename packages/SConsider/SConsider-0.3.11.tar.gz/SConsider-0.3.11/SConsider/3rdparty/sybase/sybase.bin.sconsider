# vim: set et ai ts=4 sw=4:
# -------------------------------------------------------------------------
# Copyright (c) 2011, Peter Sommerlad and IFS Institute for Software
# at HSR Rapperswil, Switzerland
# All rights reserved.
#
# This library/application is free software; you can redistribute and/or
# modify it under the terms of the license that is included with this
# library/application in the file license.txt.
# -------------------------------------------------------------------------

import pkg_resources
pkg_resources.require(["SConsider"])
import SConsider
import os
from stat import *

Import('*')

_sconsider_dist = pkg_resources.get_distribution("SConsider").parsed_version
if _sconsider_dist < pkg_resources.parse_version("0.5.dev"):
    import ThirdParty
    buildSettings = {
        packagename: {
            'linkDependencies': [
                packagename + '.sybunic',
                packagename + '.sybcs',
                packagename + '.sybct',
                packagename + '.sybintl',
                packagename + '.sybtcl',
                packagename + '.sybcomn',
            ],
            'requires': [packagename + '.config'],
            'targetType': 'IncludeOnly',
            'public': {
                'includeSubdir': 'include',
            },
        },
        'config': {
            'targetType': 'CopyFiles',
            'copyFiles': [
                (SConsider.listFiles(['config/*',
                                      'charsets/*',
                                      'locales/*'],
                                     recursive=True), S_IRUSR | S_IRGRP | S_IROTH),
            ],
            'appendUnique': {'RELTARGETDIR': os.path.join('globals', packagename)},
            'public': {
                'execEnv': {
                    'SYBASE': lambda env: env.getTargetBaseInstallDir().abspath,
                    'LANG': 'C',
                },
            },
        },
        'sybunic': {
            'sourceFiles': [ThirdParty.getBinaryDistDir(packagename).File('sybunic')],
            'targetType': 'PrecompiledLibrary',
        },
        'sybcs': {
            'sourceFiles': [ThirdParty.getBinaryDistDir(packagename).File('sybcs')],
            'targetType': 'PrecompiledLibrary',
        },
        'sybct': {
            'sourceFiles': [ThirdParty.getBinaryDistDir(packagename).File('sybct')],
            'targetType': 'PrecompiledLibrary',
        },
        'sybintl': {
            'sourceFiles': [ThirdParty.getBinaryDistDir(packagename).File('sybintl')],
            'targetType': 'PrecompiledLibrary',
        },
        'sybtcl': {
            'sourceFiles': [ThirdParty.getBinaryDistDir(packagename).File('sybtcl')],
            'targetType': 'PrecompiledLibrary',
        },
        'sybcomn': {
            'sourceFiles': [ThirdParty.getBinaryDistDir(packagename).File('sybcomn')],
            'targetType': 'PrecompiledLibrary',
        },
        'isql': {
            'sourceFiles': [ThirdParty.getBinaryDistDir(packagename).File('isql')],
            'requires': [
                SConsider.generateFulltargetname(packagename, 'config'),
            ],
            'targetType': 'PrecompiledBinary',
        },
        'script_isql': {
            'targetType': 'ProgramApp',
            'runConfig': {
            },
            'requires': [
                packagename + '.isql',
            ],
            'usedTarget': packagename + '.isql',
        },
    }

    SConsider.createTargets(packagename, buildSettings)
