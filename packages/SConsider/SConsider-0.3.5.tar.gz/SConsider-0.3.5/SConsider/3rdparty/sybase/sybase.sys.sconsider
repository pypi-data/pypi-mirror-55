# vim: set et ai ts=4 sw=4:
# -------------------------------------------------------------------------
# Copyright (c) 2011, Peter Sommerlad and IFS Institute for Software
# at HSR Rapperswil, Switzerland
# All rights reserved.
#
# This library/application is free software; you can redistribute and/or
# modify it under the terms of the license that is included with this
# library/application in the file license.txt.
# -------------------------------------------------------------------------

import pkg_resources
pkg_resources.require(["SConsider"])
import SConsider
import os
from stat import *

Import('*')

_scons_dist = pkg_resources.get_distribution("SConsider").parsed_version
if _scons_dist < pkg_resources.parse_version("0.5.dev"):
    from SConsider.ConfigureHelper import Configure
    env = SConsider.cloneBaseEnv()
    conf = Configure(env)
    if conf.CheckCHeader('sybdb.h') and conf.CheckMultipleLibs(
            ['sybunic', 'sybcs', 'sybct', 'sybintl', 'sybtcl', 'sybcomn']):
        conf.env.Append(CPPDEFINES='HAS_SYBASE')
    isqlbin = conf.CheckExecutable('isql')
    env = conf.Finish()

    buildSettings = {}
    if 'HAS_SYBASE' in env['CPPDEFINES']:
        buildSettings[packagename] = {
            'linkDependencies': [
                packagename + '.sybunic',
                packagename + '.sybcs',
                packagename + '.sybct',
                packagename + '.sybintl',
                packagename + '.sybtcl',
                packagename + '.sybcomn',
            ],
            'requires': [packagename + '.config'],
            'targetType': 'IncludeOnly',
        }
        buildSettings['config'] = {
            'targetType': 'CopyFiles',
            'copyFiles': [
                (SConsider.listFiles(
                    ['config/*', 'charsets/*', 'locales/*'], recursive=True), S_IRUSR | S_IRGRP | S_IROTH),
            ],
            'appendUnique': {'RELTARGETDIR': os.path.join('globals', packagename)},
            'public': {
                'execEnv': {
                    'SYBASE': os.path.join('$BASEOUTDIR', '$RELTARGETDIR'),
                    'LANG': 'C',
                },
            },
        }
        buildSettings['sybunic'] = {
            'public': {
                'appendUnique': {
                    'LIBS': ['sybunic'],
                },
            },
        }
        buildSettings['sybcs'] = {
            'public': {
                'appendUnique': {
                    'LIBS': ['sybcs'],
                },
            },
        }
        buildSettings['sybct'] = {
            'public': {
                'appendUnique': {
                    'LIBS': ['sybct'],
                },
            },
        }
        buildSettings['sybintl'] = {
            'public': {
                'appendUnique': {
                    'LIBS': ['sybintl'],
                },
            },
        }
        buildSettings['sybtcl'] = {
            'public': {
                'appendUnique': {
                    'LIBS': ['sybtcl'],
                },
            },
        }
        buildSettings['sybcomn'] = {
            'public': {
                'appendUnique': {
                    'LIBS': ['sybcomn'],
                },
            },
        }
        if isqlbin:
            buildSettings['isql'] = {
                'sourceFiles': [isqlbin],
                'requires': [
                    SConsider.generateFulltargetname(packagename, 'config'),
                ],
                'targetType': 'InstallBinary',
            }

    SConsider.createTargets(packagename, buildSettings)
