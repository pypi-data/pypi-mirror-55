# vim: set et ai ts=4 sw=4:
# -------------------------------------------------------------------------
# Copyright (c) 2011, Peter Sommerlad and IFS Institute for Software
# at HSR Rapperswil, Switzerland
# All rights reserved.
#
# This library/application is free software; you can redistribute and/or
# modify it under the terms of the license that is included with this
# library/application in the file license.txt.
# -------------------------------------------------------------------------

import pkg_resources
pkg_resources.require(["SConsider"])
import SConsider

Import('*')

_sconsider_dist = pkg_resources.get_distribution("SConsider").parsed_version
if _sconsider_dist < pkg_resources.parse_version("0.5.dev"):
    import ThirdParty
    buildSettings = {
        packagename: {
            'linkDependencies': [
                packagename + '.gxi',
                packagename + '.gxibasicmatch',
                packagename + '.gxical',
                packagename + '.gxiosa',
                packagename + '.gxiplugin',
                packagename + '.gxiwmqmsg',
                packagename + '.gxiwmqprot',
                packagename + '.gxixil',
                packagename + '.icudata',
                packagename + '.icuuc',
            ],
            'targetType': 'IncludeOnly',
            'public': {
                'includeSubdir': 'inc',
            }
        },
        'gxi': {
            'sourceFiles': [ThirdParty.getBinaryDistDir(packagename).File('gxi')],
            'targetType': 'PrecompiledLibrary',
        },
        'gxibasicmatch': {
            'sourceFiles': [ThirdParty.getBinaryDistDir(packagename).File('gxibasicmatch')],
            'targetType': 'PrecompiledLibrary',
        },
        'gxical': {
            'sourceFiles': [ThirdParty.getBinaryDistDir(packagename).File('gxical')],
            'targetType': 'PrecompiledLibrary',
        },
        'gxiosa': {
            'sourceFiles': [ThirdParty.getBinaryDistDir(packagename).File('gxiosa')],
            'targetType': 'PrecompiledLibrary',
        },
        'gxiplugin': {
            'sourceFiles': [ThirdParty.getBinaryDistDir(packagename).File('gxiplugin')],
            'targetType': 'PrecompiledLibrary',
        },
        'gxiwmqprot': {
            'sourceFiles': [ThirdParty.getBinaryDistDir(packagename).File('gxiwmqprot')],
            'targetType': 'PrecompiledLibrary',
        },
        'gxiwmqmsg': {
            'sourceFiles': [ThirdParty.getBinaryDistDir(packagename).File('gxiwmqmsg')],
            'targetType': 'PrecompiledLibrary',
        },
        'gxixil': {
            'sourceFiles': [ThirdParty.getBinaryDistDir(packagename).File('gxixil')],
            'targetType': 'PrecompiledLibrary',
        },
        'icudata': {
            'sourceFiles': [ThirdParty.getBinaryDistDir(packagename).File('icudata')],
            'targetType': 'PrecompiledLibrary',
        },
        'icuuc': {
            'sourceFiles': [ThirdParty.getBinaryDistDir(packagename).File('icuuc')],
            'targetType': 'PrecompiledLibrary',
        },
    }

    SConsider.createTargets(packagename, buildSettings)
