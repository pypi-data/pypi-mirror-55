version: 2
jobs:
  build:
    docker:
      - image: qrledger/qrl-docker:xenial
    steps:
      - checkout
      - run: pip install -U setuptools
      - run: pip install -U -r requirements.txt
      - run: pip install -U -r test-requirements.txt
      - run: python3 setup.py test --addopts "--cov . --cov-report term-missing --cov-report xml"
      - run: sudo pip install -U coverage codacy-coverage
      - run: if [[ -v CODACY_PROJECT_TOKEN ]]; then python-codacy-coverage -r coverage.xml || echo "failed"; fi
      
  test_leaks_CLI:
    docker:
      - image: qrledger/qrl-docker:xenial
    steps:
      - checkout
      - run: pip install -U setuptools
      - run: pip install -U -r requirements.txt
      - run: pip install -U -r test-requirements.txt
      - run: pip install -U pytest-openfiles pytest-leaks pytest-threadleak pytest-repeat
      - run: python3 setup.py test --addopts "tests/tools/ --open-files --threadleak -n0"

  flake8:
    docker:
      - image: qrledger/qrl-docker:xenial
    steps:
      - checkout
      - run: pip install -U setuptools
      - run: flake8

  test_leaks_other:
    docker:
      - image: qrledger/qrl-docker:xenial
    steps:
      - checkout
      - run: pip install -U setuptools
      - run: pip install -U -r requirements.txt
      - run: pip install -U -r test-requirements.txt
      - run: pip install -U pytest-openfiles pytest-leaks pytest-threadleak pytest-repeat
      - run: python3 setup.py test --addopts "--ignore=tests/tools/ --ignore=tests/daemon/ --ignore=tests/services/test_WalletAPIService.py --open-files --threadleak -n0"

  build_trusty:
    docker:
      - image: qrledger/qrl-docker:trusty
    steps:
      - checkout
      - run: pip install -U setuptools
      - run: pip install -U -r requirements.txt
      - run: pip install -U -r test-requirements.txt
      - run: python3 --version
      - run: python3 setup.py test

  build_bionic:
    docker:
      - image: qrledger/qrl-docker:bionic
    steps:
      - checkout
      - run: pip install -U setuptools
      - run: pip install -U -r requirements.txt
      - run: pip install -U -r test-requirements.txt
      - run: python3 setup.py test

  integration_fast:
    docker:
      - image: qrledger/qrl-docker:xenial
    environment:
      PYTHONPATH: /root/project:/root/project/tests_integration
      TESTINPLACE: 1
    steps:
      - checkout
      - run: git submodule update --init --recursive --remote
      - run: apt install -y python3-venv
      - run: pip install -U -r tests_integration/requirements.txt
      - run: ls tests_integration/tmp
      - run: pytest tests_integration/tests/python/fastnet_long

  integration_smoke:
    docker:
      - image: qrledger/qrl-docker:xenial
    environment:
      PYTHONPATH: /root/project:/root/project/tests_integration
      TESTINPLACE: 1
    steps:
      - checkout
      - run: git submodule update --init --recursive --remote
      - run: apt install -y python3-venv
      - run: pip install -U -r tests_integration/requirements.txt
      - run: ls tests_integration/tmp
      - run: pytest tests_integration/tests/python/basic
      - run: pytest tests_integration/tests/python/fork_recovery
      - run: pytest tests_integration/tests/python/fastnet_short

  integration_fuzzing:
    docker:
      - image: qrledger/qrl-docker:xenial
    environment:
      PYTHONPATH: /root/project:/root/project/tests_integration
      TESTINPLACE: 1
    steps:
      - checkout
      - run: git submodule update --init --recursive --remote
      - run: apt install -y python3-venv
      - run: pip install -U -r tests_integration/requirements.txt
      - run: pip install git+https://github.com/CurataEng/hypothesis-protobuf.git
      - run: pytest tests_integration/tests/python/fuzzing

  deploy-pypi:
    docker:
      - image: qrledger/qrl-docker:xenial
    steps:
      - checkout
      - run: git submodule update --init --recursive
      - run: python3 setup.py build sdist
      - run: pip install twine
      - run: twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD dist/*

workflows:
  version: 2
  build_all:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/

      - build_bionic:
          filters:
            tags:
              only: /.*/

      - flake8:
          filters:
            tags:
              only: /.*/

#      - test_leaks_CLI:
#          filters:
#            tags:
#              only: /.*/

      - test_leaks_other:
          filters:
            tags:
              only: /.*/

      - integration_smoke:
          filters:
            tags:
              only: /.*/

      - integration_fuzzing:
          filters:
            tags:
              only: /.*/

      - deploy-pypi:
          requires:
            - build
            - build_bionic
            - flake8
            #- test_leaks_CLI
            - test_leaks_other
            - integration_smoke
            - integration_fuzzing
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+(\.[0-9]+)*[a-z]?/
