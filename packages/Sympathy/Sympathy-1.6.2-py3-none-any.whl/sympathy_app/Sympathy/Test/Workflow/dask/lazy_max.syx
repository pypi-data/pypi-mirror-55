<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{d7a0c169-bf19-4028-9295-c709817fc0d7}" width="50.0" x="0.0" y="0.0">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <icon_filename/>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <overrides type="json">{}</overrides>
  <parameters type="json">{}</parameters>
  <ports/>
  <flow cls="Flow" height="50.0" id="" is_locked="True" uuid="{15354880-4bf9-4fa2-bfeb-994cfe436901}" width="50.0" x="1400.0" y="1975.0">
    <label>Dask "lazy"max subflow</label>
    <description></description>
    <author></author>
    <copyright></copyright>
    <version></version>
    <min_version></min_version>
    <icon_filename/>
    <aggregation type="json">null</aggregation>
    <libraries type="json">[]</libraries>
    <pythonpaths type="json">[]</pythonpaths>
    <overrides type="json">{}</overrides>
    <parameters type="json">{}</parameters>
    <ports>
      <input index="0" key="Port" optional="False" parent="True" scheme="hdf5" type="table" uuid="{6ba023f2-4365-4cb6-bd2b-d20c6331945a}" x="1275.0" y="1975.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <output index="0" key="Port" optional="False" parent="True" scheme="hdf5" type="table" uuid="{d6b54884-4101-4fa1-92fc-afd060b77190}" x="2750.0" y="1975.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
    <node id="org.sysess.sympathy.examples.dasktail" uuid="{1edb78b9-6022-4846-abae-67ba56a8f565}" x="2450.0" y="1975.0">
      <label>Dask tail example</label>
      <description>Node example demonstrating the tail of a table using dask.</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C)2017 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{57f845b2-bf40-4684-b8da-3a4f25af39a6}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <output key="output" scheme="hdf5" type="table" type_base="table" uuid="{65f048d1-5e1a-493d-87eb-9d99c83dc32c}">
          <label>Output Table</label>
          <description>Output Table</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.examples.daskstack" port_format="1.1" uuid="{4f624c21-da93-47b2-8fbb-331904f38e55}" x="1425.0" y="1975.0">
      <label>Dask stack example</label>
      <description>Node example demonstrating stacking tables using dask.</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C)2017 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{4dff85cc-dfb3-4ce4-8509-21c773870c39}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{124a48a9-0f70-46eb-9705-3e8c2caf9971}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{8ca2ef9d-764f-473c-b84f-d6da5cf81545}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{8bd8b5ad-aeb1-49ad-ac47-7ab58bdf90c3}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <output key="output" scheme="hdf5" type="table" type_base="table" uuid="{1b861251-bc5d-4149-8735-4e79c1f7ee98}">
          <label>Output Table</label>
          <description>Output Table</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.examples.dasktail" uuid="{50966122-f5ab-4bde-a33f-0b9262336f9a}" x="2300.0" y="1975.0">
      <label>Dask tail example</label>
      <description>Node example demonstrating the tail of a table using dask.</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C)2017 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{ddb386d2-d5bd-42a2-b4e5-741bedbc4e64}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <output key="output" scheme="hdf5" type="table" type_base="table" uuid="{d0b4a624-7821-4bf5-a25b-6729d372f9cc}">
          <label>Output Table</label>
          <description>Output Table</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.examples.dasktail" uuid="{60812187-790c-435b-b94a-ec90d8482e22}" x="2000.0" y="1975.0">
      <label>Dask tail example</label>
      <description>Node example demonstrating the tail of a table using dask.</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C)2017 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{f78ce6c8-5d61-4e90-895e-91ab28cf2e83}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <output key="output" scheme="hdf5" type="table" type_base="table" uuid="{d0be1d43-d731-4287-bb7c-f80de2ab5c34}">
          <label>Output Table</label>
          <description>Output Table</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.examples.daskstack" port_format="1.1" uuid="{9e8da717-c274-45d9-801d-f08fedca3205}" x="1875.0" y="1975.0">
      <label>Dask stack example</label>
      <description>Node example demonstrating stacking tables using dask.</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C)2017 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{b4c84dbe-f8f8-457c-98cd-a22c9372873a}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{a1b0f477-81f9-4858-b49e-af48d323add2}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{6c860839-a996-43b0-9fb6-fa2e782b4eba}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{5284142c-b50d-4ceb-b178-73cb2dd2cf03}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <output key="output" scheme="hdf5" type="table" type_base="table" uuid="{ef87e0cb-6ab2-4cd6-a438-afe21e274707}">
          <label>Output Table</label>
          <description>Output Table</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.examples.daskstack" port_format="1.1" uuid="{d4b45385-a545-4043-a0f8-7ed05ee1a312}" x="1575.0" y="1975.0">
      <label>Dask stack example</label>
      <description>Node example demonstrating stacking tables using dask.</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C)2017 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{566e574b-b181-47bb-a9ca-7db52479456d}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{b1a7f37b-bdca-4439-9e54-b2d11c8e1db6}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{405abba6-d433-4895-b300-f2fff4f63303}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{c231ac03-1600-400b-8b76-f909f8ba1152}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <output key="output" scheme="hdf5" type="table" type_base="table" uuid="{384f50e1-ebdf-4420-bf08-9267f48b97fe}">
          <label>Output Table</label>
          <description>Output Table</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.examples.daskmax" uuid="{d91534d0-5e1d-42be-89f1-e789d43a6ba3}" x="2600.0" y="1975.0">
      <label>Dask max example</label>
      <description>Node example demonstrating column-wise max using dask.</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C)2017 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{eb902ea8-9c5a-4c4f-be2f-a03cb0bcc862}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <output key="output" scheme="hdf5" type="table" type_base="table" uuid="{09378f5e-a84f-4dcf-a378-24e1b45dc4c0}">
          <label>Output Table</label>
          <description>Output Table</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.examples.dasktail" uuid="{ea9cd022-0033-4311-b530-4f21fad45722}" x="2150.0" y="1975.0">
      <label>Dask tail example</label>
      <description>Node example demonstrating the tail of a table using dask.</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C)2017 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{18d2f9cf-113e-4336-a5ed-687ec88de70d}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <output key="output" scheme="hdf5" type="table" type_base="table" uuid="{20e1ade2-1a1b-40a6-8bb6-9de0bcf94e86}">
          <label>Output Table</label>
          <description>Output Table</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.examples.daskstack" port_format="1.1" uuid="{eaa5bf3d-9191-4987-905a-7067fda35977}" x="1725.0" y="1975.0">
      <label>Dask stack example</label>
      <description>Node example demonstrating stacking tables using dask.</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C)2017 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{84ed926d-b301-4afb-86c4-ff744e8b7803}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{481229b3-f1ba-41b2-8b91-5f2cbb6dae20}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{05818fd0-7159-49fa-9971-9e409d24b1b6}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{56512ab9-f7d0-4688-8905-ad3040628856}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <output key="output" scheme="hdf5" type="table" type_base="table" uuid="{5cb3bcaa-228a-4974-8957-c0dd57d72eea}">
          <label>Output Table</label>
          <description>Output Table</description>
        </output>
      </ports>
    </node>
    <connection type="table" uuid="{0d7b94a8-3ad4-4546-88d7-dce99261b709}">
      <source node="{15354880-4bf9-4fa2-bfeb-994cfe436901}" port="{6ba023f2-4365-4cb6-bd2b-d20c6331945a}"/>
      <destination node="{4f624c21-da93-47b2-8fbb-331904f38e55}" port="{124a48a9-0f70-46eb-9705-3e8c2caf9971}"/>
    </connection>
    <connection type="table" uuid="{0ee00fb0-bb14-43ba-b8e3-0b46f5198234}">
      <source node="{d4b45385-a545-4043-a0f8-7ed05ee1a312}" port="{384f50e1-ebdf-4420-bf08-9267f48b97fe}"/>
      <destination node="{eaa5bf3d-9191-4987-905a-7067fda35977}" port="{84ed926d-b301-4afb-86c4-ff744e8b7803}"/>
    </connection>
    <connection type="table" uuid="{21bb6f7f-08f5-42aa-bb7e-c3b618171ac6}">
      <source node="{9e8da717-c274-45d9-801d-f08fedca3205}" port="{ef87e0cb-6ab2-4cd6-a438-afe21e274707}"/>
      <destination node="{60812187-790c-435b-b94a-ec90d8482e22}" port="{f78ce6c8-5d61-4e90-895e-91ab28cf2e83}"/>
    </connection>
    <connection type="table" uuid="{531ff16e-a10b-49e9-8418-873ca9272d67}">
      <source node="{eaa5bf3d-9191-4987-905a-7067fda35977}" port="{5cb3bcaa-228a-4974-8957-c0dd57d72eea}"/>
      <destination node="{9e8da717-c274-45d9-801d-f08fedca3205}" port="{a1b0f477-81f9-4858-b49e-af48d323add2}"/>
    </connection>
    <connection type="table" uuid="{589fdbcf-5c08-41ca-bb97-ff6d75b46cdd}">
      <source node="{50966122-f5ab-4bde-a33f-0b9262336f9a}" port="{d0b4a624-7821-4bf5-a25b-6729d372f9cc}"/>
      <destination node="{1edb78b9-6022-4846-abae-67ba56a8f565}" port="{57f845b2-bf40-4684-b8da-3a4f25af39a6}"/>
    </connection>
    <connection type="table" uuid="{77522558-6b5d-49b6-84a8-8f5d8409d235}">
      <source node="{ea9cd022-0033-4311-b530-4f21fad45722}" port="{20e1ade2-1a1b-40a6-8bb6-9de0bcf94e86}"/>
      <destination node="{50966122-f5ab-4bde-a33f-0b9262336f9a}" port="{ddb386d2-d5bd-42a2-b4e5-741bedbc4e64}"/>
    </connection>
    <connection type="table" uuid="{81ff4602-bbae-48c3-9982-a0a91f5b3c7b}">
      <source node="{4f624c21-da93-47b2-8fbb-331904f38e55}" port="{1b861251-bc5d-4149-8735-4e79c1f7ee98}"/>
      <destination node="{d4b45385-a545-4043-a0f8-7ed05ee1a312}" port="{405abba6-d433-4895-b300-f2fff4f63303}"/>
    </connection>
    <connection type="table" uuid="{8e99c6bd-3109-4779-b1a3-31e2117e3e62}">
      <source node="{eaa5bf3d-9191-4987-905a-7067fda35977}" port="{5cb3bcaa-228a-4974-8957-c0dd57d72eea}"/>
      <destination node="{9e8da717-c274-45d9-801d-f08fedca3205}" port="{5284142c-b50d-4ceb-b178-73cb2dd2cf03}"/>
    </connection>
    <connection type="table" uuid="{91df56a6-5aec-49cf-8acb-f9d001f7f9d3}">
      <source node="{15354880-4bf9-4fa2-bfeb-994cfe436901}" port="{6ba023f2-4365-4cb6-bd2b-d20c6331945a}"/>
      <destination node="{4f624c21-da93-47b2-8fbb-331904f38e55}" port="{4dff85cc-dfb3-4ce4-8509-21c773870c39}"/>
    </connection>
    <connection type="table" uuid="{985bbb55-a63d-4520-bbfa-050c23b896fb}">
      <source node="{15354880-4bf9-4fa2-bfeb-994cfe436901}" port="{6ba023f2-4365-4cb6-bd2b-d20c6331945a}"/>
      <destination node="{4f624c21-da93-47b2-8fbb-331904f38e55}" port="{8bd8b5ad-aeb1-49ad-ac47-7ab58bdf90c3}"/>
    </connection>
    <connection type="table" uuid="{a4732852-eddc-44c1-8218-af3389cddfd5}">
      <source node="{4f624c21-da93-47b2-8fbb-331904f38e55}" port="{1b861251-bc5d-4149-8735-4e79c1f7ee98}"/>
      <destination node="{d4b45385-a545-4043-a0f8-7ed05ee1a312}" port="{566e574b-b181-47bb-a9ca-7db52479456d}"/>
    </connection>
    <connection type="table" uuid="{ad17c16d-693b-492a-bfa9-c8f43ae30857}">
      <source node="{4f624c21-da93-47b2-8fbb-331904f38e55}" port="{1b861251-bc5d-4149-8735-4e79c1f7ee98}"/>
      <destination node="{d4b45385-a545-4043-a0f8-7ed05ee1a312}" port="{b1a7f37b-bdca-4439-9e54-b2d11c8e1db6}"/>
    </connection>
    <connection type="table" uuid="{ba2e93d3-21e2-4a90-9034-27b17324ef61}">
      <source node="{60812187-790c-435b-b94a-ec90d8482e22}" port="{d0be1d43-d731-4287-bb7c-f80de2ab5c34}"/>
      <destination node="{ea9cd022-0033-4311-b530-4f21fad45722}" port="{18d2f9cf-113e-4336-a5ed-687ec88de70d}"/>
    </connection>
    <connection type="table" uuid="{c21b5e2b-5050-4633-b0e2-53fa7bbc2cb5}">
      <source node="{d4b45385-a545-4043-a0f8-7ed05ee1a312}" port="{384f50e1-ebdf-4420-bf08-9267f48b97fe}"/>
      <destination node="{eaa5bf3d-9191-4987-905a-7067fda35977}" port="{481229b3-f1ba-41b2-8b91-5f2cbb6dae20}"/>
    </connection>
    <connection type="table" uuid="{c7310a55-2262-4f62-b01b-10f0114da596}">
      <source node="{1edb78b9-6022-4846-abae-67ba56a8f565}" port="{65f048d1-5e1a-493d-87eb-9d99c83dc32c}"/>
      <destination node="{d91534d0-5e1d-42be-89f1-e789d43a6ba3}" port="{eb902ea8-9c5a-4c4f-be2f-a03cb0bcc862}"/>
    </connection>
    <connection type="table" uuid="{d473ae94-0593-40f5-8b62-4a76e5711f84}">
      <source node="{eaa5bf3d-9191-4987-905a-7067fda35977}" port="{5cb3bcaa-228a-4974-8957-c0dd57d72eea}"/>
      <destination node="{9e8da717-c274-45d9-801d-f08fedca3205}" port="{b4c84dbe-f8f8-457c-98cd-a22c9372873a}"/>
    </connection>
    <connection type="table" uuid="{dc4f5c07-04d8-4af5-9c87-c4bf68c13d29}">
      <source node="{4f624c21-da93-47b2-8fbb-331904f38e55}" port="{1b861251-bc5d-4149-8735-4e79c1f7ee98}"/>
      <destination node="{d4b45385-a545-4043-a0f8-7ed05ee1a312}" port="{c231ac03-1600-400b-8b76-f909f8ba1152}"/>
    </connection>
    <connection type="table" uuid="{dd8660bb-1372-4a55-9567-f4ca410e0a08}">
      <source node="{d4b45385-a545-4043-a0f8-7ed05ee1a312}" port="{384f50e1-ebdf-4420-bf08-9267f48b97fe}"/>
      <destination node="{eaa5bf3d-9191-4987-905a-7067fda35977}" port="{56512ab9-f7d0-4688-8905-ad3040628856}"/>
    </connection>
    <connection type="table" uuid="{e04b286a-794d-408d-8fb3-d5d56fbc062a}">
      <source node="{eaa5bf3d-9191-4987-905a-7067fda35977}" port="{5cb3bcaa-228a-4974-8957-c0dd57d72eea}"/>
      <destination node="{9e8da717-c274-45d9-801d-f08fedca3205}" port="{6c860839-a996-43b0-9fb6-fa2e782b4eba}"/>
    </connection>
    <connection type="table" uuid="{ea9c0cb1-26e4-43ed-ab45-800ebc6baf6b}">
      <source node="{d91534d0-5e1d-42be-89f1-e789d43a6ba3}" port="{09378f5e-a84f-4dcf-a378-24e1b45dc4c0}"/>
      <destination node="{15354880-4bf9-4fa2-bfeb-994cfe436901}" port="{d6b54884-4101-4fa1-92fc-afd060b77190}"/>
    </connection>
    <connection type="table" uuid="{f3a235c4-2ce9-4932-b0e8-ba9e830b65b6}">
      <source node="{d4b45385-a545-4043-a0f8-7ed05ee1a312}" port="{384f50e1-ebdf-4420-bf08-9267f48b97fe}"/>
      <destination node="{eaa5bf3d-9191-4987-905a-7067fda35977}" port="{05818fd0-7159-49fa-9971-9e409d24b1b6}"/>
    </connection>
    <connection type="table" uuid="{f62e3768-f9f8-4bf4-864c-d3aac8b38bdb}">
      <source node="{15354880-4bf9-4fa2-bfeb-994cfe436901}" port="{6ba023f2-4365-4cb6-bd2b-d20c6331945a}"/>
      <destination node="{4f624c21-da93-47b2-8fbb-331904f38e55}" port="{8ca2ef9d-764f-473c-b84f-d6da5cf81545}"/>
    </connection>
    <text color="Purple" height="275.0" uuid="{4c5e7e21-bbd9-4915-9d05-ed2fd203d054}" width="1575.0" x="1250.0" y="1800.0">Dask example.

Data is realized in the final node (max) when executed in a locked subflow otherwise this happens after every node, as usual.</text>
    <text color="Beige" height="75.0" uuid="{3c69fe3e-2991-4108-8bca-bb2aa4160eb6}" width="550.0" x="1400.0" y="1875.0">Stack input 256 times</text>
    <text color="Beige" height="75.0" uuid="{530f664d-d64e-41dd-ade5-54c6157939e4}" width="550.0" x="1975.0" y="1875.0">Remove 4 rows in steps</text>
    <text color="Beige" height="75.0" uuid="{065079e4-e87e-42c3-821f-fb55c1d11ac7}" width="100.0" x="2575.0" y="1875.0">Maximum value for each column</text>
  </flow>
  <node id="org.sysess.sympathy.create.createtable" uuid="{7e524365-08bb-4dfa-80bf-9c2c0150d65a}" x="1250.0" y="1975.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "json_table": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"float\", \"f\", [0.1, 1.1, 2.2, 3.3, 4.4]], [\"int\", \"i\", [0, 1, 2, 3, 4]], [\"bool\", \"b\", [false, true, true, true, true]]]"}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{5404ba52-ce4f-4d08-81d1-696ac5c09450}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.assertequaltable" uuid="{b26eb696-373b-4ee2-87fd-2269609bf0ab}" x="1550.0" y="1975.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "col_order": {"description": "Differing column order will trigger error", "editor": null, "label": "Compare column order", "order": 0, "type": "boolean", "value": true}, "col_attrs": {"description": "Differing column attributes will trigger error", "editor": null, "label": "Compare column attributes", "order": 1, "type": "boolean", "value": true}, "tbl_names": {"description": "Differing table name will trigger error", "editor": null, "label": "Compare table names", "order": 2, "type": "boolean", "value": true}, "tbl_attrs": {"description": "Differing table attributes will trigger error", "editor": null, "label": "Compare table attributes", "order": 3, "type": "boolean", "value": true}, "inexact_float": {"description": "If any arithemtics is invovled floats should probably be compared approximately.", "editor": null, "label": "Approximate comparison of floats", "order": 4, "type": "boolean", "value": false}, "rel_tol": {"description": "Floats are considered unequal if the relative difference between them is larger than this value.", "editor": null, "label": "Relative tolerance", "order": 5, "type": "float", "value": 1e-05}, "abs_tol": {"description": "Floats are considered unequal if the absolute difference between them is larger than this value.", "editor": null, "label": "Absolute tolerance", "order": 6, "type": "float", "value": 1e-08}}</parameters>
    <ports>
      <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{ac489a93-d381-41df-830b-df970ac65bb0}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{2736572c-9515-4857-b4a0-87f3a285b951}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{e38992ed-c3e2-48a0-98ef-7db4d513b240}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.examples.daskmax" uuid="{df4199e1-6490-4169-8cff-801d8c535b12}" x="1400.0" y="2075.0">
    <label>Dask max example</label>
    <description>Node example demonstrating column-wise max using dask.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C)2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{1ab9a4be-a86d-46ae-b0f6-be0e6e119706}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="output" scheme="hdf5" type="table" type_base="table" uuid="{d41ee0f0-8edc-40d5-a86c-7a4897d03c3d}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{07bb5c9d-3f19-48ab-a734-233f31f9398a}">
    <source node="{df4199e1-6490-4169-8cff-801d8c535b12}" port="{d41ee0f0-8edc-40d5-a86c-7a4897d03c3d}"/>
    <destination node="{b26eb696-373b-4ee2-87fd-2269609bf0ab}" port="{2736572c-9515-4857-b4a0-87f3a285b951}"/>
  </connection>
  <connection type="table" uuid="{45a32a87-c25b-442d-8e0a-dacfa7bbe048}">
    <source node="{7e524365-08bb-4dfa-80bf-9c2c0150d65a}" port="{5404ba52-ce4f-4d08-81d1-696ac5c09450}"/>
    <destination node="{df4199e1-6490-4169-8cff-801d8c535b12}" port="{1ab9a4be-a86d-46ae-b0f6-be0e6e119706}"/>
  </connection>
  <connection type="table" uuid="{9238ced7-8263-4eee-b31c-7f9abe0e8ae0}">
    <source node="{7e524365-08bb-4dfa-80bf-9c2c0150d65a}" port="{5404ba52-ce4f-4d08-81d1-696ac5c09450}"/>
    <destination node="{15354880-4bf9-4fa2-bfeb-994cfe436901}" port="{6ba023f2-4365-4cb6-bd2b-d20c6331945a}"/>
  </connection>
  <connection type="table" uuid="{f604fb4d-3290-490f-a208-041825b9a4e6}">
    <source node="{15354880-4bf9-4fa2-bfeb-994cfe436901}" port="{d6b54884-4101-4fa1-92fc-afd060b77190}"/>
    <destination node="{b26eb696-373b-4ee2-87fd-2269609bf0ab}" port="{ac489a93-d381-41df-830b-df970ac65bb0}"/>
  </connection>
  <text color="Beige" height="75.0" uuid="{b86ba958-fe67-4cef-9864-e69cf4410239}" width="375.0" x="1250.0" y="1875.0">Dask example, needs to execute in a locked subflow.</text>
</flow>
