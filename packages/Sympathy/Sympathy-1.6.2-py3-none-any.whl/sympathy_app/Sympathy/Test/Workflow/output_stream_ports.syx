<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{44a5a284-a295-4425-9195-b3e2d94f6176}" width="50.0" x="0.0" y="0.0">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <icon/>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <overrides type="json">{}</overrides>
  <environment type="json">{}</environment>
  <parameters type="json">{"environment": {}}</parameters>
  <ports/>
  <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{55fb0df7-6039-4c1f-975f-d105a9df0ee7}" width="50.0" x="1725.0" y="1800.0">
    <label>New Lambda 4</label>
    <description></description>
    <author></author>
    <copyright></copyright>
    <version></version>
    <min_version></min_version>
    <icon/>
    <aggregation type="json">null</aggregation>
    <libraries type="json">[]</libraries>
    <pythonpaths type="json">[]</pythonpaths>
    <overrides type="json">{}</overrides>
    <environment type="json">{}</environment>
    <parameters type="json">{"environment": {}}</parameters>
    <ports>
      <input index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="table" uuid="{43fd3861-413c-4d86-8012-45f73ca6121e}" x="1850.0" y="2000.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <output index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="table" uuid="{80a135ab-0972-471c-af6c-914006c2e85b}" x="2100.0" y="2000.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
    <basic_ports>
      <output key="Function" scheme="hdf5" type="table -&gt; table" type_base="&lt;a&gt;" uuid="{0d4913d0-1eb8-42d8-9116-40042163b2b8}">
        <label>Lambda function</label>
        <description>Lambda function</description>
      </output>
    </basic_ports>
    <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{772f582a-a1bd-4a51-814d-b2d842dd0d38}" x="1975.0" y="2000.0">
      <label>Conditional error/warning</label>
      <description>Raise an error if a predicate is True.</description>
      <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
      <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: True  # Identity filter", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [1], "value_names": ["Warning"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
      <ports>
        <input key="in" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{b36776fa-d159-4acc-a46f-7aea466d01f0}">
          <label>Input</label>
          <description>Input</description>
        </input>
        <output key="out" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{19aea44c-ee8f-4e51-bf5d-02d80a7fd3bc}">
          <label>Output</label>
          <description>Output</description>
        </output>
      </ports>
    </node>
    <connection type="table" uuid="{31818cc6-951e-4d7c-acc1-c89cba29c0e9}">
      <source node="{772f582a-a1bd-4a51-814d-b2d842dd0d38}" port="{19aea44c-ee8f-4e51-bf5d-02d80a7fd3bc}"/>
      <destination node="{55fb0df7-6039-4c1f-975f-d105a9df0ee7}" port="{80a135ab-0972-471c-af6c-914006c2e85b}"/>
    </connection>
    <connection type="table" uuid="{ea042651-6aeb-4a97-a18a-c40ea920cf66}">
      <source node="{55fb0df7-6039-4c1f-975f-d105a9df0ee7}" port="{43fd3861-413c-4d86-8012-45f73ca6121e}"/>
      <destination node="{772f582a-a1bd-4a51-814d-b2d842dd0d38}" port="{b36776fa-d159-4acc-a46f-7aea466d01f0}"/>
    </connection>
  </flow>
  <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{936e270e-23f1-4a8a-9449-20ff250316f5}" width="50.0" x="1725.0" y="1600.0">
    <label>New Lambda 4</label>
    <description></description>
    <author></author>
    <copyright></copyright>
    <version></version>
    <min_version></min_version>
    <icon/>
    <aggregation type="json">null</aggregation>
    <libraries type="json">[]</libraries>
    <pythonpaths type="json">[]</pythonpaths>
    <overrides type="json">{}</overrides>
    <environment type="json">{}</environment>
    <parameters type="json">{"environment": {}}</parameters>
    <ports>
      <input index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="table" uuid="{06256a54-6139-4579-a245-350d55398046}" x="1850.0" y="2000.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <output index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="table" uuid="{43bd080e-c266-4b07-8fc3-e1c130322e67}" x="2100.0" y="2000.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
    <basic_ports>
      <output key="Function" scheme="hdf5" type="table -&gt; table" type_base="&lt;a&gt;" uuid="{601e0ed3-30a3-4ef7-9a1a-66ae26d3846f}">
        <label>Lambda function</label>
        <description>Lambda function</description>
      </output>
    </basic_ports>
    <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{106e2370-71d7-416b-9c94-38d85ed38bdd}" x="1975.0" y="2000.0">
      <label>Conditional error/warning</label>
      <description>Raise an error if a predicate is True.</description>
      <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
      <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: True  # Identity filter", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
      <ports>
        <input key="in" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{f10111e7-0b80-4431-b791-9c25cd0c4482}">
          <label>Input</label>
          <description>Input</description>
        </input>
        <output key="out" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{a9e0d6ae-cca6-45ee-ba58-c16000800230}">
          <label>Output</label>
          <description>Output</description>
        </output>
      </ports>
    </node>
    <connection type="table" uuid="{38e10724-2220-4adb-a79a-f2cf1eae4937}">
      <source node="{106e2370-71d7-416b-9c94-38d85ed38bdd}" port="{a9e0d6ae-cca6-45ee-ba58-c16000800230}"/>
      <destination node="{936e270e-23f1-4a8a-9449-20ff250316f5}" port="{43bd080e-c266-4b07-8fc3-e1c130322e67}"/>
    </connection>
    <connection type="table" uuid="{591d1e8b-dfb0-4074-9e94-651d5c623854}">
      <source node="{936e270e-23f1-4a8a-9449-20ff250316f5}" port="{06256a54-6139-4579-a245-350d55398046}"/>
      <destination node="{106e2370-71d7-416b-9c94-38d85ed38bdd}" port="{f10111e7-0b80-4431-b791-9c25cd0c4482}"/>
    </connection>
  </flow>
  <node id="org.sysess.sympathy.data.table.conditionalerror" port_format="1.1" uuid="{09bd8bef-7789-4fbc-b549-c731a7d83626}" x="1850.0" y="2550.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: True  # Identity filter", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [1], "value_names": ["Warning"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{47c3ea13-a8e1-4644-9fec-e97f75dafd18}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{4ffdfac5-e1fd-4e02-9c63-8376835dde06}">
        <label>Output</label>
        <description>Output</description>
      </output>
      <output key="__sy_both__" scheme="hdf5" type="text" type_base="text" uuid="{7e8046c9-eca2-4437-b88b-20ee49f8e058}">
        <label>Prints and Warnings</label>
        <description>Prints and Warnings</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{1246d465-2196-4df4-87e7-3da78ab09a20}" x="1975.0" y="1900.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: not \"Error\" in arg.get()", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{5da70c89-ca96-4712-989f-d47f8ab8fb41}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{00751927-e07a-4695-81a7-cbd816900435}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" port_format="1.1" uuid="{23bdf58a-7128-4e0f-8cfc-1131f944551d}" x="1850.0" y="2250.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: True  # Identity filter", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [2], "value_names": ["Output"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{e6be1389-4442-451c-9f81-63e3b01e4097}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{47d30802-cbb7-4d12-8452-7ed41e451903}">
        <label>Output</label>
        <description>Output</description>
      </output>
      <output key="__sy_out__" scheme="hdf5" type="text" type_base="text" uuid="{0cac5ba6-0fb1-4226-b3af-ffae266b1c4d}">
        <label>Prints</label>
        <description>Prints</description>
      </output>
      <output key="__sy_err__" scheme="hdf5" type="text" type_base="text" uuid="{5fcd75f0-2c07-4cb8-8f8b-cc241411d22e}">
        <label>Warnings</label>
        <description>Warnings</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{29ab8b9e-d6c4-436f-b93c-582ae07ab895}" x="1975.0" y="1800.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: not arg.get().count(\"Error\") == 5", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{c7983b23-b680-4f5d-9187-718769b60ec3}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{5eb07619-b2f1-4a1f-8314-b19aed91a2bd}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.map" port_format="1.1" uuid="{390a6a78-d3c4-4935-92db-83dc179cf960}" x="1875.0" y="1600.0">
    <label>Map</label>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "fail_strategy": {"description": "Decide how failure to process an item should be handled.", "label": "Action on exception", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["Error", "Create Empty Item", "Skip Item"], "value": [2], "value_names": ["Skip Item"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="table -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{b5e8b6ce-e132-47e3-9f68-36f0365c52f5}">
        <label>Lambda Function to Map</label>
        <description>Lambda Function to Map</description>
      </input>
      <input key="List" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{fa9a27f3-90ca-475e-af44-44fd74deaa60}">
        <label>Argument List</label>
        <description>Argument List</description>
      </input>
      <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{2717fbe7-5b72-4424-b44b-ed2e959e1ffd}">
        <label>Output List</label>
        <description>Output List</description>
      </output>
      <output key="__sy_out__" scheme="hdf5" type="text" type_base="text" uuid="{d34493c1-0356-4996-a1b4-8f5da04bfedc}">
        <label>Prints</label>
        <description>Prints</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.apply" port_format="1.1" uuid="{4ce8ad42-6c77-4a96-a33d-958f2aa13bb4}" x="1850.0" y="1900.0">
    <label>Apply</label>
    <description>Apply Lambda function to Argument</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="table -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{6921504c-9e0b-42d8-8169-6e6fb03b51d3}">
        <label>Lambda Function to Apply</label>
        <description>Lambda Function to Apply</description>
      </input>
      <input key="Argument" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{853f6f44-ad42-4100-b214-eb6696846eb5}">
        <label>Argument</label>
        <description>Argument</description>
      </input>
      <output key="Output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{4f48d7fe-4793-4b8e-aa9a-b6488105d8de}">
        <label>Output</label>
        <description>Output</description>
      </output>
      <output key="__sy_err__" scheme="hdf5" type="text" type_base="text" uuid="{b52bad27-0291-468e-8e29-349a44c3a243}">
        <label>Warnings</label>
        <description>Warnings</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.appendlistnew" uuid="{4d86d4d0-5952-4512-8354-f787ea3139dd}" x="2100.0" y="2150.0">
    <label>Append List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[text]" type_base="[&lt;a&gt;]" uuid="{096e6080-55f3-488c-8535-06fdedd91d23}">
        <label>Appended List</label>
        <description>Appended List</description>
      </input>
      <input key="item" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{d88f009e-9aa1-45cd-a1b4-ce22d5db1fa9}">
        <label>The Item to be appended</label>
        <description>The Item to be appended</description>
      </input>
      <output key="list" scheme="hdf5" type="[text]" type_base="[&lt;a&gt;]" uuid="{fc2f5823-5bac-4e98-9ae9-1b58f7ee8f9a}">
        <label>Appended List</label>
        <description>Appended List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" port_format="1.1" uuid="{5a4f3dbf-cd7c-478a-b27a-372068566bc0}" x="1850.0" y="2150.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: True  # Identity filter", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [1], "value_names": ["Warning"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{6f36a086-015c-4f13-b6a2-eaaa32ef4b48}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{060691f8-41fd-4199-924f-2d67f6426be4}">
        <label>Output</label>
        <description>Output</description>
      </output>
      <output key="__sy_err__" scheme="hdf5" type="text" type_base="text" uuid="{987aa92e-e206-429d-a7bc-183e283e6888}">
        <label>Warnings</label>
        <description>Warnings</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" uuid="{6194d432-cd8d-4eff-867d-a685e3ca4377}" x="1975.0" y="2050.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "n": {"description": "Choose number of times to repeat items.", "editor": null, "label": "Repeat number of times", "order": 0, "type": "integer", "value": 1}}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{40eacc1c-f55f-4a6a-87ef-48de26013f9a}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" scheme="hdf5" type="[text]" type_base="[&lt;a&gt;]" uuid="{baf01043-31b7-4364-9458-9c837a9054f8}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" port_format="1.1" uuid="{84a586cc-e1a6-47b3-9a45-392bb8a4ea26}" x="2225.0" y="2250.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: not all([arg[0].get() == a.get() for a in arg])", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[text]" type_base="&lt;a&gt;" uuid="{9bb15a30-b41a-455d-af9e-4cb62a14a609}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[text]" type_base="&lt;a&gt;" uuid="{a84b7c8d-76d9-43e6-947d-821463b952f8}">
        <label>Output</label>
        <description>Output</description>
      </output>
      <output key="__sy_out__" scheme="hdf5" type="text" type_base="text" uuid="{700d06db-e119-42d9-bd7c-a0bc98ce0795}">
        <label>Prints</label>
        <description>Prints</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" port_format="1.1" uuid="{8b8b1236-a2e2-442c-b088-fefedc5c89c1}" x="1850.0" y="2050.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: True  # Identity filter", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [2], "value_names": ["Output"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{c2f1be91-b7e5-4fae-a8c0-a2f8a188dba4}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{27f7450d-add2-4ccc-958b-85731142298c}">
        <label>Output</label>
        <description>Output</description>
      </output>
      <output key="__sy_out__" scheme="hdf5" type="text" type_base="text" uuid="{397baacf-c104-4d1f-a6e4-14f6641a2aac}">
        <label>Prints</label>
        <description>Prints</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtables" uuid="{8c76acf7-7ec7-4adc-a11c-3141d35c556c}" x="1725.0" y="1700.0">
    <label>Random Tables</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_entries": {"description": "The number of columns in the generated table.", "label": "Columns:", "order": 0, "type": "integer", "value": 5, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The number of rows in the generated table.", "label": "Rows:", "order": 1, "type": "integer", "value": 5, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "If checked each value has a 50% chance to be masked.", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}, "length": {"description": "The number of tables to be generated.", "label": "List length", "order": 3, "type": "integer", "value": 5, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{47239466-39be-453d-885d-d590664e9de2}">
        <label>Tables with random numbers. The specifications of the Tables are declared in the configuration.</label>
        <description>Tables with random numbers. The specifications of the Tables are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{8fbc2e43-a4f4-4715-9cd4-bc09cf2c545e}" x="1975.0" y="1600.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: not arg.get().count(\"Skip\") == 5", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{b0856f15-cf83-4ecf-8c9c-9c6ffc59ae51}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{4c6990c1-67b0-45dc-ac8e-57f5089a726b}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" port_format="1.1" uuid="{94d74a01-3f0f-4c00-b9d2-4bcde85ce13e}" x="1850.0" y="2350.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: True  # Identity filter", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [1], "value_names": ["Warning"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{33b0808f-db44-46bf-becd-56c36b7945d1}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{08daab3e-0bd1-4389-b00a-c2d02a07c05a}">
        <label>Output</label>
        <description>Output</description>
      </output>
      <output key="__sy_out__" scheme="hdf5" type="text" type_base="text" uuid="{1b66f1ac-19d4-46fc-b396-687ac6e196d1}">
        <label>Prints</label>
        <description>Prints</description>
      </output>
      <output key="__sy_err__" scheme="hdf5" type="text" type_base="text" uuid="{df963734-4ceb-4cdd-a9e6-f90ce1b578e1}">
        <label>Warnings</label>
        <description>Warnings</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" port_format="1.1" uuid="{a3545189-ab48-47f9-85bc-ed03e5f4f201}" x="1850.0" y="2450.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: True  # Identity filter", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [2], "value_names": ["Output"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{30eb7454-a09f-4901-84f8-c5d6da21635c}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{3b5612ea-60c8-450b-ab9b-9115392ead84}">
        <label>Output</label>
        <description>Output</description>
      </output>
      <output key="__sy_both__" scheme="hdf5" type="text" type_base="text" uuid="{3d160857-255f-4cd6-8315-4da128df2ede}">
        <label>Prints and Warnings</label>
        <description>Prints and Warnings</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.appendlistnew" port_format="1.1" uuid="{bee4e058-c54a-4de6-9124-eac2f3b1e40c}" x="2100.0" y="2250.0">
    <label>Append List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[text]" type_base="[&lt;a&gt;]" uuid="{55976b15-9311-49a3-826c-4cef25607e80}">
        <label>Appended List</label>
        <description>Appended List</description>
      </input>
      <input key="item" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{028cb75e-9f36-4d9a-b11c-34f8cd0eebec}">
        <label>The Item to be appended</label>
        <description>The Item to be appended</description>
      </input>
      <input key="item" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{02b9ee64-592e-4877-9435-73698aa317c7}">
        <label>The Item to be appended</label>
        <description>The Item to be appended</description>
      </input>
      <input key="item" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{8313df8b-3ff7-492c-8ef8-5ae0bf80b43d}">
        <label>The Item to be appended</label>
        <description>The Item to be appended</description>
      </input>
      <input key="item" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{f03beadd-f75b-4e2b-8265-0a0a19d2a21e}">
        <label>The Item to be appended</label>
        <description>The Item to be appended</description>
      </input>
      <input key="item" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{ed7fca5f-a9ce-4f85-a7d7-3d07d9251c03}">
        <label>The Item to be appended</label>
        <description>The Item to be appended</description>
      </input>
      <output key="list" scheme="hdf5" type="[text]" type_base="[&lt;a&gt;]" uuid="{edfdd78b-2ede-47b2-b6a3-2ed579193b62}">
        <label>Appended List</label>
        <description>Appended List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.map" port_format="1.1" uuid="{c086a24b-c23f-4d91-9fc1-712481db392b}" x="1850.0" y="1800.0">
    <label>Map</label>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "fail_strategy": {"description": "Decide how failure to process an item should be handled.", "label": "Action on exception", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["Error", "Create Empty Item", "Skip Item"], "value": [2], "value_names": ["Skip Item"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="table -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{ecd88242-76fd-4770-89f3-b640d699f548}">
        <label>Lambda Function to Map</label>
        <description>Lambda Function to Map</description>
      </input>
      <input key="List" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{8011e6eb-16f6-4d28-b190-bb6e71754d44}">
        <label>Argument List</label>
        <description>Argument List</description>
      </input>
      <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{acf51399-ef8d-4f48-9bc6-bfc0cb891e35}">
        <label>Output List</label>
        <description>Output List</description>
      </output>
      <output key="__sy_err__" scheme="hdf5" type="text" type_base="text" uuid="{b6a77309-32d4-4464-802b-0394fbdedc8a}">
        <label>Warnings</label>
        <description>Warnings</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtable" uuid="{e3aaa311-d8fb-491f-838d-98350abb37e9}" x="1725.0" y="2050.0">
    <label>Random Table</label>
    <description>Random Table generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_entries": {"description": "The number of columns in the generated table.", "label": "Columns:", "order": 0, "type": "integer", "value": 5, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The number of rows in the generated table.", "label": "Rows:", "order": 1, "type": "integer", "value": 5, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "If checked each value has a 50% chance to be masked.", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{f77a1f6f-1447-4101-b572-9059041cbd4c}">
        <label>Table with random numbers. The specifications of the Table are declared in the configuration.</label>
        <description>Table with random numbers. The specifications of the Table are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" uuid="{f61648c2-0ed6-4a44-b39a-25cf124575c9}" x="1975.0" y="2150.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "n": {"description": "Choose number of times to repeat items.", "editor": null, "label": "Repeat number of times", "order": 0, "type": "integer", "value": 1}}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{e7dc1edf-e72b-4840-a160-1b77ff312079}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" scheme="hdf5" type="[text]" type_base="[&lt;a&gt;]" uuid="{1f2d5fe3-0242-4387-bf29-f8bdf6589ccc}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" port_format="1.1" uuid="{f7b267fb-1e14-41db-9300-e938deefa7d4}" x="2225.0" y="2150.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: not all([\"\" == a.get() for a in arg])", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[text]" type_base="&lt;a&gt;" uuid="{029fc7a4-820d-462f-8d99-14821c7886fa}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[text]" type_base="&lt;a&gt;" uuid="{a1cd2c96-8632-4847-b0f2-3046baf71bee}">
        <label>Output</label>
        <description>Output</description>
      </output>
      <output key="__sy_out__" scheme="hdf5" type="text" type_base="text" uuid="{7682281c-fab1-4d85-beff-87bda2eef0b7}">
        <label>Prints</label>
        <description>Prints</description>
      </output>
    </ports>
  </node>
  <connection type="text" uuid="{032a167c-ba37-4197-bfec-a69dc1aa1750}">
    <source node="{94d74a01-3f0f-4c00-b9d2-4bcde85ce13e}" port="{1b66f1ac-19d4-46fc-b396-687ac6e196d1}"/>
    <destination node="{4d86d4d0-5952-4512-8354-f787ea3139dd}" port="{d88f009e-9aa1-45cd-a1b4-ce22d5db1fa9}"/>
  </connection>
  <connection type="table" uuid="{2464c2db-eb78-44b5-b0b5-107dd8b83e91}">
    <source node="{e3aaa311-d8fb-491f-838d-98350abb37e9}" port="{f77a1f6f-1447-4101-b572-9059041cbd4c}"/>
    <destination node="{8b8b1236-a2e2-442c-b088-fefedc5c89c1}" port="{c2f1be91-b7e5-4fae-a8c0-a2f8a188dba4}"/>
  </connection>
  <connection type="text" uuid="{2f6b3c99-5c66-42b6-acef-20c3aa334d47}">
    <source node="{23bdf58a-7128-4e0f-8cfc-1131f944551d}" port="{0cac5ba6-0fb1-4226-b3af-ffae266b1c4d}"/>
    <destination node="{bee4e058-c54a-4de6-9124-eac2f3b1e40c}" port="{02b9ee64-592e-4877-9435-73698aa317c7}"/>
  </connection>
  <connection type="table" uuid="{33e877e4-5e99-46a3-b79d-572dcab4a24f}">
    <source node="{e3aaa311-d8fb-491f-838d-98350abb37e9}" port="{f77a1f6f-1447-4101-b572-9059041cbd4c}"/>
    <destination node="{23bdf58a-7128-4e0f-8cfc-1131f944551d}" port="{e6be1389-4442-451c-9f81-63e3b01e4097}"/>
  </connection>
  <connection type="text" uuid="{33f2e226-603a-4ef1-af4d-c33cad5963df}">
    <source node="{a3545189-ab48-47f9-85bc-ed03e5f4f201}" port="{3d160857-255f-4cd6-8315-4da128df2ede}"/>
    <destination node="{bee4e058-c54a-4de6-9124-eac2f3b1e40c}" port="{f03beadd-f75b-4e2b-8265-0a0a19d2a21e}"/>
  </connection>
  <connection type="text" uuid="{37e676bc-298c-42cb-9663-bfc63f875798}">
    <source node="{4ce8ad42-6c77-4a96-a33d-958f2aa13bb4}" port="{b52bad27-0291-468e-8e29-349a44c3a243}"/>
    <destination node="{1246d465-2196-4df4-87e7-3da78ab09a20}" port="{5da70c89-ca96-4712-989f-d47f8ab8fb41}"/>
  </connection>
  <connection type="text" uuid="{4142d25b-e7b1-468a-a7d6-1c1f40793692}">
    <source node="{8b8b1236-a2e2-442c-b088-fefedc5c89c1}" port="{397baacf-c104-4d1f-a6e4-14f6641a2aac}"/>
    <destination node="{6194d432-cd8d-4eff-867d-a685e3ca4377}" port="{40eacc1c-f55f-4a6a-87ef-48de26013f9a}"/>
  </connection>
  <connection type="table" uuid="{49518489-d5a9-426d-95b8-f87d89bd5b43}">
    <source node="{e3aaa311-d8fb-491f-838d-98350abb37e9}" port="{f77a1f6f-1447-4101-b572-9059041cbd4c}"/>
    <destination node="{94d74a01-3f0f-4c00-b9d2-4bcde85ce13e}" port="{33b0808f-db44-46bf-becd-56c36b7945d1}"/>
  </connection>
  <connection type="text" uuid="{4a3a0cb8-6b1b-4818-9a31-c85d1f1aaaba}">
    <source node="{94d74a01-3f0f-4c00-b9d2-4bcde85ce13e}" port="{df963734-4ceb-4cdd-a9e6-f90ce1b578e1}"/>
    <destination node="{bee4e058-c54a-4de6-9124-eac2f3b1e40c}" port="{8313df8b-3ff7-492c-8ef8-5ae0bf80b43d}"/>
  </connection>
  <connection type="[text]" uuid="{5f760f8d-be73-48c3-b957-57d7d92b2099}">
    <source node="{f61648c2-0ed6-4a44-b39a-25cf124575c9}" port="{1f2d5fe3-0242-4387-bf29-f8bdf6589ccc}"/>
    <destination node="{4d86d4d0-5952-4512-8354-f787ea3139dd}" port="{096e6080-55f3-488c-8535-06fdedd91d23}"/>
  </connection>
  <connection type="text" uuid="{607a88fb-b44a-4ef0-aa4c-4e7e300d6dcf}">
    <source node="{23bdf58a-7128-4e0f-8cfc-1131f944551d}" port="{5fcd75f0-2c07-4cb8-8f8b-cc241411d22e}"/>
    <destination node="{f61648c2-0ed6-4a44-b39a-25cf124575c9}" port="{e7dc1edf-e72b-4840-a160-1b77ff312079}"/>
  </connection>
  <connection type="text" uuid="{6d37c3c0-91c9-4b1d-a4cb-1945b52568c0}">
    <source node="{5a4f3dbf-cd7c-478a-b27a-372068566bc0}" port="{987aa92e-e206-429d-a7bc-183e283e6888}"/>
    <destination node="{bee4e058-c54a-4de6-9124-eac2f3b1e40c}" port="{028cb75e-9f36-4d9a-b11c-34f8cd0eebec}"/>
  </connection>
  <connection type="table -&gt; table" uuid="{7857941e-5e4d-4a6d-8a7a-b1ab49fa499e}">
    <source node="{936e270e-23f1-4a8a-9449-20ff250316f5}" port="{601e0ed3-30a3-4ef7-9a1a-66ae26d3846f}"/>
    <destination node="{390a6a78-d3c4-4935-92db-83dc179cf960}" port="{b5e8b6ce-e132-47e3-9f68-36f0365c52f5}"/>
  </connection>
  <connection type="table -&gt; table" uuid="{895dfc96-02ee-446d-b9aa-362399ba6e11}">
    <source node="{55fb0df7-6039-4c1f-975f-d105a9df0ee7}" port="{0d4913d0-1eb8-42d8-9116-40042163b2b8}"/>
    <destination node="{c086a24b-c23f-4d91-9fc1-712481db392b}" port="{ecd88242-76fd-4770-89f3-b640d699f548}"/>
  </connection>
  <connection type="table" uuid="{8b2c5487-7262-421f-80ed-43569d008bdb}">
    <source node="{e3aaa311-d8fb-491f-838d-98350abb37e9}" port="{f77a1f6f-1447-4101-b572-9059041cbd4c}"/>
    <destination node="{4ce8ad42-6c77-4a96-a33d-958f2aa13bb4}" port="{853f6f44-ad42-4100-b214-eb6696846eb5}"/>
  </connection>
  <connection type="table" uuid="{94eac74f-28ba-4353-8de0-20827dff1b1b}">
    <source node="{e3aaa311-d8fb-491f-838d-98350abb37e9}" port="{f77a1f6f-1447-4101-b572-9059041cbd4c}"/>
    <destination node="{a3545189-ab48-47f9-85bc-ed03e5f4f201}" port="{30eb7454-a09f-4901-84f8-c5d6da21635c}"/>
  </connection>
  <connection type="text" uuid="{9ee1d671-a9d1-4df2-8946-95ff7153f739}">
    <source node="{390a6a78-d3c4-4935-92db-83dc179cf960}" port="{d34493c1-0356-4996-a1b4-8f5da04bfedc}"/>
    <destination node="{8fbc2e43-a4f4-4715-9cd4-bc09cf2c545e}" port="{b0856f15-cf83-4ecf-8c9c-9c6ffc59ae51}"/>
  </connection>
  <connection type="[table]" uuid="{a9e2b717-4886-4237-b5cc-8e6ebafb4cd6}">
    <source node="{8c76acf7-7ec7-4adc-a11c-3141d35c556c}" port="{47239466-39be-453d-885d-d590664e9de2}"/>
    <destination node="{c086a24b-c23f-4d91-9fc1-712481db392b}" port="{8011e6eb-16f6-4d28-b190-bb6e71754d44}"/>
  </connection>
  <connection type="[table]" uuid="{c08c7bb2-3f28-4034-8f45-740c9f993c37}">
    <source node="{8c76acf7-7ec7-4adc-a11c-3141d35c556c}" port="{47239466-39be-453d-885d-d590664e9de2}"/>
    <destination node="{390a6a78-d3c4-4935-92db-83dc179cf960}" port="{fa9a27f3-90ca-475e-af44-44fd74deaa60}"/>
  </connection>
  <connection type="[text]" uuid="{c3b2458f-fc49-4e13-b339-d2aac4debd9d}">
    <source node="{bee4e058-c54a-4de6-9124-eac2f3b1e40c}" port="{edfdd78b-2ede-47b2-b6a3-2ed579193b62}"/>
    <destination node="{84a586cc-e1a6-47b3-9a45-392bb8a4ea26}" port="{9bb15a30-b41a-455d-af9e-4cb62a14a609}"/>
  </connection>
  <connection type="text" uuid="{c4dd5a1b-591f-4da1-b56b-301b57df577a}">
    <source node="{c086a24b-c23f-4d91-9fc1-712481db392b}" port="{b6a77309-32d4-4464-802b-0394fbdedc8a}"/>
    <destination node="{29ab8b9e-d6c4-436f-b93c-582ae07ab895}" port="{c7983b23-b680-4f5d-9187-718769b60ec3}"/>
  </connection>
  <connection type="table -&gt; table" uuid="{d9bec699-25b0-4ff1-8f54-85241637db08}">
    <source node="{55fb0df7-6039-4c1f-975f-d105a9df0ee7}" port="{0d4913d0-1eb8-42d8-9116-40042163b2b8}"/>
    <destination node="{4ce8ad42-6c77-4a96-a33d-958f2aa13bb4}" port="{6921504c-9e0b-42d8-8169-6e6fb03b51d3}"/>
  </connection>
  <connection type="table" uuid="{df6cd97d-96f9-4e3e-b807-beabb90235e6}">
    <source node="{e3aaa311-d8fb-491f-838d-98350abb37e9}" port="{f77a1f6f-1447-4101-b572-9059041cbd4c}"/>
    <destination node="{09bd8bef-7789-4fbc-b549-c731a7d83626}" port="{47c3ea13-a8e1-4644-9fec-e97f75dafd18}"/>
  </connection>
  <connection type="table" uuid="{e0667424-db60-4f54-95d5-6f4873a805e6}">
    <source node="{e3aaa311-d8fb-491f-838d-98350abb37e9}" port="{f77a1f6f-1447-4101-b572-9059041cbd4c}"/>
    <destination node="{5a4f3dbf-cd7c-478a-b27a-372068566bc0}" port="{6f36a086-015c-4f13-b6a2-eaaa32ef4b48}"/>
  </connection>
  <connection type="text" uuid="{efe3fd90-9d08-4281-8d80-0efe9e869c29}">
    <source node="{09bd8bef-7789-4fbc-b549-c731a7d83626}" port="{7e8046c9-eca2-4437-b88b-20ee49f8e058}"/>
    <destination node="{bee4e058-c54a-4de6-9124-eac2f3b1e40c}" port="{ed7fca5f-a9ce-4f85-a7d7-3d07d9251c03}"/>
  </connection>
  <connection type="[text]" uuid="{f1e76a65-4b4e-4a05-b233-cc24c5d92024}">
    <source node="{6194d432-cd8d-4eff-867d-a685e3ca4377}" port="{baf01043-31b7-4364-9458-9c837a9054f8}"/>
    <destination node="{bee4e058-c54a-4de6-9124-eac2f3b1e40c}" port="{55976b15-9311-49a3-826c-4cef25607e80}"/>
  </connection>
  <connection type="[text]" uuid="{fd1ff226-80b0-4fc1-aa20-1c0871dec9bd}">
    <source node="{4d86d4d0-5952-4512-8354-f787ea3139dd}" port="{fc2f5823-5bac-4e98-9ae9-1b58f7ee8f9a}"/>
    <destination node="{f7b267fb-1e14-41db-9300-e938deefa7d4}" port="{029fc7a4-820d-462f-8d99-14821c7886fa}"/>
  </connection>
  <text color="Beige" height="450.0" uuid="{78ccbe4d-6598-4528-96c7-27f3374fe56d}" width="650.0" x="1675.0" y="1550.0">### Special nodes</text>
  <text color="Beige" height="675.0" uuid="{f6a96dd3-8b78-495c-a9d3-99d4b1573588}" width="650.0" x="1675.0" y="2000.0">### Normal nodes</text>
  <text color="Red" height="50.0" uuid="{112415c1-f2a1-4285-8343-2296646872c5}" width="650.0" x="1675.0" y="1500.0">## Test of node output on port instead of printing to stdout/stderr</text>
</flow>
