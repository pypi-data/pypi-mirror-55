<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{5f674da7-75e5-4d2b-bdc6-bfa16553567b}" width="50.0" x="0.0" y="0.0">
  <label>map1.syx</label>
  <description></description>
  <author>Unknown</author>
  <copyright></copyright>
  <version>1.0</version>
  <min_version></min_version>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <overrides type="json">{}</overrides>
  <environment type="json">{}</environment>
  <parameters type="json">{"environment": {}}</parameters>
  <ports/>
  <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{2814c1ff-1e69-4739-92b5-51bbb748ef74}" width="50.0" x="1775.0" y="2125.0">
    <label>New Lambda 0</label>
    <description></description>
    <author>Unknown</author>
    <copyright></copyright>
    <version>1.0</version>
    <min_version></min_version>
    <aggregation type="json">null</aggregation>
    <libraries type="json">[]</libraries>
    <pythonpaths type="json">[]</pythonpaths>
    <overrides type="json">{}</overrides>
    <environment type="json">{}</environment>
    <parameters type="json">{"environment": {}}</parameters>
    <ports>
      <input index="0" key="FlowInput" optional="False" parent="False" scheme="hdf5" type="table" uuid="{67e68835-e4fe-4a2d-a4f4-52ee9265bd9c}" x="125.0" y="150.0">
        <label>FlowInput</label>
        <description>FlowInput</description>
      </input>
      <output index="0" key="FlowOutput" optional="False" parent="False" scheme="hdf5" type="table" uuid="{1162d216-ef0e-4e84-a057-66482c9f468b}" x="350.0" y="150.0">
        <label>FlowOutput</label>
        <description>FlowOutput</description>
      </output>
    </ports>
    <basic_ports>
      <output key="Function" scheme="hdf5" type="table -&gt; table" type_base="&lt;a&gt;" uuid="{e848439b-d81a-4151-b8c0-e8be5c78d51b}">
        <label>Lambda function</label>
        <description>Lambda function</description>
      </output>
    </basic_ports>
    <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{f857cbcf-2200-4f58-b969-cbd77fba021a}" x="225.0" y="150.0">
      <label>Slice data Table</label>
      <description></description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2013 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group", "slice": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[:1]"}, "limit": {"description": "", "editor": null, "label": "", "order": 1, "type": "integer", "value": 100}}</parameters>
      <ports>
        <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{8d19559a-1efb-46df-a7f5-da2637984abf}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{0073f2c8-39d4-4da3-bff2-8156e4ecd0e8}">
          <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
          <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
        </output>
      </ports>
    </node>
    <connection type="table" uuid="{56a5a959-3ad6-40c4-9975-5daf1ff576ed}">
      <source node="{2814c1ff-1e69-4739-92b5-51bbb748ef74}" port="{67e68835-e4fe-4a2d-a4f4-52ee9265bd9c}"/>
      <destination node="{f857cbcf-2200-4f58-b969-cbd77fba021a}" port="{8d19559a-1efb-46df-a7f5-da2637984abf}"/>
    </connection>
    <connection type="table" uuid="{9a74e21a-723e-45b2-b2ac-42cc729276d0}">
      <source node="{f857cbcf-2200-4f58-b969-cbd77fba021a}" port="{0073f2c8-39d4-4da3-bff2-8156e4ecd0e8}"/>
      <destination node="{2814c1ff-1e69-4739-92b5-51bbb748ef74}" port="{1162d216-ef0e-4e84-a057-66482c9f468b}"/>
    </connection>
  </flow>
  <node id="org.sysess.sympathy.random.randomtables" uuid="{1ab7a905-c523-43be-9dbb-16ced4b9ce09}" x="1800.0" y="2275.0">
    <label>Random Tables</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 100, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 1, "type": "integer", "value": 1000, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "length": {"description": "The length of table list to be generated.", "label": "Table list length", "order": 2, "type": "integer", "value": 5, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{db385980-0432-41f9-9400-618b2169580c}">
        <label>Tables with random numbers. The specifications of the Tables are declared in the configuration.</label>
        <description>Tables with random numbers. The specifications of the Tables are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.map" uuid="{1b33283b-1f43-4822-9dcc-27c01bad3ba5}" x="2050.0" y="2150.0">
    <label>Map</label>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="table -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{8426d839-a304-411c-a543-dd9740e37015}">
        <label>Lambda Function to Map</label>
        <description>Lambda Function to Map</description>
      </input>
      <input key="List" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{2b39d159-b9b7-46cc-97ca-31c77a921cf2}">
        <label>Argument List</label>
        <description>Argument List</description>
      </input>
      <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{16fa6425-8678-4669-b08c-ada5c0c6a755}">
        <label>Output List</label>
        <description>Output List</description>
      </output>
    </ports>
  </node>
  <connection type="table -&gt; table" uuid="{89f23ab1-d978-4fdd-8ec5-bd6c01ffc4f0}">
    <source node="{2814c1ff-1e69-4739-92b5-51bbb748ef74}" port="{e848439b-d81a-4151-b8c0-e8be5c78d51b}"/>
    <destination node="{1b33283b-1f43-4822-9dcc-27c01bad3ba5}" port="{8426d839-a304-411c-a543-dd9740e37015}"/>
  </connection>
  <connection type="[table]" uuid="{aa4c6a28-8466-4e85-9b70-38b3f86b79c0}">
    <source node="{1ab7a905-c523-43be-9dbb-16ced4b9ce09}" port="{db385980-0432-41f9-9400-618b2169580c}"/>
    <destination node="{1b33283b-1f43-4822-9dcc-27c01bad3ba5}" port="{2b39d159-b9b7-46cc-97ca-31c77a921cf2}"/>
  </connection>
</flow>
