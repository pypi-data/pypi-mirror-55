<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{8bf2fb28-7beb-46c6-96b2-a67582dcde8f}" width="50.0" x="0.0" y="0.0">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <source></source>
  <aggregation type="json"><![CDATA[null]]></aggregation>
  <libraries type="json"><![CDATA[[]]]></libraries>
  <pythonpaths type="json"><![CDATA[[]]]></pythonpaths>
  <environment type="json"><![CDATA[{}]]></environment>
  <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
  <ports/>
  <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{1bb2179c-66a1-4a5a-bd03-d1b06f35b7ce}" width="50.0" x="1750.0" y="1775.0">
    <label>New Lambda 0</label>
    <description></description>
    <author></author>
    <copyright></copyright>
    <version></version>
    <source></source>
    <aggregation type="json"><![CDATA[null]]></aggregation>
    <libraries type="json"><![CDATA[[]]]></libraries>
    <pythonpaths type="json"><![CDATA[[]]]></pythonpaths>
    <parameters type="json"><![CDATA[{}]]></parameters>
    <ports>
      <input height="50.0" index="0" key="Port" optional="False" scheme="hdf5" type="table" uuid="{ea0f8141-cc0e-478d-8887-d36a4412bdd6}" width="50.0" x="1900.0" y="2000.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <input height="50.0" index="1" key="Port" optional="False" scheme="hdf5" type="table -&gt; table" uuid="{3bbaf5f6-b786-4d2e-8809-544c9fff60d6}" width="50.0" x="1901.0" y="2099.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <output height="50.0" index="0" key="Port" optional="False" scheme="hdf5" type="table" uuid="{2593d842-ccf2-44fd-ae00-46c6fb3ed097}" width="50.0" x="2100.0" y="2050.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
    <basic_ports>
      <output key="Function" scheme="hdf5" type="table -&gt; (table -&gt; table) -&gt; table" uuid="{246771f8-6f6c-4fee-a1a3-40e988f2ba63}">
        <label>Lambda function</label>
        <description>Lambda function</description>
      </output>
    </basic_ports>
    <node height="50.0" id="org.sysess.builtin.apply" uuid="{f664a417-9302-443b-bfa6-fccbfbf8a167}" width="50.0" x="2000.0" y="2050.0">
      <label>Apply</label>
      <description>Apply Lambda function to Argument</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="table -&gt; table" uuid="{94dd0fa5-f19a-401b-919e-7bf0df1cf8c0}">
          <label>Lambda Function to Apply</label>
          <description>Lambda Function to Apply</description>
        </input>
        <input key="Argument" scheme="hdf5" type="table" uuid="{396569d5-e7ac-4cf5-a6ff-5c855d143443}">
          <label>Argument</label>
          <description>Argument</description>
        </input>
        <output key="Output" scheme="hdf5" type="table" uuid="{c3d6db4c-d6b7-4e2c-a449-09e9f50419fb}">
          <label>Output</label>
          <description>Output</description>
        </output>
      </ports>
    </node>
    <connection type="table -&gt; table" uuid="{ae8bee16-e9f2-430d-a637-c0976ea2e37c}">
      <source node="{1bb2179c-66a1-4a5a-bd03-d1b06f35b7ce}" port="{3bbaf5f6-b786-4d2e-8809-544c9fff60d6}"/>
      <destination node="{f664a417-9302-443b-bfa6-fccbfbf8a167}" port="{94dd0fa5-f19a-401b-919e-7bf0df1cf8c0}"/>
    </connection>
    <connection type="table" uuid="{b5ff2ede-8e04-404b-882c-ee81ff2dfc94}">
      <source node="{f664a417-9302-443b-bfa6-fccbfbf8a167}" port="{c3d6db4c-d6b7-4e2c-a449-09e9f50419fb}"/>
      <destination node="{1bb2179c-66a1-4a5a-bd03-d1b06f35b7ce}" port="{2593d842-ccf2-44fd-ae00-46c6fb3ed097}"/>
    </connection>
    <connection type="table" uuid="{c35ae168-b4e3-49b3-97a3-a84aa557349f}">
      <source node="{1bb2179c-66a1-4a5a-bd03-d1b06f35b7ce}" port="{ea0f8141-cc0e-478d-8887-d36a4412bdd6}"/>
      <destination node="{f664a417-9302-443b-bfa6-fccbfbf8a167}" port="{396569d5-e7ac-4cf5-a6ff-5c855d143443}"/>
    </connection>
  </flow>
  <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{27e8dba1-499a-43e5-8491-8d605c4cf2ba}" width="50.0" x="1750.0" y="2075.0">
    <label>New Lambda 0</label>
    <description></description>
    <author></author>
    <copyright></copyright>
    <version></version>
    <source></source>
    <aggregation type="json"><![CDATA[null]]></aggregation>
    <libraries type="json"><![CDATA[[]]]></libraries>
    <pythonpaths type="json"><![CDATA[[]]]></pythonpaths>
    <environment type="json"><![CDATA[{}]]></environment>
    <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
    <ports>
      <input height="50.0" index="0" key="Port" optional="False" scheme="hdf5" type="table" uuid="{e54b29ba-754d-4345-8965-ed80d862550c}" width="50.0" x="1900.0" y="2000.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <input height="50.0" index="1" key="Port" optional="False" scheme="hdf5" type="adaf" uuid="{3e3d0a00-eb89-44c6-89b5-7163909cb97c}" width="50.0" x="1901.0" y="2099.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <input height="50.0" index="2" key="Port" optional="False" scheme="hdf5" type="table -&gt; adaf -&gt; table" uuid="{c9ebc406-64cd-49d2-87cb-af47883ff358}" width="50.0" x="1900.0" y="2175.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <output height="50.0" index="0" key="Port" optional="False" scheme="hdf5" type="table" uuid="{2b14beec-10cb-47b5-b2a5-18c410126695}" width="50.0" x="2200.0" y="2050.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
    <basic_ports>
      <output key="Function" scheme="hdf5" type="table -&gt; adaf -&gt; (table -&gt; adaf -&gt; table) -&gt; table" uuid="{20267131-09fc-4df0-9335-0be97e8bfe94}">
        <label>Lambda function</label>
        <description>Lambda function</description>
      </output>
    </basic_ports>
    <node height="50.0" id="org.sysess.builtin.apply" uuid="{5e1de820-60f7-4df8-ba36-5adcfef43ddc}" width="50.0" x="2100.0" y="2050.0">
      <label>Apply</label>
      <description>Apply Lambda function to Argument</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="adaf -&gt; table" uuid="{bbf4d482-8220-4e67-a458-ef7f6eb4d534}">
          <label>Lambda Function to Apply</label>
          <description>Lambda Function to Apply</description>
        </input>
        <input key="Argument" scheme="hdf5" type="adaf" uuid="{2b940d8d-8823-47a6-a005-63b2338ba59d}">
          <label>Argument</label>
          <description>Argument</description>
        </input>
        <output key="Output" scheme="hdf5" type="table" uuid="{134310bc-e1cb-43a6-b3aa-c2b70e1b9f98}">
          <label>Output</label>
          <description>Output</description>
        </output>
      </ports>
    </node>
    <node height="50.0" id="org.sysess.builtin.apply" uuid="{9709421e-ffeb-4682-a2a2-216ca1e7edd2}" width="50.0" x="2000.0" y="2050.0">
      <label>Apply</label>
      <description>Apply Lambda function to Argument</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="table -&gt; adaf -&gt; table" uuid="{008a7878-d6f3-4eaf-9980-2ebf35714e9e}">
          <label>Lambda Function to Apply</label>
          <description>Lambda Function to Apply</description>
        </input>
        <input key="Argument" scheme="hdf5" type="table" uuid="{59f45386-0f5d-4c47-bd92-5108857dd6c1}">
          <label>Argument</label>
          <description>Argument</description>
        </input>
        <output key="Output" scheme="hdf5" type="adaf -&gt; table" uuid="{491a4cfe-b829-45ed-bb16-a7fe14519c4a}">
          <label>Output</label>
          <description>Output</description>
        </output>
      </ports>
    </node>
    <connection type="adaf" uuid="{02165de7-e84e-4b08-aadf-27159d776603}">
      <source node="{27e8dba1-499a-43e5-8491-8d605c4cf2ba}" port="{3e3d0a00-eb89-44c6-89b5-7163909cb97c}"/>
      <destination node="{5e1de820-60f7-4df8-ba36-5adcfef43ddc}" port="{2b940d8d-8823-47a6-a005-63b2338ba59d}"/>
    </connection>
    <connection type="table" uuid="{091a3773-3bbb-4664-a6c8-d888a49e17d7}">
      <source node="{27e8dba1-499a-43e5-8491-8d605c4cf2ba}" port="{e54b29ba-754d-4345-8965-ed80d862550c}"/>
      <destination node="{9709421e-ffeb-4682-a2a2-216ca1e7edd2}" port="{59f45386-0f5d-4c47-bd92-5108857dd6c1}"/>
    </connection>
    <connection type="table" uuid="{3dc8e771-e84b-4467-a67c-35ecb3eaec06}">
      <source node="{5e1de820-60f7-4df8-ba36-5adcfef43ddc}" port="{134310bc-e1cb-43a6-b3aa-c2b70e1b9f98}"/>
      <destination node="{27e8dba1-499a-43e5-8491-8d605c4cf2ba}" port="{2b14beec-10cb-47b5-b2a5-18c410126695}"/>
    </connection>
    <connection type="table -&gt; adaf -&gt; table" uuid="{90ab672c-e30a-487a-aad2-5b64bbc2ab19}">
      <source node="{27e8dba1-499a-43e5-8491-8d605c4cf2ba}" port="{c9ebc406-64cd-49d2-87cb-af47883ff358}"/>
      <destination node="{9709421e-ffeb-4682-a2a2-216ca1e7edd2}" port="{008a7878-d6f3-4eaf-9980-2ebf35714e9e}"/>
    </connection>
    <connection type="adaf -&gt; table" uuid="{dbda6b76-5a25-4d79-98ef-8a0680f960ef}">
      <source node="{9709421e-ffeb-4682-a2a2-216ca1e7edd2}" port="{491a4cfe-b829-45ed-bb16-a7fe14519c4a}"/>
      <destination node="{5e1de820-60f7-4df8-ba36-5adcfef43ddc}" port="{bbf4d482-8220-4e67-a458-ef7f6eb4d534}"/>
    </connection>
  </flow>
  <node height="50.0" id="org.sysess.builtin.apply" uuid="{08590a83-0396-4c61-ac34-16d68b9594e4}" width="50.0" x="1850.0" y="2075.0">
    <label>Apply</label>
    <description>Apply Lambda function to Argument</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="table -&gt; adaf -&gt; (table -&gt; adaf -&gt; table) -&gt; table" uuid="{7cbd0fb9-d594-48c1-859f-cd4c77ed549d}">
        <label>Lambda Function to Apply</label>
        <description>Lambda Function to Apply</description>
      </input>
      <input key="Argument" scheme="hdf5" type="table" uuid="{cd076813-d1e8-4fbb-a405-30731564193a}">
        <label>Argument</label>
        <description>Argument</description>
      </input>
      <output key="Output" scheme="hdf5" type="adaf -&gt; (table -&gt; adaf -&gt; table) -&gt; table" uuid="{ccb689e0-a13e-4c72-b521-360f37e0efe8}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.random.randomtable" uuid="{35ed4a51-c4db-4de7-b9b1-1648a60b9bef}" width="50.0" x="1750.0" y="1875.0">
    <label>Random Table</label>
    <description>Random Table generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 4, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 1, "type": "integer", "value": 4, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "Randomly mask values (create mask array column)", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}}]]></parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" uuid="{3b090eba-8418-4e8f-acaa-63eb3da5ffc4}">
        <label>Random Table</label>
        <description>Random Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.builtin.map" uuid="{5d2193d2-07a0-4759-9169-a394bbf98cea}" width="50.0" x="1950.0" y="1975.0">
    <label>Map</label>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "fail_strategy": {"description": "", "label": "Action on import failure", "order": 0, "passthrough": false, "type": "list", "list": ["Error", "Create Empty Item", "Skip Item"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}]]></parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="(table -&gt; table) -&gt; table" uuid="{a83923df-f7d6-4d8c-bf9c-411ff340bd29}">
        <label>Lambda Function to Map</label>
        <description>Lambda Function to Map</description>
      </input>
      <input key="List" scheme="hdf5" type="[table -&gt; table]" uuid="{972bd5fc-eedb-476d-8dac-c3b2276b36d9}">
        <label>Argument List</label>
        <description>Argument List</description>
      </input>
      <output key="List" scheme="hdf5" type="[table]" uuid="{4cb11514-145e-4c0e-b243-8dd8444c913f}">
        <label>Output List</label>
        <description>Output List</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.builtin.map" uuid="{618600bc-8ceb-4785-9879-00d8ffe78de5}" width="50.0" x="1950.0" y="2275.0">
    <label>Map</label>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "fail_strategy": {"description": "", "label": "Action on import failure", "order": 0, "passthrough": false, "type": "list", "list": ["Error", "Create Empty Item", "Skip Item"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}]]></parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="(table -&gt; adaf -&gt; table) -&gt; table" uuid="{28a70068-b604-4217-8c3d-40c1afccb3f2}">
        <label>Lambda Function to Map</label>
        <description>Lambda Function to Map</description>
      </input>
      <input key="List" scheme="hdf5" type="[table -&gt; adaf -&gt; table]" uuid="{087b72d5-efba-40a7-ba2b-1a5132713edf}">
        <label>Argument List</label>
        <description>Argument List</description>
      </input>
      <output key="List" scheme="hdf5" type="[table]" uuid="{d704c7f1-9756-4eb4-825d-ae37f75058d7}">
        <label>Output List</label>
        <description>Output List</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.datasources.filedatasourcemultiple" uuid="{9f14bf4c-2ba6-4729-9918-883a9b0dd45b}" width="50.0" x="1650.0" y="1975.0">
    <label>Datasources</label>
    <description>Select data sources.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "recursive": {"description": "Find files in all subfolders.", "editor": null, "label": "Recursive", "order": 0, "type": "boolean", "value": false}, "directory": {"description": "The base directory.", "label": "Directory", "order": 1, "type": "string", "value": "../../Unit/higer_order", "editor": {"type": "dirname"}}, "search_pattern": {"description": "A wildcard/regexp pattern to match files.", "editor": null, "label": "Search pattern", "order": 2, "type": "string", "value": "ffunc_*.syx"}}]]></parameters>
    <ports>
      <output key="port1" scheme="text" type="[datasource]" uuid="{6cd84819-017b-4e5e-848b-1aabb2bd406a}">
        <label>DataSource</label>
        <description>DataSource</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.random.randomadaf" uuid="{a0c33e21-f877-42f0-acf2-8d470f45e20a}" width="50.0" x="1850.0" y="2175.0">
    <label>Random ADAF</label>
    <description>Random ADAF generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "meta_entries": {"description": "The number of meta entries to be generated.", "label": "Meta entries", "order": 0, "type": "integer", "value": 1, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "meta_attributes": {"description": "The number of meta attributes to be generated.", "label": "Meta attributes", "order": 1, "type": "integer", "value": 1, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}, "res_entries": {"description": "The number of res entries to be generated.", "label": "Res entries", "order": 2, "type": "integer", "value": 1, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "res_attributes": {"description": "The number of res attributes to be generated.", "label": "Res attributes", "order": 3, "type": "integer", "value": 1, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}, "systems": {"description": "The number of systems to be generated.", "label": "Systems", "order": 4, "type": "integer", "value": 1, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "rasters": {"description": "The number of rasters to be generated.", "label": "Rasters per system", "order": 5, "type": "integer", "value": 1, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "signal_entries": {"description": "The number of signal entries to be generated.", "label": "Signals entries per raster", "order": 6, "type": "integer", "value": 4, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "signal_attributes": {"description": "The number of signal attributes to be generated.", "label": "Signal attributes", "order": 7, "type": "integer", "value": 1, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "signal_length": {"description": "The length of signals to be generated.", "label": "Signal length", "order": 8, "type": "integer", "value": 4, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}}]]></parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="adaf" uuid="{b1fabbe6-0dac-4383-b6de-350125c31baa}">
        <label>Random ADAF</label>
        <description>Random ADAF</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.builtin.apply" uuid="{a129bfaa-7d47-4ce7-bec9-5fccfceb2770}" width="50.0" x="1975.0" y="2075.0">
    <label>Apply</label>
    <description>Apply Lambda function to Argument</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="adaf -&gt; (table -&gt; adaf -&gt; table) -&gt; table" uuid="{39fe0bc3-01bf-49c2-9bd6-96ea23f8beb8}">
        <label>Lambda Function to Apply</label>
        <description>Lambda Function to Apply</description>
      </input>
      <input key="Argument" scheme="hdf5" type="adaf" uuid="{00a8f5e0-1b8c-4a6b-bde4-7c83c6c255f8}">
        <label>Argument</label>
        <description>Argument</description>
      </input>
      <output key="Output" scheme="hdf5" type="(table -&gt; adaf -&gt; table) -&gt; table" uuid="{cee9512f-f06f-4d03-a52a-192356bfaf9c}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.builtin.extractflowslambdas" uuid="{a2db919c-a520-427a-b8e3-32b367428b07}" width="50.0" x="1750.0" y="1975.0">
    <label>Extract Flows as Lambdas</label>
    <description>Extract top level Flows as Lambda functions matching datatype in flows</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "datatype": {"description": "Non-generic datatype to match against lambda functions  in input", "editor": null, "label": "Datatype", "order": 0, "type": "string", "value": "table -> table"}}]]></parameters>
    <ports>
      <input key="Filenames" scheme="text" type="[datasource]" uuid="{f893a2ac-37fe-4d88-af79-b747b59fb026}">
        <label>Flow filenames</label>
        <description>Flow filenames</description>
      </input>
      <output key="Functions" scheme="hdf5" type="[table -&gt; table]" uuid="{43385733-2251-4d9b-b626-cd1839b34963}">
        <label>Lambda functions</label>
        <description>Lambda functions</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.builtin.extractflowslambdas" uuid="{c670bdf6-8efa-4970-aa89-826f7592c1a3}" width="50.0" x="1750.0" y="2275.0">
    <label>Extract Flows as Lambdas</label>
    <description>Extract top level Flows as Lambda functions matching datatype in flows</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "datatype": {"description": "Non-generic datatype to match against lambda functions  in input", "editor": null, "label": "Datatype", "order": 0, "type": "string", "value": "table -> adaf -> table"}}]]></parameters>
    <ports>
      <input key="Filenames" scheme="text" type="[datasource]" uuid="{9d15ba3e-d405-4a5a-aa85-06515903da5a}">
        <label>Flow filenames</label>
        <description>Flow filenames</description>
      </input>
      <output key="Functions" scheme="hdf5" type="[table -&gt; adaf -&gt; table]" uuid="{0e5b427a-c9e7-4e9e-b9a5-1edcebfb25bd}">
        <label>Lambda functions</label>
        <description>Lambda functions</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.random.randomtable" uuid="{cda016fa-978f-4646-820a-8f234e22fb09}" width="50.0" x="1750.0" y="2175.0">
    <label>Random Table</label>
    <description>Random Table generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 4, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 1, "type": "integer", "value": 4, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "Randomly mask values (create mask array column)", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}}]]></parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" uuid="{c7ed685f-52de-4443-abec-9c9b6a1d3220}">
        <label>Random Table</label>
        <description>Random Table</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.builtin.apply" uuid="{d8752100-1d61-4db5-8fc6-0c271684e5f1}" width="50.0" x="1850.0" y="1775.0">
    <label>Apply</label>
    <description>Apply Lambda function to Argument</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="table -&gt; (table -&gt; table) -&gt; table" uuid="{b79d76c0-941a-4a46-94a5-de9327730a9e}">
        <label>Lambda Function to Apply</label>
        <description>Lambda Function to Apply</description>
      </input>
      <input key="Argument" scheme="hdf5" type="table" uuid="{45824251-cf03-424f-8546-6de1fb24a879}">
        <label>Argument</label>
        <description>Argument</description>
      </input>
      <output key="Output" scheme="hdf5" type="(table -&gt; table) -&gt; table" uuid="{dadae855-1153-44b1-83e2-b400a357a749}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node height="50.0" id="org.sysess.sympathy.datasources.filedatasourcemultiple" uuid="{fa486fc6-313b-4d3b-9340-60809548651b}" width="50.0" x="1650.0" y="2275.0">
    <label>Datasources</label>
    <description>Select data sources.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "recursive": {"description": "Find files in all subfolders.", "editor": null, "label": "Recursive", "order": 0, "type": "boolean", "value": false}, "directory": {"description": "The base directory.", "label": "Directory", "order": 1, "type": "string", "value": "../../Unit/higer_order", "editor": {"type": "dirname"}}, "search_pattern": {"description": "A wildcard/regexp pattern to match files.", "editor": null, "label": "Search pattern", "order": 2, "type": "string", "value": "ffunc2_*.syx"}}]]></parameters>
    <ports>
      <output key="port1" scheme="text" type="[datasource]" uuid="{81005f3a-171b-48c0-897b-cbd5529b1c23}">
        <label>DataSource</label>
        <description>DataSource</description>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{01caebf0-5ffd-4f75-94b7-fee102d007b3}">
    <source node="{cda016fa-978f-4646-820a-8f234e22fb09}" port="{c7ed685f-52de-4443-abec-9c9b6a1d3220}"/>
    <destination node="{08590a83-0396-4c61-ac34-16d68b9594e4}" port="{cd076813-d1e8-4fbb-a405-30731564193a}"/>
  </connection>
  <connection type="[table -&gt; adaf -&gt; table]" uuid="{12b4a5bc-c87f-4602-8ad5-e400a5f3880d}">
    <source node="{c670bdf6-8efa-4970-aa89-826f7592c1a3}" port="{0e5b427a-c9e7-4e9e-b9a5-1edcebfb25bd}"/>
    <destination node="{618600bc-8ceb-4785-9879-00d8ffe78de5}" port="{087b72d5-efba-40a7-ba2b-1a5132713edf}"/>
  </connection>
  <connection type="table -&gt; adaf -&gt; (table -&gt; adaf -&gt; table) -&gt; table" uuid="{1dc873de-c32a-4b39-a1a1-bc9f0b10a33d}">
    <source node="{27e8dba1-499a-43e5-8491-8d605c4cf2ba}" port="{20267131-09fc-4df0-9335-0be97e8bfe94}"/>
    <destination node="{08590a83-0396-4c61-ac34-16d68b9594e4}" port="{7cbd0fb9-d594-48c1-859f-cd4c77ed549d}"/>
  </connection>
  <connection type="[table -&gt; table]" uuid="{28b6c4f1-a489-40d0-809e-203a450b82fc}">
    <source node="{a2db919c-a520-427a-b8e3-32b367428b07}" port="{43385733-2251-4d9b-b626-cd1839b34963}"/>
    <destination node="{5d2193d2-07a0-4759-9169-a394bbf98cea}" port="{972bd5fc-eedb-476d-8dac-c3b2276b36d9}"/>
  </connection>
  <connection type="(table -&gt; adaf -&gt; table) -&gt; table" uuid="{3a80b2fa-8eaa-4816-bd96-702c29e8f7c6}">
    <source node="{a129bfaa-7d47-4ce7-bec9-5fccfceb2770}" port="{cee9512f-f06f-4d03-a52a-192356bfaf9c}"/>
    <destination node="{618600bc-8ceb-4785-9879-00d8ffe78de5}" port="{28a70068-b604-4217-8c3d-40c1afccb3f2}"/>
  </connection>
  <connection type="adaf -&gt; (table -&gt; adaf -&gt; table) -&gt; table" uuid="{5e05be10-c636-40c2-ad64-1a30bf1231d1}">
    <source node="{08590a83-0396-4c61-ac34-16d68b9594e4}" port="{ccb689e0-a13e-4c72-b521-360f37e0efe8}"/>
    <destination node="{a129bfaa-7d47-4ce7-bec9-5fccfceb2770}" port="{39fe0bc3-01bf-49c2-9bd6-96ea23f8beb8}"/>
  </connection>
  <connection type="table" uuid="{699c3d71-88dd-4a6a-bd9c-9dc0eb9aa59b}">
    <source node="{35ed4a51-c4db-4de7-b9b1-1648a60b9bef}" port="{3b090eba-8418-4e8f-acaa-63eb3da5ffc4}"/>
    <destination node="{d8752100-1d61-4db5-8fc6-0c271684e5f1}" port="{45824251-cf03-424f-8546-6de1fb24a879}"/>
  </connection>
  <connection type="table -&gt; (table -&gt; table) -&gt; table" uuid="{6d01aae1-bbc6-4129-968d-e775e0bb3b72}">
    <source node="{1bb2179c-66a1-4a5a-bd03-d1b06f35b7ce}" port="{246771f8-6f6c-4fee-a1a3-40e988f2ba63}"/>
    <destination node="{d8752100-1d61-4db5-8fc6-0c271684e5f1}" port="{b79d76c0-941a-4a46-94a5-de9327730a9e}"/>
  </connection>
  <connection type="(table -&gt; table) -&gt; table" uuid="{8fb3469c-e7f2-41fe-89a5-b9bb1b0da059}">
    <source node="{d8752100-1d61-4db5-8fc6-0c271684e5f1}" port="{dadae855-1153-44b1-83e2-b400a357a749}"/>
    <destination node="{5d2193d2-07a0-4759-9169-a394bbf98cea}" port="{a83923df-f7d6-4d8c-bf9c-411ff340bd29}"/>
  </connection>
  <connection type="[datasource]" uuid="{97f2d3bb-f003-45d5-ab86-bd03cbebf3b8}">
    <source node="{fa486fc6-313b-4d3b-9340-60809548651b}" port="{81005f3a-171b-48c0-897b-cbd5529b1c23}"/>
    <destination node="{c670bdf6-8efa-4970-aa89-826f7592c1a3}" port="{9d15ba3e-d405-4a5a-aa85-06515903da5a}"/>
  </connection>
  <connection type="[datasource]" uuid="{b0187040-08f0-4a2d-a92a-6ba3dae969f6}">
    <source node="{9f14bf4c-2ba6-4729-9918-883a9b0dd45b}" port="{6cd84819-017b-4e5e-848b-1aabb2bd406a}"/>
    <destination node="{a2db919c-a520-427a-b8e3-32b367428b07}" port="{f893a2ac-37fe-4d88-af79-b747b59fb026}"/>
  </connection>
  <connection type="adaf" uuid="{b2701cd0-43fd-419e-86cd-179f2c4362d0}">
    <source node="{a0c33e21-f877-42f0-acf2-8d470f45e20a}" port="{b1fabbe6-0dac-4383-b6de-350125c31baa}"/>
    <destination node="{a129bfaa-7d47-4ce7-bec9-5fccfceb2770}" port="{00a8f5e0-1b8c-4a6b-bde4-7c83c6c255f8}"/>
  </connection>
</flow>
