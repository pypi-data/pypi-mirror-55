<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{be81823e-4166-4eb1-ae3d-5bfb4404f806}" width="50.0" x="0.0" y="0.0">
  <label>issue_double_apply_lambda_no_input_fork.syx</label>
  <description></description>
  <author>Unknown</author>
  <copyright></copyright>
  <version>1.0</version>
  <min_version></min_version>
  <icon_filename/>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <overrides type="json">{}</overrides>
  <environment type="json">{}</environment>
  <parameters type="json">{"environment": {}}</parameters>
  <ports/>
  <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{8921dd6e-17ce-4223-b590-ca47983467c6}" width="50.0" x="1650.0" y="1900.0">
    <label>Filter [adaf] with filter array and add Bool value in metadata</label>
    <description></description>
    <author>Unknown</author>
    <copyright></copyright>
    <version>1.0</version>
    <min_version></min_version>
    <icon_filename/>
    <aggregation type="json">null</aggregation>
    <libraries type="json">[]</libraries>
    <pythonpaths type="json">[]</pythonpaths>
    <overrides type="json">{}</overrides>
    <environment type="json">{}</environment>
    <parameters type="json">{"environment": {}}</parameters>
    <ports>
      <input index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="[adaf]" uuid="{f2f88f48-db57-4e79-8a73-9a34137e4da4}" x="1875.0" y="2100.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <input index="1" key="Port" optional="False" parent="False" scheme="hdf5" type="table" uuid="{66a9c982-c46b-47ad-acc7-cf134019d5be}" x="1775.0" y="2025.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <output index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="[adaf]" uuid="{e4cd669e-a6f2-49ce-aa53-07f4521a9476}" x="2650.0" y="2075.0">
        <label>Port</label>
        <description>Port</description>
      </output>
    </ports>
    <basic_ports>
      <output key="Function" scheme="hdf5" type="[adaf] -&gt; table -&gt; [adaf]" type_base="&lt;a&gt;" uuid="{0f2a6505-6f51-49ce-be99-1d17c724f4a8}">
        <label>Lambda function</label>
        <description>Lambda function</description>
      </output>
    </basic_ports>
    <node id="org.sysess.sympathy.list.padlist" uuid="{29466cdf-5a88-4587-b265-cfbd91c88c55}" x="2225.0" y="1950.0">
      <label>Pad List</label>
      <description>Pad a list to match the length of template</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group", "strategy": {"description": "Specify strategy to use when padding.", "label": "Pad values", "order": 0, "passthrough": false, "type": "list", "list": ["Repeat last item", "Empty item"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
      <ports>
        <input key="template" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{26f14042-f052-486e-960b-3427f3f00f4d}">
          <label>List with deciding length</label>
          <description>List with deciding length</description>
        </input>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{28cf6815-dd2a-4777-a3bc-f13ced8e4bc8}">
          <label>List that will be padded</label>
          <description>List that will be padded</description>
        </input>
        <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{862f2443-b936-48c7-b81e-7758cee5762b}">
          <label>Padded List</label>
          <description>Padded List</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.data.table.vsplittablenode" uuid="{4bd4e4a3-f28d-45b9-8d52-c63e3a8cdaf9}" x="2000.0" y="1950.0">
      <label>VSplit Table</label>
      <description>Vertical split of Table into Tables.</description>
      <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
      <copyright>(C) 2013 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group", "remove_fill": {"description": "Remove split columns which contain only NaN or empty strings.", "editor": null, "label": "Remove complement columns", "order": 0, "type": "boolean", "value": false}, "input_index": {"description": "Choose name for grouped index column. Can be left empty.", "editor": null, "label": "Input Index", "order": 1, "type": "string", "value": "VJoin-index"}, "require_index": {"description": "Require Input Index vector to be present.", "editor": null, "label": "Require input index", "order": 2, "type": "boolean", "value": false}}</parameters>
      <ports>
        <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{9c6682ce-ccbe-44d2-9ad9-a5989b090b0f}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{db04ad23-87f1-4cd4-ab82-4764e999cd55}">
          <label>Split Tables</label>
          <description>Split Tables</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.data.table.hjointables" uuid="{aeb05134-fb73-4b60-b7c3-9c05194e49f5}" x="2400.0" y="2025.0">
      <label>HJoin Tables</label>
      <description>Pairwise horizontal join of two list of Tables.</description>
      <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
      <copyright>(C) 2013 Combine Control Systems AB</copyright>
      <version>1.1</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{f37a11cc-e1be-4a0f-8387-b6c93978e99e}">
          <label>Input Tables 1</label>
          <description>Input Tables 1</description>
        </input>
        <input key="port2" scheme="hdf5" type="[table]" type_base="[table]" uuid="{3cfd2f09-fdb4-4c27-b45f-d5ac445b966d}">
          <label>Input Tables 2</label>
          <description>Input Tables 2</description>
        </input>
        <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{ad155c04-3cdb-4962-9be3-7bbd5a5e367c}">
          <label>List of Tables with pairwise horizontally joined data from the incoming lists of Tables.</label>
          <description>List of Tables with pairwise horizontally joined data from the incoming lists of Tables.</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.data.adaf.adafs2tables" uuid="{b1add0bd-562e-4752-b57a-76cb6228cbee}" x="2125.0" y="2025.0">
      <label>ADAFs to Tables</label>
      <description>Elementwise export of data from list of ADAFs to a list of Tables.</description>
      <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
      <copyright>(C) 2013 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group", "export_group": {"description": "Group to export.", "label": "Export group", "order": 0, "passthrough": false, "type": "list", "list": ["Meta", "Result", "Time series"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "tb": {"description": "", "label": "Time basis raster", "order": 1, "passthrough": false, "type": "list", "list": ["Resampled system/Resampled raster/"], "value": [0], "value_names": ["Resampled system/Resampled raster/"], "editor": {"filter": true, "type": "listview"}}, "tb_col_name": {"description": "", "editor": null, "label": "Time basis column name", "order": 2, "type": "string", "value": "Resampled raster"}}</parameters>
      <ports>
        <input key="port1" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{b9cabcec-2610-412f-9c91-191f194d4149}">
          <label>Input ADAF</label>
          <description>Input ADAF</description>
        </input>
        <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{7ae1a568-694e-4f8f-bb65-1d279c900284}">
          <label>Tables with the content of a specified group in the incoming ADAFs</label>
          <description>Tables with the content of a specified group in the incoming ADAFs</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{decf6f38-b25f-43ad-9fc5-bcc22c96010c}" x="1875.0" y="2025.0">
      <label>Slice data Table</label>
      <description></description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2013 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group", "slice": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[:]"}, "limit": {"description": "", "editor": null, "label": "", "order": 1, "type": "integer", "value": 100}}</parameters>
      <ports>
        <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{face7df9-1068-4348-9b55-3cb596a25201}">
          <label>Input Table</label>
          <description>Input Table</description>
        </input>
        <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{bf01ccf0-cb70-4828-acc0-abbec2d7aa76}">
          <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
          <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.filterlisttable" uuid="{fb976b12-c9cd-44e8-b0a1-6d1114525428}" x="2025.0" y="2100.0">
      <label>Filter List with Table input</label>
      <description>Filter a list using an incoming table.</description>
      <author>Magnus Sanden &lt;magnus.sanden@combine.se&gt;</author>
      <copyright>(c) 2016 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="filter" scheme="hdf5" type="table" type_base="table" uuid="{3fcbe64e-7c93-423e-ad33-26d47c3d4524}">
          <label>Filter</label>
          <description>Filter</description>
        </input>
        <input key="in" scheme="hdf5" type="[adaf]" type_base="[&lt;a&gt;]" uuid="{085ddc35-46c5-4fe4-86e1-ceb6de3ba47c}">
          <label>List of items</label>
          <description>List of items</description>
        </input>
        <output key="out" scheme="hdf5" type="[adaf]" type_base="[&lt;a&gt;]" uuid="{4178fd35-5194-4050-8aaf-33ec3ef1d19d}">
          <label>Filtered list of items</label>
          <description>Filtered list of items</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.data.table.updateadafswithtables" uuid="{fc2cbd87-8ae2-4ebd-acef-20c0ad8a8526}" x="2525.0" y="2075.0">
      <label>Update ADAFs with Tables</label>
      <description>Export content of Table to specified container in ADAF.</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2013 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group", "export_to_group": {"description": "Group to put table data.", "label": "Export to group", "order": 0, "passthrough": false, "type": "list", "list": ["Meta", "Result", "Time series"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "system": {"description": "", "editor": null, "label": "Time series system name", "order": 1, "type": "string", "value": "system_8066"}, "raster": {"description": "", "editor": null, "label": "Time series raster name", "order": 2, "type": "string", "value": "filter"}, "tb": {"description": "", "label": "Time basis column", "order": 3, "passthrough": false, "type": "list", "list": ["filter", "DATASET_Name", "DATASET_Path", "Date", "MDF_Database", "MDF_Devices", "MDF_Experiment", "MDF_Pre-trigger_Time", "MDF_Program_Description", "MDF_RP", "MDF_Recording_Duration", "MDF_Time", "MDF_WP", "MDF_Workspace", "MDF_[R", "MDF_author", "MDF_comment", "MDF_date", "MDF_division", "MDF_filename", "MDF_filename_fullpath", "MDF_program", "MDF_project", "MDF_subject", "MDF_time", "MDF_version", "Reg No", "VJoin-index", "duration", "engine", "filepath_no_extension", "mileage", "transmission"], "value": [0], "value_names": ["filter"], "editor": {"filter": true, "type": "listview"}}}</parameters>
      <ports>
        <input key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{adddf196-334b-4218-a480-4e896974ae57}">
          <label>Input Tables</label>
          <description>Input Tables</description>
        </input>
        <input key="port2" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{744d6008-3786-44fc-a761-361aefc8d65e}">
          <label>Input ADAFs</label>
          <description>Input ADAFs</description>
        </input>
        <output key="port1" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{b7b2eafe-9c57-489c-b8d9-f6c66b3a6293}">
          <label>ADAFs with data in input Tables</label>
          <description>ADAFs with data in input Tables</description>
        </output>
      </ports>
    </node>
    <connection type="[table]" uuid="{06849b53-e4dd-45f9-92d7-e45cce68a9fc}">
      <source node="{4bd4e4a3-f28d-45b9-8d52-c63e3a8cdaf9}" port="{db04ad23-87f1-4cd4-ab82-4764e999cd55}"/>
      <destination node="{29466cdf-5a88-4587-b265-cfbd91c88c55}" port="{28cf6815-dd2a-4777-a3bc-f13ced8e4bc8}"/>
    </connection>
    <connection type="[table]" uuid="{31f2ac33-9547-4028-8073-736216b53ce0}">
      <source node="{29466cdf-5a88-4587-b265-cfbd91c88c55}" port="{862f2443-b936-48c7-b81e-7758cee5762b}"/>
      <destination node="{aeb05134-fb73-4b60-b7c3-9c05194e49f5}" port="{f37a11cc-e1be-4a0f-8387-b6c93978e99e}"/>
    </connection>
    <connection type="table" uuid="{3aad2491-57cb-491b-ad51-daf23675f842}">
      <source node="{decf6f38-b25f-43ad-9fc5-bcc22c96010c}" port="{bf01ccf0-cb70-4828-acc0-abbec2d7aa76}"/>
      <destination node="{fb976b12-c9cd-44e8-b0a1-6d1114525428}" port="{3fcbe64e-7c93-423e-ad33-26d47c3d4524}"/>
    </connection>
    <connection type="[adaf]" uuid="{5479cdd5-c66c-46db-b143-a2a5b1b47c7f}">
      <source node="{fc2cbd87-8ae2-4ebd-acef-20c0ad8a8526}" port="{b7b2eafe-9c57-489c-b8d9-f6c66b3a6293}"/>
      <destination node="{8921dd6e-17ce-4223-b590-ca47983467c6}" port="{e4cd669e-a6f2-49ce-aa53-07f4521a9476}"/>
    </connection>
    <connection type="table" uuid="{5b14da51-8d91-46a5-998e-b378ae410a99}">
      <source node="{decf6f38-b25f-43ad-9fc5-bcc22c96010c}" port="{bf01ccf0-cb70-4828-acc0-abbec2d7aa76}"/>
      <destination node="{4bd4e4a3-f28d-45b9-8d52-c63e3a8cdaf9}" port="{9c6682ce-ccbe-44d2-9ad9-a5989b090b0f}"/>
    </connection>
    <connection type="[adaf]" uuid="{7a50f7cf-eaaf-4a39-b8c9-d3f1bc7e24c4}">
      <source node="{fb976b12-c9cd-44e8-b0a1-6d1114525428}" port="{4178fd35-5194-4050-8aaf-33ec3ef1d19d}"/>
      <destination node="{fc2cbd87-8ae2-4ebd-acef-20c0ad8a8526}" port="{744d6008-3786-44fc-a761-361aefc8d65e}"/>
    </connection>
    <connection type="table" uuid="{9bb65b0c-6552-4361-bb07-002a14ddea48}">
      <source node="{8921dd6e-17ce-4223-b590-ca47983467c6}" port="{66a9c982-c46b-47ad-acc7-cf134019d5be}"/>
      <destination node="{decf6f38-b25f-43ad-9fc5-bcc22c96010c}" port="{face7df9-1068-4348-9b55-3cb596a25201}"/>
    </connection>
    <connection type="[adaf]" uuid="{a2bbca42-b651-4c02-bb8b-6f6cabecdc3c}">
      <source node="{8921dd6e-17ce-4223-b590-ca47983467c6}" port="{f2f88f48-db57-4e79-8a73-9a34137e4da4}"/>
      <destination node="{fb976b12-c9cd-44e8-b0a1-6d1114525428}" port="{085ddc35-46c5-4fe4-86e1-ceb6de3ba47c}"/>
    </connection>
    <connection type="[table]" uuid="{b9072086-3ab8-448f-b6ac-e7d6f464f8d4}">
      <source node="{b1add0bd-562e-4752-b57a-76cb6228cbee}" port="{7ae1a568-694e-4f8f-bb65-1d279c900284}"/>
      <destination node="{aeb05134-fb73-4b60-b7c3-9c05194e49f5}" port="{3cfd2f09-fdb4-4c27-b45f-d5ac445b966d}"/>
    </connection>
    <connection type="[table]" uuid="{bdaa7227-55ce-4b6c-a87a-708f25be8578}">
      <source node="{aeb05134-fb73-4b60-b7c3-9c05194e49f5}" port="{ad155c04-3cdb-4962-9be3-7bbd5a5e367c}"/>
      <destination node="{fc2cbd87-8ae2-4ebd-acef-20c0ad8a8526}" port="{adddf196-334b-4218-a480-4e896974ae57}"/>
    </connection>
    <connection type="[table]" uuid="{d169ac74-e5c0-45bb-a2ca-eba8f9e7b5f0}">
      <source node="{b1add0bd-562e-4752-b57a-76cb6228cbee}" port="{7ae1a568-694e-4f8f-bb65-1d279c900284}"/>
      <destination node="{29466cdf-5a88-4587-b265-cfbd91c88c55}" port="{26f14042-f052-486e-960b-3427f3f00f4d}"/>
    </connection>
    <connection type="[adaf]" uuid="{d8d5e985-e1ab-401b-96e2-fe8292dbc17c}">
      <source node="{fb976b12-c9cd-44e8-b0a1-6d1114525428}" port="{4178fd35-5194-4050-8aaf-33ec3ef1d19d}"/>
      <destination node="{b1add0bd-562e-4752-b57a-76cb6228cbee}" port="{b9cabcec-2610-412f-9c91-191f194d4149}"/>
    </connection>
  </flow>
  <node id="org.sysess.sympathy.random.randomadafs" uuid="{0c60e374-8536-41e8-8eb7-6fd2d8f01b3f}" x="1650.0" y="2025.0">
    <label>Random ADAFs</label>
    <description>Random ADAFs generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "meta_entries": {"description": "The number of meta entries to be generated.", "label": "Meta columns:", "order": 0, "type": "integer", "value": 1, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "meta_attributes": {"description": "The number of meta attributes to be generated.", "label": "Meta attributes:", "order": 1, "type": "integer", "value": 1, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}, "res_entries": {"description": "The number of res entries to be generated.", "label": "Res columns:", "order": 2, "type": "integer", "value": 1, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "res_attributes": {"description": "The number of res attributes to be generated.", "label": "Res attributes:", "order": 3, "type": "integer", "value": 1, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}, "systems": {"description": "The number of systems to be generated.", "label": "Systems", "order": 4, "type": "integer", "value": 2, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "rasters": {"description": "The number of rasters to be generated.", "label": "Rasters per system", "order": 5, "type": "integer", "value": 2, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "signal_entries": {"description": "The number of signal entries to be generated.", "label": "Signals per raster", "order": 6, "type": "integer", "value": 5, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "signal_attributes": {"description": "The number of signal attributes to be generated.", "label": "Signal attributes", "order": 7, "type": "integer", "value": 5, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "signal_length": {"description": "The length of signals to be generated.", "label": "Signal length", "order": 8, "type": "integer", "value": 100, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "length": {"description": "The number of adafs to be generated.", "label": "List length", "order": 9, "type": "integer", "value": 2, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{b2d1b690-a335-4ba6-98df-a389e18154dc}">
        <label>ADAFs with random numbers. The specifications of the ADAFs are declared in the configuration.</label>
        <description>ADAFs with random numbers. The specifications of the ADAFs are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.apply" uuid="{1f8f6c15-ba69-423f-a692-609402d53cc3}" x="1950.0" y="2025.0">
    <label>Apply</label>
    <description>Apply Lambda function to Argument</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="table -&gt; [adaf]" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{69d71f0b-a58a-4711-b37a-43dd27afd24c}">
        <label>Lambda Function to Apply</label>
        <description>Lambda Function to Apply</description>
      </input>
      <input key="Argument" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{ffc5ec9d-63e1-4f19-afe3-bbab5366341c}">
        <label>Argument</label>
        <description>Argument</description>
      </input>
      <output key="Output" scheme="hdf5" type="[adaf]" type_base="&lt;b&gt;" uuid="{52bfd3f5-df6e-4024-861a-f7205c3ceb43}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.map" uuid="{3422f293-8f61-41b3-b97d-03574d4468f4}" x="2075.0" y="1900.0">
    <label>Map</label>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="table -&gt; [adaf]" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{1e3d193f-50a0-4b3f-b930-52d73ba8de2e}">
        <label>Lambda Function to Map</label>
        <description>Lambda Function to Map</description>
      </input>
      <input key="List" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{2d636c57-ec2c-4a59-beeb-bf48e83f8cf7}">
        <label>Argument List</label>
        <description>Argument List</description>
      </input>
      <output key="List" scheme="hdf5" type="[[adaf]]" type_base="[&lt;b&gt;]" uuid="{983bc2d8-37cd-444b-8b02-a430e8fe4b36}">
        <label>Output List</label>
        <description>Output List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" uuid="{78890cc9-9e38-4845-bb4f-622021541aec}" x="1950.0" y="1950.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{5c50f9b0-ef80-47b5-86f4-3e70821ba3a7}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{5ac78c76-4bb5-47f9-bea1-7ac1a04e1148}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.apply" uuid="{a21fc6c4-2627-4b55-b4de-84010b0d4464}" x="1775.0" y="1925.0">
    <label>Apply</label>
    <description>Apply Lambda function to Argument</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="[adaf] -&gt; table -&gt; [adaf]" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{7bf280fc-8aca-49b0-bf6d-32c492a0bfc6}">
        <label>Lambda Function to Apply</label>
        <description>Lambda Function to Apply</description>
      </input>
      <input key="Argument" scheme="hdf5" type="[adaf]" type_base="&lt;a&gt;" uuid="{0db2a6fb-adce-4500-a6d3-8691f39982b4}">
        <label>Argument</label>
        <description>Argument</description>
      </input>
      <output key="Output" scheme="hdf5" type="table -&gt; [adaf]" type_base="&lt;b&gt;" uuid="{7588c9f9-1ed2-4ae1-aefa-dc76bcdd840c}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.filterlistpredicate" uuid="{e577962b-43cd-47cd-aeb4-47bd823a0aa1}" x="1800.0" y="2025.0">
    <label>Filter List Predicate</label>
    <description>Filter a list using configured item based predicate.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Filter function", "label": "Predicate filter function", "order": 0, "type": "string", "value": "lambda x: True  # Identity filter", "editor": {"language": "python", "type": "code"}}}</parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[adaf]" type_base="[&lt;a&gt;]" uuid="{03e04bd6-a5da-4f85-a28a-6c50bbd8fa2f}">
        <label>List</label>
        <description>List</description>
      </input>
      <output key="index" scheme="hdf5" type="table" type_base="table" uuid="{832eb69a-9253-4813-8430-6e078b8232ff}">
        <label>Index</label>
        <description>Index</description>
      </output>
      <output key="list" scheme="hdf5" type="[adaf]" type_base="[&lt;a&gt;]" uuid="{fe0048dd-15f3-472a-82d1-6d0a0203cd73}">
        <label>List</label>
        <description>List</description>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{0389ed2b-6d83-4dfd-a214-d857eefedbe3}">
    <source node="{e577962b-43cd-47cd-aeb4-47bd823a0aa1}" port="{832eb69a-9253-4813-8430-6e078b8232ff}"/>
    <destination node="{1f8f6c15-ba69-423f-a692-609402d53cc3}" port="{ffc5ec9d-63e1-4f19-afe3-bbab5366341c}"/>
  </connection>
  <connection type="[adaf] -&gt; table -&gt; [adaf]" uuid="{2b1fc4c6-0a28-49d3-b773-c21e9a8139ac}">
    <source node="{8921dd6e-17ce-4223-b590-ca47983467c6}" port="{0f2a6505-6f51-49ce-be99-1d17c724f4a8}"/>
    <destination node="{a21fc6c4-2627-4b55-b4de-84010b0d4464}" port="{7bf280fc-8aca-49b0-bf6d-32c492a0bfc6}"/>
  </connection>
  <connection type="[table]" uuid="{4bcfafdf-80e4-42f7-ae93-10c473b439fd}">
    <source node="{78890cc9-9e38-4845-bb4f-622021541aec}" port="{5ac78c76-4bb5-47f9-bea1-7ac1a04e1148}"/>
    <destination node="{3422f293-8f61-41b3-b97d-03574d4468f4}" port="{2d636c57-ec2c-4a59-beeb-bf48e83f8cf7}"/>
  </connection>
  <connection type="[adaf]" uuid="{a326e16e-a103-4d70-86fd-0ad34b21c5de}">
    <source node="{0c60e374-8536-41e8-8eb7-6fd2d8f01b3f}" port="{b2d1b690-a335-4ba6-98df-a389e18154dc}"/>
    <destination node="{a21fc6c4-2627-4b55-b4de-84010b0d4464}" port="{0db2a6fb-adce-4500-a6d3-8691f39982b4}"/>
  </connection>
  <connection type="table -&gt; [adaf]" uuid="{befb9cda-04d2-467f-be92-79d1d050f03f}">
    <source node="{a21fc6c4-2627-4b55-b4de-84010b0d4464}" port="{7588c9f9-1ed2-4ae1-aefa-dc76bcdd840c}"/>
    <destination node="{3422f293-8f61-41b3-b97d-03574d4468f4}" port="{1e3d193f-50a0-4b3f-b930-52d73ba8de2e}"/>
  </connection>
  <connection type="table" uuid="{c0497873-48e3-492e-a405-1ffff2e61622}">
    <source node="{e577962b-43cd-47cd-aeb4-47bd823a0aa1}" port="{832eb69a-9253-4813-8430-6e078b8232ff}"/>
    <destination node="{78890cc9-9e38-4845-bb4f-622021541aec}" port="{5c50f9b0-ef80-47b5-86f4-3e70821ba3a7}"/>
  </connection>
  <connection type="[adaf]" uuid="{d09dce2f-2b59-4e1d-9157-093d60532c8e}">
    <source node="{0c60e374-8536-41e8-8eb7-6fd2d8f01b3f}" port="{b2d1b690-a335-4ba6-98df-a389e18154dc}"/>
    <destination node="{e577962b-43cd-47cd-aeb4-47bd823a0aa1}" port="{03e04bd6-a5da-4f85-a28a-6c50bbd8fa2f}"/>
  </connection>
  <connection type="table -&gt; [adaf]" uuid="{f51f3b6e-de37-4e9c-b63f-91e1e726ed9f}">
    <source node="{a21fc6c4-2627-4b55-b4de-84010b0d4464}" port="{7588c9f9-1ed2-4ae1-aefa-dc76bcdd840c}"/>
    <destination node="{1f8f6c15-ba69-423f-a692-609402d53cc3}" port="{69d71f0b-a58a-4711-b37a-43dd27afd24c}"/>
  </connection>
</flow>
