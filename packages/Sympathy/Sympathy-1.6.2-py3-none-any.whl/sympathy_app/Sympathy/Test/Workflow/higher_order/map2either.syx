<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{5f674da7-75e5-4d2b-bdc6-bfa16553567b}" width="50.0" x="0.0" y="0.0">
  <label>map2either.syx</label>
  <description></description>
  <author>Unknown</author>
  <copyright></copyright>
  <version>1.0</version>
  <min_version></min_version>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <overrides type="json">{}</overrides>
  <environment type="json">{}</environment>
  <parameters type="json">{"environment": {}}</parameters>
  <ports/>
  <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{d3820d22-9d1e-4c98-96df-2ab0cb8f0864}" width="50.0" x="1250.0" y="2325.0">
    <label>New Lambda Slice 12</label>
    <description></description>
    <author>Unknown</author>
    <copyright></copyright>
    <version>1.0</version>
    <min_version></min_version>
    <aggregation type="json">null</aggregation>
    <libraries type="json">[]</libraries>
    <pythonpaths type="json">[]</pythonpaths>
    <overrides type="json">{}</overrides>
    <environment type="json">{}</environment>
    <parameters type="json">{"environment": {}}</parameters>
    <ports>
      <input index="0" key="FlowInput" optional="False" parent="False" scheme="hdf5" type="[table]" uuid="{4455a9d8-43dd-48ba-9f1f-1cfdc27482c2}" x="200.0" y="300.0">
        <label>FlowInput</label>
        <description>FlowInput</description>
      </input>
      <output index="0" key="FlowOutput" optional="False" parent="False" scheme="hdf5" type="[[table]]" uuid="{01459ca5-1d59-442b-adb5-acd4ee5a5d4c}" x="550.0" y="275.0">
        <label>FlowOutput</label>
        <description>FlowOutput</description>
      </output>
    </ports>
    <basic_ports>
      <output key="Function" scheme="hdf5" type="[table] -&gt; [[table]]" type_base="&lt;a&gt;" uuid="{f195959e-ad51-4c25-b62d-7f37a8574ec2}">
        <label>Lambda function</label>
        <description>Lambda function</description>
      </output>
    </basic_ports>
    <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{3da1015d-52f6-4b19-a243-21466361e504}" width="50.0" x="125.0" y="50.0">
      <label>New Lambda 4</label>
      <description></description>
      <author>Unknown</author>
      <copyright></copyright>
      <version>1.0</version>
      <min_version></min_version>
      <aggregation type="json">null</aggregation>
      <libraries type="json">[]</libraries>
      <pythonpaths type="json">[]</pythonpaths>
      <overrides type="json">{}</overrides>
      <environment type="json">{}</environment>
      <parameters type="json">{"environment": {}}</parameters>
      <ports>
        <input index="0" key="FlowInput" optional="False" parent="False" scheme="hdf5" type="table" uuid="{e59dd599-c933-4733-ac67-d386927d8e53}" x="25.0" y="50.0">
          <label>FlowInput</label>
          <description>FlowInput</description>
        </input>
        <output index="0" key="FlowOutput" optional="False" parent="False" scheme="hdf5" type="[table]" uuid="{d958ee96-fe73-4dd0-925d-ff71517b48f5}" x="475.0" y="50.0">
          <label>FlowOutput</label>
          <description>FlowOutput</description>
        </output>
      </ports>
      <basic_ports>
        <output key="Function" scheme="hdf5" type="table -&gt; [table]" type_base="&lt;a&gt;" uuid="{eec0ed56-beb2-4433-8665-74f1339f561f}">
          <label>Lambda function</label>
          <description>Lambda function</description>
        </output>
      </basic_ports>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{3109487f-21ed-41e9-9dce-840f1dab2707}" x="175.0" y="50.0">
        <label>Slice data Table</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[1:12]"}, "limit": {"description": "", "editor": null, "label": "", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{8e654873-4b5c-4b20-b6fc-d9f81f01826f}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{32f78540-f690-4b9f-b9a3-a12d50de8083}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.list.itemtolist" uuid="{87ff3669-3fd9-4ebf-928e-29e96ab8f61d}" x="300.0" y="50.0">
        <label>Item to List</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2015 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "n": {"description": "Choose number of times to repeat items.", "editor": null, "label": "Repeat number of times", "order": 0, "type": "integer", "value": 1}}</parameters>
        <ports>
          <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{b9f29369-efce-4cb0-8873-51302b427546}">
            <label>Input Item</label>
            <description>Input Item</description>
          </input>
          <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{da30cb3b-d976-4c93-a0d1-b66f9e66cfab}">
            <label>Item as List</label>
            <description>Item as List</description>
          </output>
        </ports>
      </node>
      <connection type="table" uuid="{15e59f5d-d8ee-43c5-85e0-62c24a154318}">
        <source node="{3109487f-21ed-41e9-9dce-840f1dab2707}" port="{32f78540-f690-4b9f-b9a3-a12d50de8083}"/>
        <destination node="{87ff3669-3fd9-4ebf-928e-29e96ab8f61d}" port="{b9f29369-efce-4cb0-8873-51302b427546}"/>
      </connection>
      <connection type="[table]" uuid="{34335830-9b78-498b-9ab6-46348dc0e0f0}">
        <source node="{87ff3669-3fd9-4ebf-928e-29e96ab8f61d}" port="{da30cb3b-d976-4c93-a0d1-b66f9e66cfab}"/>
        <destination node="{3da1015d-52f6-4b19-a243-21466361e504}" port="{d958ee96-fe73-4dd0-925d-ff71517b48f5}"/>
      </connection>
      <connection type="table" uuid="{ed18b0c9-56bd-4352-b699-78dea6cc5389}">
        <source node="{3da1015d-52f6-4b19-a243-21466361e504}" port="{e59dd599-c933-4733-ac67-d386927d8e53}"/>
        <destination node="{3109487f-21ed-41e9-9dce-840f1dab2707}" port="{8e654873-4b5c-4b20-b6fc-d9f81f01826f}"/>
      </connection>
    </flow>
    <node id="org.sysess.builtin.map" uuid="{a17c3f83-6636-45ae-b838-f4d777c36e21}" x="375.0" y="275.0">
      <label>Map</label>
      <description>Map Lambda function over each element in argument list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="table -&gt; [table]" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{29ba486e-19ef-4df0-8cae-056f744394f7}">
          <label>Lambda Function to Map</label>
          <description>Lambda Function to Map</description>
        </input>
        <input key="List" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{4da920e7-f336-4e7e-96b0-0da812f0c06c}">
          <label>Argument List</label>
          <description>Argument List</description>
        </input>
        <output key="List" scheme="hdf5" type="[[table]]" type_base="[&lt;b&gt;]" uuid="{50d30e42-56b6-41cf-a1fe-11c4c22920dc}">
          <label>Output List</label>
          <description>Output List</description>
        </output>
      </ports>
    </node>
    <connection type="[[table]]" uuid="{1f043776-b401-4839-b674-819d5c301f58}">
      <source node="{a17c3f83-6636-45ae-b838-f4d777c36e21}" port="{50d30e42-56b6-41cf-a1fe-11c4c22920dc}"/>
      <destination node="{d3820d22-9d1e-4c98-96df-2ab0cb8f0864}" port="{01459ca5-1d59-442b-adb5-acd4ee5a5d4c}"/>
    </connection>
    <connection type="table -&gt; [table]" uuid="{35fccf97-c05c-4cfe-b662-fb51c0e3ba51}">
      <source node="{3da1015d-52f6-4b19-a243-21466361e504}" port="{eec0ed56-beb2-4433-8665-74f1339f561f}"/>
      <destination node="{a17c3f83-6636-45ae-b838-f4d777c36e21}" port="{29ba486e-19ef-4df0-8cae-056f744394f7}"/>
    </connection>
    <connection type="[table]" uuid="{f6119a84-6b0f-4af3-b5ce-eb73c0ca2f36}">
      <source node="{d3820d22-9d1e-4c98-96df-2ab0cb8f0864}" port="{4455a9d8-43dd-48ba-9f1f-1cfdc27482c2}"/>
      <destination node="{a17c3f83-6636-45ae-b838-f4d777c36e21}" port="{4da920e7-f336-4e7e-96b0-0da812f0c06c}"/>
    </connection>
  </flow>
  <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{ff06091a-88b5-4b46-8edb-c84241f9dc8c}" width="50.0" x="1250.0" y="2250.0">
    <label>New Lambda Slice 10</label>
    <description></description>
    <author>Unknown</author>
    <copyright></copyright>
    <version>1.0</version>
    <min_version></min_version>
    <aggregation type="json">null</aggregation>
    <libraries type="json">[]</libraries>
    <pythonpaths type="json">[]</pythonpaths>
    <overrides type="json">{}</overrides>
    <environment type="json">{}</environment>
    <parameters type="json">{"environment": {}}</parameters>
    <ports>
      <input index="0" key="FlowInput" optional="False" parent="False" scheme="hdf5" type="[table]" uuid="{f0dc2a52-6a38-42d9-8bb9-a3ca94bc8963}" x="200.0" y="300.0">
        <label>FlowInput</label>
        <description>FlowInput</description>
      </input>
      <output index="0" key="FlowOutput" optional="False" parent="False" scheme="hdf5" type="[[table]]" uuid="{c51e1ff5-0e82-4508-8c46-1d47f5b5324d}" x="550.0" y="275.0">
        <label>FlowOutput</label>
        <description>FlowOutput</description>
      </output>
    </ports>
    <basic_ports>
      <output key="Function" scheme="hdf5" type="[table] -&gt; [[table]]" type_base="&lt;a&gt;" uuid="{fa72d57d-ebe2-4d04-9b4e-db4b9c484e4c}">
        <label>Lambda function</label>
        <description>Lambda function</description>
      </output>
    </basic_ports>
    <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{593a89fd-88ba-4183-a808-1a7e2c38f2e4}" width="50.0" x="100.0" y="25.0">
      <label>New Lambda 4</label>
      <description></description>
      <author>Unknown</author>
      <copyright></copyright>
      <version>1.0</version>
      <min_version></min_version>
      <aggregation type="json">null</aggregation>
      <libraries type="json">[]</libraries>
      <pythonpaths type="json">[]</pythonpaths>
      <overrides type="json">{}</overrides>
      <environment type="json">{}</environment>
      <parameters type="json">{"environment": {}}</parameters>
      <ports>
        <input index="0" key="FlowInput" optional="False" parent="False" scheme="hdf5" type="table" uuid="{24126c37-29fd-4182-a43a-1dd0927149e3}" x="25.0" y="50.0">
          <label>FlowInput</label>
          <description>FlowInput</description>
        </input>
        <output index="0" key="FlowOutput" optional="False" parent="False" scheme="hdf5" type="[table]" uuid="{1892fdac-f1f8-4059-ba34-35c8f1b517d9}" x="475.0" y="50.0">
          <label>FlowOutput</label>
          <description>FlowOutput</description>
        </output>
      </ports>
      <basic_ports>
        <output key="Function" scheme="hdf5" type="table -&gt; [table]" type_base="&lt;a&gt;" uuid="{4f8f2bd7-a14f-4539-b609-e8c8099bdf29}">
          <label>Lambda function</label>
          <description>Lambda function</description>
        </output>
      </basic_ports>
      <node id="org.sysess.sympathy.list.itemtolist" uuid="{43b698d3-f68b-45ed-99d5-61f91682b7aa}" x="325.0" y="50.0">
        <label>Item to List</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2015 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "n": {"description": "Choose number of times to repeat items.", "editor": null, "label": "Repeat number of times", "order": 0, "type": "integer", "value": 1}}</parameters>
        <ports>
          <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{9e1b3657-c633-4a70-8c6f-e6b126bd5e4d}">
            <label>Input Item</label>
            <description>Input Item</description>
          </input>
          <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{30bb3800-f2b2-4d22-872e-c326efd945ca}">
            <label>Item as List</label>
            <description>Item as List</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{4a712c37-3476-4c05-96af-c9c3c7fd39ef}" x="175.0" y="50.0">
        <label>Slice data Table</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[1:10]"}, "limit": {"description": "", "editor": null, "label": "", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{cd1c950d-e4bc-489f-b837-f86c78603a84}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{c3a201b0-f1e5-44cc-905a-1b8727b3ab63}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <connection type="[table]" uuid="{514fe3e8-ef54-4bd4-9611-7d265e062102}">
        <source node="{43b698d3-f68b-45ed-99d5-61f91682b7aa}" port="{30bb3800-f2b2-4d22-872e-c326efd945ca}"/>
        <destination node="{593a89fd-88ba-4183-a808-1a7e2c38f2e4}" port="{1892fdac-f1f8-4059-ba34-35c8f1b517d9}"/>
      </connection>
      <connection type="table" uuid="{542453c1-1928-4ae4-adc0-37feef997657}">
        <source node="{4a712c37-3476-4c05-96af-c9c3c7fd39ef}" port="{c3a201b0-f1e5-44cc-905a-1b8727b3ab63}"/>
        <destination node="{43b698d3-f68b-45ed-99d5-61f91682b7aa}" port="{9e1b3657-c633-4a70-8c6f-e6b126bd5e4d}"/>
      </connection>
      <connection type="table" uuid="{b719c724-1926-4d1c-a7cf-ad0f70a29ecf}">
        <source node="{593a89fd-88ba-4183-a808-1a7e2c38f2e4}" port="{24126c37-29fd-4182-a43a-1dd0927149e3}"/>
        <destination node="{4a712c37-3476-4c05-96af-c9c3c7fd39ef}" port="{cd1c950d-e4bc-489f-b837-f86c78603a84}"/>
      </connection>
    </flow>
    <node id="org.sysess.builtin.map" uuid="{c2ad497c-ae30-4c4c-9f66-9c56b8956736}" x="375.0" y="275.0">
      <label>Map</label>
      <description>Map Lambda function over each element in argument list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="table -&gt; [table]" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{c17d92c5-3348-44eb-9138-04a216807619}">
          <label>Lambda Function to Map</label>
          <description>Lambda Function to Map</description>
        </input>
        <input key="List" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{3e92e71f-444e-4e1a-b99b-de1c5002c5d3}">
          <label>Argument List</label>
          <description>Argument List</description>
        </input>
        <output key="List" scheme="hdf5" type="[[table]]" type_base="[&lt;b&gt;]" uuid="{fbe91b48-acfe-4550-95d9-b14326d5839f}">
          <label>Output List</label>
          <description>Output List</description>
        </output>
      </ports>
    </node>
    <connection type="[table]" uuid="{0c787c8b-8e6e-4f1c-877f-9339578de116}">
      <source node="{ff06091a-88b5-4b46-8edb-c84241f9dc8c}" port="{f0dc2a52-6a38-42d9-8bb9-a3ca94bc8963}"/>
      <destination node="{c2ad497c-ae30-4c4c-9f66-9c56b8956736}" port="{3e92e71f-444e-4e1a-b99b-de1c5002c5d3}"/>
    </connection>
    <connection type="[[table]]" uuid="{87d96447-118f-48a6-8ab5-698f5b433ff1}">
      <source node="{c2ad497c-ae30-4c4c-9f66-9c56b8956736}" port="{fbe91b48-acfe-4550-95d9-b14326d5839f}"/>
      <destination node="{ff06091a-88b5-4b46-8edb-c84241f9dc8c}" port="{c51e1ff5-0e82-4508-8c46-1d47f5b5324d}"/>
    </connection>
    <connection type="table -&gt; [table]" uuid="{9fe09c13-e781-4bff-94d1-7c58ab66fef5}">
      <source node="{593a89fd-88ba-4183-a808-1a7e2c38f2e4}" port="{4f8f2bd7-a14f-4539-b609-e8c8099bdf29}"/>
      <destination node="{c2ad497c-ae30-4c4c-9f66-9c56b8956736}" port="{c17d92c5-3348-44eb-9138-04a216807619}"/>
    </connection>
  </flow>
  <node id="org.sysess.sympathy.random.randomtable" uuid="{1cabf1e4-85c5-470e-8741-0297e7aa0fdc}" x="1325.0" y="2575.0">
    <label>Random Table</label>
    <description>Random Table generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 100, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 1, "type": "integer", "value": 1000, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{7166bfc6-a007-4005-aa5f-004d715de083}">
        <label>Table with random numbers. The specifications of the Table are declared in the configuration.</label>
        <description>Table with random numbers. The specifications of the Table are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.eitherwithdatapredicate" uuid="{275b7a0e-b157-4bd9-9bdb-90fdef0e87b6}" x="1475.0" y="2350.0">
    <label>Either with Data Predicate: Col '0' median &gt; 0.9</label>
    <description>Uses a condition to propagate either one of the two inputs.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Either predicate function", "editor": null, "label": "Either predicate function", "order": 0, "type": "string", "value": "lambda x: np.median(x.get_column_to_array('0')) &gt; 0.9"}}</parameters>
    <ports>
      <input key="true" scheme="hdf5" type="[table] -&gt; [[table]]" type_base="&lt;a&gt;" uuid="{9fee08b9-3c00-4987-b870-dce095026781}">
        <label>First, returned if predicate held true</label>
        <description>First, returned if predicate held true</description>
      </input>
      <input key="false" scheme="hdf5" type="[table] -&gt; [[table]]" type_base="&lt;a&gt;" uuid="{330c877e-c06f-458a-926a-232992bfde38}">
        <label>Second, returned if predicate did not hold true</label>
        <description>Second, returned if predicate did not hold true</description>
      </input>
      <input key="data" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{5550874f-ec15-4f1d-9b94-a073a2e80978}">
        <label>Data for the predicate comparison</label>
        <description>Data for the predicate comparison</description>
      </input>
      <output key="output" scheme="hdf5" type="[table] -&gt; [[table]]" type_base="&lt;a&gt;" uuid="{cc9dc8cb-d8a9-4f7d-9154-7198ac4b4247}">
        <label>Output, First if the predicate holds true otherwise Second</label>
        <description>Output, First if the predicate holds true otherwise Second</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.map" uuid="{4bae3af6-f28a-4c51-8382-b95e7c7fb738}" x="1750.0" y="2450.0">
    <label>Map</label>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="[table] -&gt; [[table]]" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{3c71a9ed-12b7-44de-b030-dc14e7cbcd5d}">
        <label>Lambda Function to Map</label>
        <description>Lambda Function to Map</description>
      </input>
      <input key="List" scheme="hdf5" type="[[table]]" type_base="[&lt;a&gt;]" uuid="{595bd4e9-713a-408f-81ec-c203ae71af01}">
        <label>Argument List</label>
        <description>Argument List</description>
      </input>
      <output key="List" scheme="hdf5" type="[[[table]]]" type_base="[&lt;b&gt;]" uuid="{69581fad-cc2e-4baf-9976-c476bfb0494c}">
        <label>Output List</label>
        <description>Output List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.map" uuid="{6377ab45-b6ed-4ae8-849e-ad41e322da6e}" x="1750.0" y="2575.0">
    <label>Map</label>
    <description>Map Lambda function over each element in argument list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="Function" scheme="hdf5" type="[table] -&gt; [[table]]" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{ca7d1e48-5afe-4366-9ee2-10295262dd6d}">
        <label>Lambda Function to Map</label>
        <description>Lambda Function to Map</description>
      </input>
      <input key="List" scheme="hdf5" type="[[table]]" type_base="[&lt;a&gt;]" uuid="{7470df06-6513-4696-8056-6256a51eefdc}">
        <label>Argument List</label>
        <description>Argument List</description>
      </input>
      <output key="List" scheme="hdf5" type="[[[table]]]" type_base="[&lt;b&gt;]" uuid="{7f875c76-a0db-49d2-84f6-725336e1c0cc}">
        <label>Output List</label>
        <description>Output List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" uuid="{71634c98-0612-49a8-9f74-40fa04a1fe35}" x="1600.0" y="2575.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{09b4fc74-0216-4f8c-a39f-dfc0169bc876}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" scheme="hdf5" type="[[table]]" type_base="[&lt;a&gt;]" uuid="{a788278f-1ee6-46e8-b2dd-b45dc6b7080d}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" uuid="{d9314196-b470-49e0-acbb-ffa5951bcb99}" x="1475.0" y="2575.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{6c1aa694-f4f0-4347-937b-df5cce45bb97}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{caf3cf17-f623-4f81-937c-4f245691c9a9}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.eitherwithdatapredicate" uuid="{da7ac284-2d3b-4709-a2a2-d2d86473e763}" x="1475.0" y="2250.0">
    <label>Either with Data Predicate: Col '0' median &gt; 0.1</label>
    <description>Uses a condition to propagate either one of the two inputs.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Either predicate function", "editor": null, "label": "Either predicate function", "order": 0, "type": "string", "value": "lambda x: np.median(x.get_column_to_array('0')) &gt; 0.1"}}</parameters>
    <ports>
      <input key="true" scheme="hdf5" type="[table] -&gt; [[table]]" type_base="&lt;a&gt;" uuid="{71df4512-e641-44eb-bbb5-094d919f7361}">
        <label>First, returned if predicate held true</label>
        <description>First, returned if predicate held true</description>
      </input>
      <input key="false" scheme="hdf5" type="[table] -&gt; [[table]]" type_base="&lt;a&gt;" uuid="{5346bfc0-9180-4e4a-8934-160ff8b59221}">
        <label>Second, returned if predicate did not hold true</label>
        <description>Second, returned if predicate did not hold true</description>
      </input>
      <input key="data" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{68e8c80d-2fd2-4550-8228-c5dd101fcc00}">
        <label>Data for the predicate comparison</label>
        <description>Data for the predicate comparison</description>
      </input>
      <output key="output" scheme="hdf5" type="[table] -&gt; [[table]]" type_base="&lt;a&gt;" uuid="{a7d85ab5-0303-410e-9ec9-ac434355b48b}">
        <label>Output, First if the predicate holds true otherwise Second</label>
        <description>Output, First if the predicate holds true otherwise Second</description>
      </output>
    </ports>
  </node>
  <connection type="[table] -&gt; [[table]]" uuid="{259e5f7d-b89b-42cf-9660-e1786f781b3a}">
    <source node="{da7ac284-2d3b-4709-a2a2-d2d86473e763}" port="{a7d85ab5-0303-410e-9ec9-ac434355b48b}"/>
    <destination node="{4bae3af6-f28a-4c51-8382-b95e7c7fb738}" port="{3c71a9ed-12b7-44de-b030-dc14e7cbcd5d}"/>
  </connection>
  <connection type="table" uuid="{305779fb-b008-4a9d-ace6-4bb1c251bffc}">
    <source node="{1cabf1e4-85c5-470e-8741-0297e7aa0fdc}" port="{7166bfc6-a007-4005-aa5f-004d715de083}"/>
    <destination node="{275b7a0e-b157-4bd9-9bdb-90fdef0e87b6}" port="{5550874f-ec15-4f1d-9b94-a073a2e80978}"/>
  </connection>
  <connection type="[[table]]" uuid="{44ad9d72-574f-4d22-8fc5-175170ecbcf3}">
    <source node="{71634c98-0612-49a8-9f74-40fa04a1fe35}" port="{a788278f-1ee6-46e8-b2dd-b45dc6b7080d}"/>
    <destination node="{4bae3af6-f28a-4c51-8382-b95e7c7fb738}" port="{595bd4e9-713a-408f-81ec-c203ae71af01}"/>
  </connection>
  <connection type="[table] -&gt; [[table]]" uuid="{457725ad-d6c4-4f49-a72e-433f5690ace1}">
    <source node="{d3820d22-9d1e-4c98-96df-2ab0cb8f0864}" port="{f195959e-ad51-4c25-b62d-7f37a8574ec2}"/>
    <destination node="{275b7a0e-b157-4bd9-9bdb-90fdef0e87b6}" port="{330c877e-c06f-458a-926a-232992bfde38}"/>
  </connection>
  <connection type="[table] -&gt; [[table]]" uuid="{819b082e-0e75-45e8-94f0-78966ed0a780}">
    <source node="{ff06091a-88b5-4b46-8edb-c84241f9dc8c}" port="{fa72d57d-ebe2-4d04-9b4e-db4b9c484e4c}"/>
    <destination node="{da7ac284-2d3b-4709-a2a2-d2d86473e763}" port="{71df4512-e641-44eb-bbb5-094d919f7361}"/>
  </connection>
  <connection type="table" uuid="{9ed6c9ae-572e-4884-bfb1-19f230b4f488}">
    <source node="{1cabf1e4-85c5-470e-8741-0297e7aa0fdc}" port="{7166bfc6-a007-4005-aa5f-004d715de083}"/>
    <destination node="{da7ac284-2d3b-4709-a2a2-d2d86473e763}" port="{68e8c80d-2fd2-4550-8228-c5dd101fcc00}"/>
  </connection>
  <connection type="table" uuid="{a26ac971-9995-49e5-8e49-6df7896b20f2}">
    <source node="{1cabf1e4-85c5-470e-8741-0297e7aa0fdc}" port="{7166bfc6-a007-4005-aa5f-004d715de083}"/>
    <destination node="{d9314196-b470-49e0-acbb-ffa5951bcb99}" port="{6c1aa694-f4f0-4347-937b-df5cce45bb97}"/>
  </connection>
  <connection type="[table] -&gt; [[table]]" uuid="{abf1ab74-fa0e-4a4d-9023-bcf0e8110726}">
    <source node="{d3820d22-9d1e-4c98-96df-2ab0cb8f0864}" port="{f195959e-ad51-4c25-b62d-7f37a8574ec2}"/>
    <destination node="{da7ac284-2d3b-4709-a2a2-d2d86473e763}" port="{5346bfc0-9180-4e4a-8934-160ff8b59221}"/>
  </connection>
  <connection type="[table] -&gt; [[table]]" uuid="{c1dc2b1b-c21c-4724-b23e-d56a36f55707}">
    <source node="{ff06091a-88b5-4b46-8edb-c84241f9dc8c}" port="{fa72d57d-ebe2-4d04-9b4e-db4b9c484e4c}"/>
    <destination node="{275b7a0e-b157-4bd9-9bdb-90fdef0e87b6}" port="{9fee08b9-3c00-4987-b870-dce095026781}"/>
  </connection>
  <connection type="[table]" uuid="{e0fae4d5-550e-4c70-985f-cd2181d9655c}">
    <source node="{d9314196-b470-49e0-acbb-ffa5951bcb99}" port="{caf3cf17-f623-4f81-937c-4f245691c9a9}"/>
    <destination node="{71634c98-0612-49a8-9f74-40fa04a1fe35}" port="{09b4fc74-0216-4f8c-a39f-dfc0169bc876}"/>
  </connection>
  <connection type="[[table]]" uuid="{e883429a-7cad-498d-9301-8bb9db7f323b}">
    <source node="{71634c98-0612-49a8-9f74-40fa04a1fe35}" port="{a788278f-1ee6-46e8-b2dd-b45dc6b7080d}"/>
    <destination node="{6377ab45-b6ed-4ae8-849e-ad41e322da6e}" port="{7470df06-6513-4696-8056-6256a51eefdc}"/>
  </connection>
  <connection type="[table] -&gt; [[table]]" uuid="{fcce5391-c701-4aac-94cb-98915340947f}">
    <source node="{275b7a0e-b157-4bd9-9bdb-90fdef0e87b6}" port="{cc9dc8cb-d8a9-4f7d-9154-7198ac4b4247}"/>
    <destination node="{6377ab45-b6ed-4ae8-849e-ad41e322da6e}" port="{ca7d1e48-5afe-4366-9ee2-10295262dd6d}"/>
  </connection>
</flow>
