<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" uuid="{9603e286-b43c-4ff6-86c6-f61a4002c45d}" width="50.0" x="0.0" y="0.0" id="">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <icon/>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <parameters type="json">{}</parameters>
  <ports/>
  <node id="org.sysess.sympathy.generate.signaltable" uuid="{15760a09-23ab-4781-b5eb-5d41ba9ea851}" x="1825.0" y="1775.0">
    <label>Generate Signal Table</label>
    <description></description>
    <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "table_params": {"label": "Table", "order": 0, "type": "page", "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 2, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 1, "type": "integer", "value": 1000, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}}, "signal_params": {"label": "Signal", "order": 1, "type": "page", "signal_type": {"description": "The signal to be generated.", "label": "Signal type", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["sinus", "cosines", "tangent"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "amplitude": {"description": "The amplitude of the signal to be generated.", "editor": null, "label": "Amplitude", "order": 1, "type": "float", "value": 1.0}, "frequency": {"description": "The frequency of the signal to be generated.", "editor": null, "label": "Frequency", "order": 2, "type": "float", "value": 0.01}, "period": {"description": "The period of the signal to be generated.", "editor": null, "label": "Period", "order": 3, "type": "float", "value": 100.0}, "use_period": {"description": "Use Period [Checked] or Frequency [Unchecked] to generate the signal.", "editor": null, "label": "Period or Frequency", "order": 4, "type": "boolean", "value": true}, "phase_offset": {"description": "The phase offset of the signal to be generated.", "editor": null, "label": "Phase offset", "order": 5, "type": "float", "value": 0.0}, "add_noise": {"description": "If random noise should be added to the signals.", "editor": null, "label": "Add random noise", "order": 6, "type": "boolean", "value": true}, "noise_amplitude": {"description": "The amplitude of the noise.", "label": "Amplitude of noise", "order": 7, "type": "float", "value": 0.1, "editor": {"decimals": 2, "step": 0.05, "type": "spinbox"}}, "index_column": {"description": "Add an index column to the beginning of the table.", "editor": null, "label": "First column as index", "order": 8, "type": "boolean", "value": true}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{96254039-8128-4d75-869f-f5ea8dc5eb9d}">
        <label>Signal Table</label>
        <description>Signal Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.visualize.figurecompressorgui" uuid="{16407f74-de8b-4e2f-a77a-098bd56a47a4}" x="2450.0" y="1775.0">
    <label>Figure Compressor</label>
    <description>Compress a list of Figures to a single Figure</description>
    <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>0.3</version>
    <parameters type="json">{"type": "group", "parent_figure": {"description": "Specify the figure from which axes parameters and legend position are copied.", "label": "Parent figure:", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "join_legends": {"description": "Set if legends from different axes should be joined into one legend.", "editor": null, "label": "Join legends", "order": 1, "type": "boolean", "value": true}, "legend_location": {"description": "Defines the position of the joined legend.", "label": "Legend position:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["best", "center", "center left", "center right", "lower center", "lower left", "lower right", "right", "upper center", "upper left", "upper right"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}, "join_colorbars": {"description": "If checked, the colorbar from the first figure becomes a global colorbar in the output figure.", "editor": null, "label": "Make first colorbar global", "order": 3, "type": "boolean", "value": false}, "auto_recolor": {"description": "Automatically recolor all artists to avoid using a color multiple times, if possible.", "editor": null, "label": "Auto recolor", "order": 4, "type": "boolean", "value": true}, "auto_rescale": {"description": "Automatically rescale all axes to fit the visible data.", "editor": null, "label": "Auto rescale axes", "order": 5, "type": "boolean", "value": true}}</parameters>
    <ports>
      <input key="input" scheme="text" type="[figure]" type_base="[figure]" uuid="{f9f884a7-7e3c-4a26-a707-59f43b765a7a}">
        <label>List of Figures</label>
        <description>List of Figures</description>
      </input>
      <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{a45a8d2c-675d-4224-bae3-db8a397a2c57}">
        <label>A Figure with the configured axes, lines, labels, etc</label>
        <description>A Figure with the configured axes, lines, labels, etc</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.calculatorgenericlist" uuid="{3cc74366-ca3b-4d30-8681-1f6f4a450530}" x="2150.0" y="1775.0">
    <label>Calculator List
Create common timebasis</label>
    <description>Performs user-defined python calculations</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>3.0</version>
    <parameters type="json">{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["time = np.array(range(0, len(arg.col('index').data.tolist()))) #ENABLED:1", "sinus = arg.col('sinus1').data #ENABLED:1"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming data into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}, "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the calculations. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Copy input", "order": 2, "type": "boolean", "value": false}, "fail_strategy": {"description": "Decide how a failed calculation should be handled", "label": "Action on calculation failure", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["Exception", "Skip calculation"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{7d42956c-3043-4313-91c2-05808b83eb36}">
        <label>Generic Input</label>
        <description>Generic Input</description>
      </input>
      <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{ce4e1592-ebc9-4795-8e89-f652791c4f88}">
        <label>Tables with results from the calculations.</label>
        <description>Tables with results from the calculations.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.sequencesplit" uuid="{5bfd0c30-758b-4b83-9339-3b70a33d04f5}" x="1975.0" y="1775.0">
    <label>Periodic Sequence Split Table</label>
    <description>Splits tables of data in equidistant points based on the periodicity of an identifier column</description>
    <author>M&#229;ns F&#228;llman&lt;mans.fallman@combine.se&gt;</author>
    <copyright>(c) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "peak_detector": {"description": "Choose which algorithm to detect periodic events", "label": "Peak Detecting Algorithm", "order": 0, "type": "string", "value": "Local Maxima", "editor": {"type": "combobox", "options": ["Local Maxima", "Continuous Wavelet Transform"]}}, "samples": {"description": "Choose an approximate value for the number of expected samples between peaks", "label": "Samples per peak", "order": 1, "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 1, "step": 1, "type": "spinbox"}}, "select_column": {"description": "Choose column to use as identifier", "label": "Select column:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["index", "sinus1"], "value": [1], "value_names": ["sinus1"], "editor": {"type": "combobox", "options": []}}, "lag_offset": {"description": "Add lag as a percentage of the discarded data", "label": "Offset of peridodic event(0-100)", "order": 3, "type": "float", "value": 0.0, "editor": {"max": 100, "min": 0, "placeholder": "0-100", "type": "lineedit"}}}</parameters>
    <ports>
      <input key="sequence" scheme="hdf5" type="table" type_base="table" uuid="{f6e698e2-2378-4faa-952b-a05e98bd09e2}">
        <label>The sequence to split</label>
        <description>The sequence to split</description>
      </input>
      <output key="sequences" scheme="hdf5" type="[table]" type_base="[table]" uuid="{0ac34633-3c23-4ea2-8bd8-a9e75b19472e}">
        <label>The split sequences</label>
        <description>The split sequences</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.visualize.figurestablestreegui" uuid="{5d51f821-6ce0-4f32-87b1-3bc0a801af3f}" x="2300.0" y="1775.0">
    <label>Figures from Tables</label>
    <description>Create a Figures from a Tables using a GUI.</description>
    <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>0.2</version>
    <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"line.line-1.axes\", \"axes-1\"], [\"line.line-1.xdata\", \"table.col('time').data\"], [\"line.line-1.ydata\", \"table.col('sinus').data\"]]"}}</parameters>
    <ports>
      <input key="inputs" scheme="hdf5" type="[table]" type_base="[table]" uuid="{7d626f98-b822-48bc-b0f9-1ca6370fc7bb}">
        <label>Input data</label>
        <description>Input data</description>
      </input>
      <output key="figures" scheme="text" type="[figure]" type_base="[figure]" uuid="{b6e2f791-6b29-4a19-b8fe-fa56dfbe4afa}">
        <label>Output figure</label>
        <description>Output figure</description>
      </output>
      <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{dd48a69d-8fed-4415-998b-ef0a5cc9f59f}">
        <label>Configuration</label>
        <description>Configuration</description>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{1f1b5eb0-2225-4cf7-86e6-92f67b625b1f}">
    <source node="{15760a09-23ab-4781-b5eb-5d41ba9ea851}" port="{96254039-8128-4d75-869f-f5ea8dc5eb9d}"/>
    <destination node="{5bfd0c30-758b-4b83-9339-3b70a33d04f5}" port="{f6e698e2-2378-4faa-952b-a05e98bd09e2}"/>
  </connection>
  <connection type="[figure]" uuid="{2388f32b-fc23-4b93-996d-f81cd0f74fa6}">
    <source node="{5d51f821-6ce0-4f32-87b1-3bc0a801af3f}" port="{b6e2f791-6b29-4a19-b8fe-fa56dfbe4afa}"/>
    <destination node="{16407f74-de8b-4e2f-a77a-098bd56a47a4}" port="{f9f884a7-7e3c-4a26-a707-59f43b765a7a}"/>
  </connection>
  <connection type="[table]" uuid="{411ad7e7-4b21-47a3-841a-eb35a8d641fc}">
    <source node="{3cc74366-ca3b-4d30-8681-1f6f4a450530}" port="{ce4e1592-ebc9-4795-8e89-f652791c4f88}"/>
    <destination node="{5d51f821-6ce0-4f32-87b1-3bc0a801af3f}" port="{7d626f98-b822-48bc-b0f9-1ca6370fc7bb}"/>
  </connection>
  <connection type="[table]" uuid="{aa85f578-512f-4a8d-8e76-362ba98ffb4a}">
    <source node="{5bfd0c30-758b-4b83-9339-3b70a33d04f5}" port="{0ac34633-3c23-4ea2-8bd8-a9e75b19472e}"/>
    <destination node="{3cc74366-ca3b-4d30-8681-1f6f4a450530}" port="{7d42956c-3043-4313-91c2-05808b83eb36}"/>
  </connection>
  <text color="Beige" height="50.0" uuid="{8cfbb9df-4b70-4e19-88e5-8f7cb0028fc0}" width="375.0" x="1825.0" y="1875.0">
- Node example: *org.sysess.sympathy.generate.signaltable*
- Node example: *org.sysess.sympathy.data.table.sequencesplit*</text>
</flow>
