<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{dc83f51c-8202-4490-b89e-ce14a0186217}" width="50.0" x="0.0" y="0.0">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <overrides type="json">{}</overrides>
  <environment type="json">{}</environment>
  <parameters type="json">{"environment": {}}</parameters>
  <ports/>
  <node id="org.sysess.sympathy.tuple.tuple2" uuid="{00fb3992-6392-437b-acc8-240aacadd148}" x="1800.0" y="1900.0">
    <label>Tuple2</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{7db50766-fe92-41cf-81d7-c9fd3cd35fb8}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="&lt;b&gt;" uuid="{2c04edbe-9697-4df1-bbda-55bd702f7f15}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="output" scheme="hdf5" type="([table], [table])" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{34f2c300-84d2-4eb3-9de1-a4f75c29e244}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{04a16b87-32c5-4536-bd7e-041321b5ab93}" x="1575.0" y="625.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "editor": null, "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: len(x) != 3"}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "include_empty": false, "options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{eb185a53-7b7f-451d-a593-e10e66989709}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{ecc0e74e-69d5-4b71-b04c-67038096a0ee}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.slice.slicelist" uuid="{10817415-bc7d-4c4d-b442-fa4881ef0459}" x="1400.0" y="1900.0">
    <label>Slice List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "slice": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[:-1]"}, "limit": {"description": "", "editor": null, "label": "", "order": 1, "type": "integer", "value": 100}}</parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{4aa8bfa7-9981-4590-b0f5-eeedd1df95d0}">
        <label>Input List</label>
        <description>Input List</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{7343cc86-480c-458e-9600-25a41e02c728}">
        <label>Sliced output List</label>
        <description>Sliced output List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{1095d1c5-6ebf-4417-80b0-d4c3705df787}" x="1575.0" y="1225.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "editor": null, "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: len(x) != 2"}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "include_empty": false, "options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{7a82b5de-ccff-4094-ad3d-07fe91739674}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{4fd2e8a9-bb0e-4ed7-9ad7-6522dc1b0312}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.bisectlist" uuid="{10bd487b-fa8d-4858-b365-8181cc06e9e9}" x="1400.0" y="2050.0">
    <label>Bisect List</label>
    <description>Split a list into two (or optionally more) parts</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[adaf]" type_base="[&lt;a&gt;]" uuid="{687f250a-fb49-4584-b36e-f4dc25e0aaa8}">
        <label>Full List</label>
        <description>Full List</description>
      </input>
      <output key="part" scheme="hdf5" type="[adaf]" type_base="[&lt;a&gt;]" uuid="{2222ffba-437d-4963-8a35-f7cead6784a4}">
        <label>Part List</label>
        <description>Part List</description>
      </output>
      <output key="part" scheme="hdf5" type="[adaf]" type_base="[&lt;a&gt;]" uuid="{cc597db8-6316-4ad4-ab25-c1df5b64a5cc}">
        <label>Part List</label>
        <description>Part List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtables" uuid="{1706e87b-831d-4812-a47c-7b5d433b277c}" x="1250.0" y="1400.0">
    <label>Random Tables</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 1, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 1, "type": "integer", "value": 1, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "Randomly mask values (create mask array column)", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}, "length": {"description": "The length of table list to be generated.", "label": "Table list length", "order": 3, "type": "integer", "value": 5, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{d49cb872-4d73-4755-b319-00f212e3ef24}">
        <label>Tables with random numbers. The specifications of the Tables are declared in the configuration.</label>
        <description>Tables with random numbers. The specifications of the Tables are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.bisectlist" port_format="1.1" uuid="{177db444-8159-40ab-b949-733c91ffe71f}" x="1425.0" y="875.0">
    <label>Bisect List</label>
    <description>Split a list into two (or optionally more) parts</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{020c4347-07e5-416b-9ccd-f94689ca5bfc}">
        <label>Full List</label>
        <description>Full List</description>
      </input>
      <output key="part" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{f544da55-8201-4023-ae09-d7cdaa536393}">
        <label>Part List</label>
        <description>Part List</description>
      </output>
      <output key="part" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{d33a2397-a69b-48fa-be90-2baa6b24f8cf}">
        <label>Part List</label>
        <description>Part List</description>
      </output>
      <output key="part" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{511df5f2-f86e-4503-888f-bb35d0ed4c8a}">
        <label>Part List</label>
        <description>Part List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.tuple2" uuid="{280b27b3-ee26-44fe-9b38-10d5e179286d}" x="1800.0" y="1700.0">
    <label>Tuple2</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{ce759ab2-693f-4a7a-afac-d5e61757c9ad}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="&lt;b&gt;" uuid="{835bab20-e8f1-45d1-af59-f8538162558d}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="output" scheme="hdf5" type="([table], [table])" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{31404df0-62e0-423e-818c-64b4a67c10a4}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{3c8854c0-f413-4d2a-94d4-212e4650c553}" x="1575.0" y="875.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "editor": null, "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: len(x) != 1"}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "include_empty": false, "options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{d0669ca8-16cb-4ce4-9706-5eb078387952}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{ccab37f9-73a3-4f00-a878-eba17806feb6}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.bisectlist" uuid="{4ee6ec17-04b1-469b-baf0-7b0e7eff3cdc}" x="1550.0" y="1600.0">
    <label>Bisect List</label>
    <description>Split a list into two (or optionally more) parts</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{c18f7684-7d15-4fb1-8e8d-21fd73709d72}">
        <label>Full List</label>
        <description>Full List</description>
      </input>
      <output key="part" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{09d64d89-a026-4923-978a-c46729b93b9d}">
        <label>Part List</label>
        <description>Part List</description>
      </output>
      <output key="part" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{5d4639cf-ef5b-4a50-ad46-6952a067f211}">
        <label>Part List</label>
        <description>Part List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{5054db28-d7d0-4298-bd00-80c7a0885897}" x="1575.0" y="775.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "editor": null, "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: len(x) != 2"}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "include_empty": false, "options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{e0ed7753-1070-479b-b51b-870080346759}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{711e4d63-b8e4-46bc-9d53-bbc028eb86aa}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.extendlist" uuid="{50a95ad8-714e-4559-9e76-837b9e325821}" x="1675.0" y="1600.0">
    <label>Extend List</label>
    <description>Extend a list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{f33862fe-b710-4feb-bd84-e801b971b92b}">
        <label>List that will be added</label>
        <description>List that will be added</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{6a9f5bd7-6678-44f7-8a31-9a161b47b132}">
        <label>List that will be added</label>
        <description>List that will be added</description>
      </input>
      <output key="output" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{b788f582-6eb8-49bc-94e1-b44fff73a49c}">
        <label>The extended List</label>
        <description>The extended List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.extendlist" uuid="{621202c9-c3de-4088-addd-9fd4ef68a4f4}" x="1675.0" y="1800.0">
    <label>Extend List</label>
    <description>Extend a list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{27b641f2-4afc-4411-83fa-bb2a30cb092c}">
        <label>List that will be added</label>
        <description>List that will be added</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{25d4dd6d-8708-4639-9902-a55cb0d4b608}">
        <label>List that will be added</label>
        <description>List that will be added</description>
      </input>
      <output key="output" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{77320783-b153-4f0b-a543-8cfe76a59e14}">
        <label>The extended List</label>
        <description>The extended List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.empty" uuid="{8c84e2b7-b367-4803-acb2-4efd036fa656}" x="1275.0" y="2050.0">
    <label>Empty</label>
    <description>Generate empty data of inferred or defined datatype</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "datatype": {"description": "Define the datatype of the output port.", "editor": null, "label": "Datatype", "order": 0, "type": "string", "value": "[adaf]"}}</parameters>
    <ports>
      <output key="" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{c6ed6ced-03c2-477c-8f5d-f4f0b4933997}">
        <label>Output port containing empty data (must be connected or defined)</label>
        <description>Output port containing empty data (must be connected or defined)</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{8f7ac0ea-5830-400b-87cc-6c0d7e87dd6b}" x="1575.0" y="1125.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "editor": null, "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: len(x) != 2"}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "include_empty": false, "options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{d5d465a8-79ed-472b-9b2f-5521b719f66d}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{db038825-4a2b-45b1-9e68-3ef291508bce}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{9592fbb2-2e75-41a7-8beb-7e236cefd08b}" x="1575.0" y="425.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "editor": null, "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: len(x) != 4"}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "include_empty": false, "options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{2142a08d-115c-4f90-b5ed-5d7a3b46e389}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{de86a96c-92b2-4091-bdd5-51f2c5c4a089}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtables" uuid="{98140324-a58f-4d19-aaa4-fcaa1ea109de}" x="1250.0" y="875.0">
    <label>Random Tables</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_entries": {"description": "The number of columns in the generated table.", "label": "Columns:", "order": 0, "type": "integer", "value": 1, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The number of rows in the generated table.", "label": "Rows:", "order": 1, "type": "integer", "value": 1, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "If checked each value has a 50% chance to be masked.", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}, "length": {"description": "The number of tables to be generated.", "label": "List length", "order": 3, "type": "integer", "value": 4, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{18d092d7-9d66-43fc-a57f-2e1a6023fc0c}">
        <label>Tables with random numbers. The specifications of the Tables are declared in the configuration.</label>
        <description>Tables with random numbers. The specifications of the Tables are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{9f77c612-a315-4f6f-9b95-a6a9e92d76dc}" x="1575.0" y="1350.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "editor": null, "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: len(x) != 3"}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "include_empty": false, "options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{dff5d22b-e797-4757-9cc9-d990b7b7ad95}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{e81018a1-01bf-4cc6-a1a7-23bc2aaf7476}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.bisectlist" uuid="{ad5a09a6-3511-4bc6-9e36-a30ca17afbbd}" x="1425.0" y="1400.0">
    <label>Bisect List</label>
    <description>Split a list into two (or optionally more) parts</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{08d0b095-88a8-4c12-9e44-356c06d4b9d6}">
        <label>Full List</label>
        <description>Full List</description>
      </input>
      <output key="part" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{5a924725-628a-454e-a675-e8954c77c921}">
        <label>Part List</label>
        <description>Part List</description>
      </output>
      <output key="part" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{4ef5ac07-577e-43b4-b077-09b28ccd6972}">
        <label>Part List</label>
        <description>Part List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{aff95cff-71b1-4319-b18d-d6708185934d}" x="1925.0" y="1900.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "editor": null, "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: any(np.any(a.col('0').data != b.col('0').data) for a, b in zip(x[0], x[1]))"}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="([table], [table])" type_base="&lt;a&gt;" uuid="{8c224157-b5c6-4e53-ba28-422d0124b812}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="([table], [table])" type_base="&lt;a&gt;" uuid="{1056d9d3-b6ab-4ce3-aad4-c9ae5858fe9d}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtables" uuid="{b7a7f78e-7a17-4e3c-a86b-e29deb22c042}" x="1250.0" y="1700.0">
    <label>Random Tables</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 1, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 1, "type": "integer", "value": 1, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "Randomly mask values (create mask array column)", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}, "length": {"description": "The length of table list to be generated.", "label": "Table list length", "order": 3, "type": "integer", "value": 5, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{4368a856-a09a-4061-b21b-6cb00001ff42}">
        <label>Tables with random numbers. The specifications of the Tables are declared in the configuration.</label>
        <description>Tables with random numbers. The specifications of the Tables are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtables" uuid="{bc279e1a-c2f1-49ff-b43e-cfb3ef16fbd4}" x="1250.0" y="525.0">
    <label>Random Tables</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_entries": {"description": "The number of columns in the generated table.", "label": "Columns:", "order": 0, "type": "integer", "value": 1, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The number of rows in the generated table.", "label": "Rows:", "order": 1, "type": "integer", "value": 1, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "If checked each value has a 50% chance to be masked.", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}, "length": {"description": "The number of tables to be generated.", "label": "List length", "order": 3, "type": "integer", "value": 11, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{cc519cbb-da70-4a9c-9af8-29fa6cc1c8bf}">
        <label>Tables with random numbers. The specifications of the Tables are declared in the configuration.</label>
        <description>Tables with random numbers. The specifications of the Tables are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.bisectlist" port_format="1.1" uuid="{c4313509-9c7f-4603-92ed-61e57af84c91}" x="1425.0" y="525.0">
    <label>Bisect List</label>
    <description>Split a list into two (or optionally more) parts</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{1f1d2628-1e1b-46ee-9af8-2e339d64f54d}">
        <label>Full List</label>
        <description>Full List</description>
      </input>
      <output key="part" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{74fffc1e-9e19-4f5d-b90f-595c563f82ea}">
        <label>Part List</label>
        <description>Part List</description>
      </output>
      <output key="part" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{10a3ed4e-f9bd-48d5-a7ee-d402f8c6484d}">
        <label>Part List</label>
        <description>Part List</description>
      </output>
      <output key="part" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{87574ebd-4dc2-49ba-9226-a92784bee154}">
        <label>Part List</label>
        <description>Part List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.bisectlist" uuid="{ccd0cd09-e73d-4925-8b71-082b6dce42ef}" x="1550.0" y="1800.0">
    <label>Bisect List</label>
    <description>Split a list into two (or optionally more) parts</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{e4f933ac-e10f-48ce-9af2-85256c02f392}">
        <label>Full List</label>
        <description>Full List</description>
      </input>
      <output key="part" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{10ac7a9e-14a0-4894-a31d-64216e5aa2e1}">
        <label>Part List</label>
        <description>Part List</description>
      </output>
      <output key="part" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{39f0d689-a6f3-4054-8cf6-bb2c96587fb4}">
        <label>Part List</label>
        <description>Part List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.bisectlist" uuid="{d6a3c7d7-5c46-4bbd-b7ff-4fc740829802}" x="1425.0" y="1175.0">
    <label>Bisect List</label>
    <description>Split a list into two (or optionally more) parts</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{49267e3b-f8c9-4834-a54b-468329f68844}">
        <label>Full List</label>
        <description>Full List</description>
      </input>
      <output key="part" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{643cee3e-2d62-49cb-8e9a-ace546d9a5c1}">
        <label>Part List</label>
        <description>Part List</description>
      </output>
      <output key="part" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{e27cae61-6e8b-4b98-85f7-b01657594152}">
        <label>Part List</label>
        <description>Part List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{d9bce034-d030-4ed4-a810-ff9b2d7f462b}" x="1575.0" y="525.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "editor": null, "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: len(x) != 4"}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "include_empty": false, "options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{e1d67e7a-b56b-4568-9153-a8745cf84343}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{71cd3db9-dc1f-4988-af2d-b6d515320048}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{e6e2e6a2-bf7c-4d44-9b81-2cce887fca76}" x="1575.0" y="975.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "editor": null, "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: len(x) != 1"}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "include_empty": false, "options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{050187cf-e3f4-4625-a3ea-1a33a88e0a9c}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{c555d76d-42d9-4907-a14e-0e5f5c78d120}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtables" uuid="{ee989007-c874-4b24-980b-b3a0b5168a55}" x="1250.0" y="1175.0">
    <label>Random Tables</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_entries": {"description": "The number of columns in the generated table.", "label": "Columns:", "order": 0, "type": "integer", "value": 1, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The number of rows in the generated table.", "label": "Rows:", "order": 1, "type": "integer", "value": 1, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "If checked each value has a 50% chance to be masked.", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}, "length": {"description": "The number of tables to be generated.", "label": "List length", "order": 3, "type": "integer", "value": 4, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{357cbdf4-a983-4234-9590-afc1eff7a83e}">
        <label>Tables with random numbers. The specifications of the Tables are declared in the configuration.</label>
        <description>Tables with random numbers. The specifications of the Tables are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{f01c542e-6007-41f4-ac1e-0caa6db4460b}" x="1925.0" y="1700.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "editor": null, "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: any(np.any(a.col('0').data != b.col('0').data) for a, b in zip(x[0], x[1]))"}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="([table], [table])" type_base="&lt;a&gt;" uuid="{8b5b315b-898f-41e7-a129-eaf86889d5cb}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="([table], [table])" type_base="&lt;a&gt;" uuid="{99e3c9cd-bcfb-45b8-a1e0-1e1ffd84ccb2}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{f7205fc9-9e69-47d4-b691-42194a0af6f7}" x="1575.0" y="1450.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "editor": null, "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: len(x) != 2"}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "include_empty": false, "options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{01a1a8d8-7700-4511-bec8-a4956dd5fdee}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{f1dc642d-b295-49e7-b7b3-48452596c007}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <connection type="[table]" uuid="{0cc19acb-0b91-4689-9dbd-e508e9618bc5}">
    <source node="{177db444-8159-40ab-b949-733c91ffe71f}" port="{f544da55-8201-4023-ae09-d7cdaa536393}"/>
    <destination node="{5054db28-d7d0-4298-bd00-80c7a0885897}" port="{e0ed7753-1070-479b-b51b-870080346759}"/>
  </connection>
  <connection type="[table]" uuid="{133e7ec6-1f4b-4f4f-9b20-3152942172fa}">
    <source node="{98140324-a58f-4d19-aaa4-fcaa1ea109de}" port="{18d092d7-9d66-43fc-a57f-2e1a6023fc0c}"/>
    <destination node="{177db444-8159-40ab-b949-733c91ffe71f}" port="{020c4347-07e5-416b-9ccd-f94689ca5bfc}"/>
  </connection>
  <connection type="[table]" uuid="{1e0fd59b-5333-4f65-be19-5e11b9188103}">
    <source node="{c4313509-9c7f-4603-92ed-61e57af84c91}" port="{10a3ed4e-f9bd-48d5-a7ee-d402f8c6484d}"/>
    <destination node="{d9bce034-d030-4ed4-a810-ff9b2d7f462b}" port="{e1d67e7a-b56b-4568-9153-a8745cf84343}"/>
  </connection>
  <connection type="[table]" uuid="{30701e2a-529b-4fb4-ba99-281cb8675980}">
    <source node="{177db444-8159-40ab-b949-733c91ffe71f}" port="{511df5f2-f86e-4503-888f-bb35d0ed4c8a}"/>
    <destination node="{e6e2e6a2-bf7c-4d44-9b81-2cce887fca76}" port="{050187cf-e3f4-4625-a3ea-1a33a88e0a9c}"/>
  </connection>
  <connection type="[table]" uuid="{348626c9-2105-4819-9540-36d8b25147af}">
    <source node="{c4313509-9c7f-4603-92ed-61e57af84c91}" port="{74fffc1e-9e19-4f5d-b90f-595c563f82ea}"/>
    <destination node="{9592fbb2-2e75-41a7-8beb-7e236cefd08b}" port="{2142a08d-115c-4f90-b5ed-5d7a3b46e389}"/>
  </connection>
  <connection type="[table]" uuid="{4a0595a6-6de1-4ca3-9d41-de2459137631}">
    <source node="{b7a7f78e-7a17-4e3c-a86b-e29deb22c042}" port="{4368a856-a09a-4061-b21b-6cb00001ff42}"/>
    <destination node="{280b27b3-ee26-44fe-9b38-10d5e179286d}" port="{835bab20-e8f1-45d1-af59-f8538162558d}"/>
  </connection>
  <connection type="[table]" uuid="{4d6b52c0-700a-4c78-a2c8-d5e53272fcea}">
    <source node="{ee989007-c874-4b24-980b-b3a0b5168a55}" port="{357cbdf4-a983-4234-9590-afc1eff7a83e}"/>
    <destination node="{d6a3c7d7-5c46-4bbd-b7ff-4fc740829802}" port="{49267e3b-f8c9-4834-a54b-468329f68844}"/>
  </connection>
  <connection type="[table]" uuid="{4e280ec8-9f0f-41d0-ae26-1eba9e867da4}">
    <source node="{ccd0cd09-e73d-4925-8b71-082b6dce42ef}" port="{10ac7a9e-14a0-4894-a31d-64216e5aa2e1}"/>
    <destination node="{621202c9-c3de-4088-addd-9fd4ef68a4f4}" port="{27b641f2-4afc-4411-83fa-bb2a30cb092c}"/>
  </connection>
  <connection type="([table], [table])" uuid="{4e695a30-4db8-43f7-8d05-2ff2c8e6ec8d}">
    <source node="{280b27b3-ee26-44fe-9b38-10d5e179286d}" port="{31404df0-62e0-423e-818c-64b4a67c10a4}"/>
    <destination node="{f01c542e-6007-41f4-ac1e-0caa6db4460b}" port="{8b5b315b-898f-41e7-a129-eaf86889d5cb}"/>
  </connection>
  <connection type="[table]" uuid="{56d659f7-5448-466a-b819-fcf7d71121d2}">
    <source node="{b7a7f78e-7a17-4e3c-a86b-e29deb22c042}" port="{4368a856-a09a-4061-b21b-6cb00001ff42}"/>
    <destination node="{10817415-bc7d-4c4d-b442-fa4881ef0459}" port="{4aa8bfa7-9981-4590-b0f5-eeedd1df95d0}"/>
  </connection>
  <connection type="[table]" uuid="{64c9d5fb-4ce4-4af8-803f-a4e1c295733f}">
    <source node="{ad5a09a6-3511-4bc6-9e36-a30ca17afbbd}" port="{4ef5ac07-577e-43b4-b077-09b28ccd6972}"/>
    <destination node="{f7205fc9-9e69-47d4-b691-42194a0af6f7}" port="{01a1a8d8-7700-4511-bec8-a4956dd5fdee}"/>
  </connection>
  <connection type="[table]" uuid="{700281a2-f2dd-4770-9677-986d667e8489}">
    <source node="{621202c9-c3de-4088-addd-9fd4ef68a4f4}" port="{77320783-b153-4f0b-a543-8cfe76a59e14}"/>
    <destination node="{00fb3992-6392-437b-acc8-240aacadd148}" port="{7db50766-fe92-41cf-81d7-c9fd3cd35fb8}"/>
  </connection>
  <connection type="[table]" uuid="{717ff069-4c49-4a23-a795-42a93e7ef900}">
    <source node="{b7a7f78e-7a17-4e3c-a86b-e29deb22c042}" port="{4368a856-a09a-4061-b21b-6cb00001ff42}"/>
    <destination node="{4ee6ec17-04b1-469b-baf0-7b0e7eff3cdc}" port="{c18f7684-7d15-4fb1-8e8d-21fd73709d72}"/>
  </connection>
  <connection type="[table]" uuid="{71eb45af-151c-4bf4-a457-505131673c92}">
    <source node="{ccd0cd09-e73d-4925-8b71-082b6dce42ef}" port="{39f0d689-a6f3-4054-8cf6-bb2c96587fb4}"/>
    <destination node="{621202c9-c3de-4088-addd-9fd4ef68a4f4}" port="{25d4dd6d-8708-4639-9902-a55cb0d4b608}"/>
  </connection>
  <connection type="[table]" uuid="{72069cd5-9069-400a-a885-f388c3d29af4}">
    <source node="{4ee6ec17-04b1-469b-baf0-7b0e7eff3cdc}" port="{5d4639cf-ef5b-4a50-ad46-6952a067f211}"/>
    <destination node="{50a95ad8-714e-4559-9e76-837b9e325821}" port="{6a9f5bd7-6678-44f7-8a31-9a161b47b132}"/>
  </connection>
  <connection type="[table]" uuid="{7c1328d1-ca40-44b9-8fde-96da6b51eac8}">
    <source node="{ad5a09a6-3511-4bc6-9e36-a30ca17afbbd}" port="{5a924725-628a-454e-a675-e8954c77c921}"/>
    <destination node="{9f77c612-a315-4f6f-9b95-a6a9e92d76dc}" port="{dff5d22b-e797-4757-9cc9-d990b7b7ad95}"/>
  </connection>
  <connection type="[table]" uuid="{7d78da56-98cc-495b-92c0-767b44a4f3bf}">
    <source node="{4ee6ec17-04b1-469b-baf0-7b0e7eff3cdc}" port="{09d64d89-a026-4923-978a-c46729b93b9d}"/>
    <destination node="{50a95ad8-714e-4559-9e76-837b9e325821}" port="{f33862fe-b710-4feb-bd84-e801b971b92b}"/>
  </connection>
  <connection type="[adaf]" uuid="{882c0de7-8c2d-4c85-9c30-d1fd3cf4998c}">
    <source node="{8c84e2b7-b367-4803-acb2-4efd036fa656}" port="{c6ed6ced-03c2-477c-8f5d-f4f0b4933997}"/>
    <destination node="{10bd487b-fa8d-4858-b365-8181cc06e9e9}" port="{687f250a-fb49-4584-b36e-f4dc25e0aaa8}"/>
  </connection>
  <connection type="[table]" uuid="{8ef01ccc-0cf0-4691-a295-7389cd65e416}">
    <source node="{50a95ad8-714e-4559-9e76-837b9e325821}" port="{b788f582-6eb8-49bc-94e1-b44fff73a49c}"/>
    <destination node="{280b27b3-ee26-44fe-9b38-10d5e179286d}" port="{ce759ab2-693f-4a7a-afac-d5e61757c9ad}"/>
  </connection>
  <connection type="([table], [table])" uuid="{9624108f-07bb-4580-ace2-a650998b0e1e}">
    <source node="{00fb3992-6392-437b-acc8-240aacadd148}" port="{34f2c300-84d2-4eb3-9de1-a4f75c29e244}"/>
    <destination node="{aff95cff-71b1-4319-b18d-d6708185934d}" port="{8c224157-b5c6-4e53-ba28-422d0124b812}"/>
  </connection>
  <connection type="[table]" uuid="{9ed8a5bb-39f1-4110-b3fa-480ec73cc3a7}">
    <source node="{1706e87b-831d-4812-a47c-7b5d433b277c}" port="{d49cb872-4d73-4755-b319-00f212e3ef24}"/>
    <destination node="{ad5a09a6-3511-4bc6-9e36-a30ca17afbbd}" port="{08d0b095-88a8-4c12-9e44-356c06d4b9d6}"/>
  </connection>
  <connection type="[table]" uuid="{b7ab1469-22a2-4b18-aeaf-c64d50a05e3e}">
    <source node="{177db444-8159-40ab-b949-733c91ffe71f}" port="{d33a2397-a69b-48fa-be90-2baa6b24f8cf}"/>
    <destination node="{3c8854c0-f413-4d2a-94d4-212e4650c553}" port="{d0669ca8-16cb-4ce4-9706-5eb078387952}"/>
  </connection>
  <connection type="[table]" uuid="{caf57a7d-4bf9-412e-a2fb-4c67572b7c91}">
    <source node="{10817415-bc7d-4c4d-b442-fa4881ef0459}" port="{7343cc86-480c-458e-9600-25a41e02c728}"/>
    <destination node="{ccd0cd09-e73d-4925-8b71-082b6dce42ef}" port="{e4f933ac-e10f-48ce-9af2-85256c02f392}"/>
  </connection>
  <connection type="[table]" uuid="{dd2fd369-6a0b-418e-a20f-125f198936dd}">
    <source node="{bc279e1a-c2f1-49ff-b43e-cfb3ef16fbd4}" port="{cc519cbb-da70-4a9c-9af8-29fa6cc1c8bf}"/>
    <destination node="{c4313509-9c7f-4603-92ed-61e57af84c91}" port="{1f1d2628-1e1b-46ee-9af8-2e339d64f54d}"/>
  </connection>
  <connection type="[table]" uuid="{e2148593-626f-4e01-90ef-e7241167f67d}">
    <source node="{d6a3c7d7-5c46-4bbd-b7ff-4fc740829802}" port="{643cee3e-2d62-49cb-8e9a-ace546d9a5c1}"/>
    <destination node="{8f7ac0ea-5830-400b-87cc-6c0d7e87dd6b}" port="{d5d465a8-79ed-472b-9b2f-5521b719f66d}"/>
  </connection>
  <connection type="[table]" uuid="{e406b979-1e12-457a-8151-950ef5aef790}">
    <source node="{c4313509-9c7f-4603-92ed-61e57af84c91}" port="{87574ebd-4dc2-49ba-9226-a92784bee154}"/>
    <destination node="{04a16b87-32c5-4536-bd7e-041321b5ab93}" port="{eb185a53-7b7f-451d-a593-e10e66989709}"/>
  </connection>
  <connection type="[table]" uuid="{f3bf4182-4066-41d5-8de9-087805a813eb}">
    <source node="{10817415-bc7d-4c4d-b442-fa4881ef0459}" port="{7343cc86-480c-458e-9600-25a41e02c728}"/>
    <destination node="{00fb3992-6392-437b-acc8-240aacadd148}" port="{2c04edbe-9697-4df1-bbda-55bd702f7f15}"/>
  </connection>
  <connection type="[table]" uuid="{fe2240c4-0b67-4847-b2a1-bf67348388e8}">
    <source node="{d6a3c7d7-5c46-4bbd-b7ff-4fc740829802}" port="{e27cae61-6e8b-4b98-85f7-b01657594152}"/>
    <destination node="{1095d1c5-6ebf-4417-80b0-d4c3705df787}" port="{7a82b5de-ccff-4094-ad3d-07fe91739674}"/>
  </connection>
  <text color="Beige" height="75.0" uuid="{80de3416-2583-430a-aab6-d89fb41fbf97}" width="150.0" x="2050.0" y="1675.0">Odd number of elements.</text>
  <text color="Beige" height="75.0" uuid="{d9872ed3-d834-44de-98a7-d83371dce0d9}" width="150.0" x="2050.0" y="1875.0">Even number of elements.</text>
</flow>
