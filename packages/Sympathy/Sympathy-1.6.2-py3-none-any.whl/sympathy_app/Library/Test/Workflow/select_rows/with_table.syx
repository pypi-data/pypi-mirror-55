<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" uuid="{35aed6cc-c4a5-4bef-b05f-71b926560e68}">
  <label>with_table.syx</label>
  <author>Unknown</author>
  <version>1.0</version>
  <ports/>
  <flow cls="Flow" uuid="{1ae68688-a710-476e-87eb-caed33710605}" x="1825.0" y="2550.0">
    <label>Selection tables</label>
    <ports>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{d2987301-20ab-48d1-9d07-66ae39f2bc10}" x="2100.0" y="2375.0">
        <label>Port</label>
      </output>
    </ports>
    <node id="org.sysess.sympathy.data.table.calculatorgeneric" port_format="1.1" uuid="{00e97a5c-9133-4004-8635-bf7669924883}" x="1725.0" y="2550.0">
      <label>Calculator</label>
      <version>3.0</version>
      <description>Performs user-defined python calculations</description>
      <author>Greger Cronquist, Magnus Sand&#233;n, Sara Gustafzelius &amp; Benedikt Ziegler</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "calc_list": {
          "editor": null,
          "label": "List of calculations",
          "list": ["value = [s.encode('ascii') for s in arg['value']] #ENABLED:1"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [],
          "value_names": []
        },
        "copy_input": {
          "editor": null,
          "label": "Copy input",
          "order": 1,
          "type": "boolean",
          "value": true
        },
        "fail_strategy": {
          "editor": {
            "display": null,
            "edit": false,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Action on calculation failure",
          "list": ["Exception", "Skip calculation"],
          "mode": "selected",
          "order": 2,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["Exception"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="port0" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{b670d8ef-a571-4981-9aed-cb847de09588}">
          <label>Generic Input</label>
        </input>
        <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{28b71f9f-9587-4c9f-912f-2e8c7157c238}">
          <label>Table with results from the calculations.</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{1c6f664d-8e87-4279-904b-9d4cf48aedd4}" x="1625.0" y="2400.0">
      <label>datetime</label>
      <version>1.0</version>
      <description></description>
      <author>Magnus Sand&#233;n</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "json_table": {
          "editor": null,
          "label": "GUI",
          "order": 0,
          "type": "string",
          "value": "[[\"column\", \"U\", [\"datetime\"]], [\"operator\", \"U\", [\"&lt;=\"]], [\"value\", \"M\", [\"2018-03-21T00:00:00\"]]]"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{bb245542-5b81-4edf-bbcb-9d56f71c5dff}">
          <label>Manually created table</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.data.table.calculatorgeneric" port_format="1.1" uuid="{28353861-d5ed-47a0-8248-cabecc502f45}" x="1725.0" y="2625.0">
      <label>Calculator</label>
      <version>3.0</version>
      <description>Performs user-defined python calculations</description>
      <author>Greger Cronquist, Magnus Sand&#233;n, Sara Gustafzelius &amp; Benedikt Ziegler</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "calc_list": {
          "editor": null,
          "label": "List of calculations",
          "list": ["value = arg['value'] + 1j #ENABLED:1"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [],
          "value_names": []
        },
        "copy_input": {
          "editor": null,
          "label": "Copy input",
          "order": 1,
          "type": "boolean",
          "value": true
        },
        "fail_strategy": {
          "editor": {
            "display": null,
            "edit": false,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Action on calculation failure",
          "list": ["Exception", "Skip calculation"],
          "mode": "selected",
          "order": 2,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["Exception"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="port0" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{6a23e1bb-3679-4979-972d-e7d5209421e6}">
          <label>Generic Input</label>
        </input>
        <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{47f5353d-ba6c-4553-b80d-f543cf09426d}">
          <label>Table with results from the calculations.</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.data.table.calculatorgeneric" port_format="1.1" uuid="{4858b708-8a77-4b80-8348-e6e0a2025572}" x="1725.0" y="2475.0">
      <label>Calculator</label>
      <version>3.0</version>
      <description>Performs user-defined python calculations</description>
      <author>Greger Cronquist, Magnus Sand&#233;n, Sara Gustafzelius &amp; Benedikt Ziegler</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "calc_list": {
          "editor": null,
          "label": "List of calculations",
          "list": ["value = arg['value'] - np.datetime64('2018-03-20T00:00:00') #ENABLED:1"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [],
          "value_names": []
        },
        "copy_input": {
          "editor": null,
          "label": "Copy input",
          "order": 1,
          "type": "boolean",
          "value": true
        },
        "fail_strategy": {
          "editor": {
            "display": null,
            "edit": false,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Action on calculation failure",
          "list": ["Exception", "Skip calculation"],
          "mode": "selected",
          "order": 2,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["Exception"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="port0" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{b9bb4d40-c29a-4092-9caa-acaeddbd06f4}">
          <label>Generic Input</label>
        </input>
        <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{c2e0a880-2cfe-43f3-b01a-a935af7986f6}">
          <label>Table with results from the calculations.</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{4f63cb91-892f-4c33-ab5f-25568e682d01}" x="1625.0" y="2100.0">
      <label>text</label>
      <version>1.0</version>
      <description></description>
      <author>Magnus Sand&#233;n</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "json_table": {
          "editor": null,
          "label": "GUI",
          "order": 0,
          "type": "string",
          "value": "[[\"column\", \"U\", [\"text\"]], [\"operator\", \"U\", [\"==\"]], [\"value\", \"U\", [\"B\"]]]"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{c5759768-c589-47ab-845d-670942019766}">
          <label>Manually created table</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{6878e924-911f-4981-9062-2371b4974822}" x="1625.0" y="2250.0">
      <label>int</label>
      <version>1.0</version>
      <description></description>
      <author>Magnus Sand&#233;n</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "json_table": {
          "editor": null,
          "label": "GUI",
          "order": 0,
          "type": "string",
          "value": "[[\"column\", \"U\", [\"int\"]], [\"operator\", \"U\", [\"==\"]], [\"value\", \"i\", [2]]]"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{41b99cd9-0e1f-4bdd-9719-d11b922802c2}">
          <label>Manually created table</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{6af45d96-ea97-4f6b-af48-d5b90fd30437}" x="1625.0" y="2550.0">
      <label>binary</label>
      <version>1.0</version>
      <description></description>
      <author>Magnus Sand&#233;n</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "json_table": {
          "editor": null,
          "label": "GUI",
          "order": 0,
          "type": "string",
          "value": "[[\"column\", \"U\", [\"binary\"]], [\"operator\", \"U\", [\"==\"]], [\"value\", \"U\", [\"B\"]]]"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{4f98de60-92f7-4c27-b558-8ab1bbadc38e}">
          <label>Manually created table</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{8fcef244-aa34-4a01-bf21-c154cabe1da0}" x="1625.0" y="2625.0">
      <label>complex</label>
      <version>1.0</version>
      <description></description>
      <author>Magnus Sand&#233;n</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "json_table": {
          "editor": null,
          "label": "GUI",
          "order": 0,
          "type": "string",
          "value": "[[\"column\", \"U\", [\"complex\"]], [\"operator\", \"U\", [\"==\"]], [\"value\", \"f\", [0.2]]]"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{e4706626-ed86-4f08-8d6b-0ad54487eb38}">
          <label>Manually created table</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.appendlistnew" port_format="1.1" uuid="{98d95383-bb55-4efe-a79d-273b651fdc37}" x="1975.0" y="2375.0">
      <label>Append List</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{04d5f6b0-6f0b-485b-9737-b9c4bd469c60}">
          <label>Appended List</label>
        </input>
        <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{da147dc8-0158-4de9-825a-a45b98a3a963}">
          <label>The Item to be appended</label>
        </input>
        <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{8902d587-9339-4c72-a8d9-96e33dca4754}">
          <label>The Item to be appended</label>
        </input>
        <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{9403cf31-38d2-4fef-9ead-ac43bc19d5e1}">
          <label>The Item to be appended</label>
        </input>
        <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{9e37429d-3a5e-43fa-8cda-61828d0fa650}">
          <label>Appended List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{ab4475f3-39a8-4bb0-a6dd-18a32e2f9b43}" x="1625.0" y="2325.0">
      <label>bool</label>
      <version>1.0</version>
      <description></description>
      <author>Magnus Sand&#233;n</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "json_table": {
          "editor": null,
          "label": "GUI",
          "order": 0,
          "type": "string",
          "value": "[[\"column\", \"U\", [\"bool\"]], [\"operator\", \"U\", [\"==\"]], [\"value\", \"b\", [true]]]"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{61b636b6-4c2a-48ce-9335-17d00715f2b7}">
          <label>Manually created table</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.itemtolist" port_format="1.1" uuid="{ac37aaf9-e6e1-4375-84f8-1a61a427e9f4}" x="1825.0" y="2300.0">
      <label>Item to List</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "n": {
          "editor": null,
          "label": "Repeat number of times",
          "order": 0,
          "type": "integer",
          "value": 1
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{09bff187-0d04-42dd-a9c3-48cc6949b895}">
          <label>Input Item</label>
        </input>
        <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{219e790a-ce92-48d0-8eec-9fb5b8a25e4c}">
          <label>Input Item</label>
        </input>
        <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{d7f8977f-c1eb-46cc-a1de-bb22f3c96e8e}">
          <label>Input Item</label>
        </input>
        <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{1083d31f-6f5e-4080-8d8d-4d1789208cd5}">
          <label>Input Item</label>
        </input>
        <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{f449fafa-dbd4-4785-959d-3fc9d8bc30ef}">
          <label>Input Item</label>
        </input>
        <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{600d0869-bb91-4bd4-9777-7575f2ac664d}">
          <label>Item as List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{b9931bc6-7232-4111-abad-e948c752c4a4}" x="1625.0" y="2475.0">
      <label>timedelta</label>
      <version>1.0</version>
      <description></description>
      <author>Magnus Sand&#233;n</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "json_table": {
          "editor": null,
          "label": "GUI",
          "order": 0,
          "type": "string",
          "value": "[[\"column\", \"U\", [\"timedelta\"]], [\"operator\", \"U\", [\"&lt;=\"]], [\"value\", \"M\", [\"2018-03-21T00:00:00\"]]]"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{e4e7afff-99e3-4f40-8717-3c7d849772a9}">
          <label>Manually created table</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{f1ca1e8f-656b-4fc2-85d5-648a86b333f9}" x="1625.0" y="2175.0">
      <label>float</label>
      <version>1.0</version>
      <description></description>
      <author>Magnus Sand&#233;n</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "json_table": {
          "editor": null,
          "label": "GUI",
          "order": 0,
          "type": "string",
          "value": "[[\"column\", \"U\", [\"float\"]], [\"operator\", \"U\", [\"==\"]], [\"value\", \"f\", [0.2]]]"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{e5b384ab-6d05-41b9-9f2d-075202022e58}">
          <label>Manually created table</label>
        </output>
      </ports>
    </node>
    <connection type="table" uuid="{2bb2e9c9-1c3d-4287-bb5b-94a48d2bb597}">
      <source node="{8fcef244-aa34-4a01-bf21-c154cabe1da0}" port="{e4706626-ed86-4f08-8d6b-0ad54487eb38}"/>
      <destination node="{28353861-d5ed-47a0-8248-cabecc502f45}" port="{6a23e1bb-3679-4979-972d-e7d5209421e6}"/>
    </connection>
    <connection type="table" uuid="{2ecf94aa-4b53-4f45-a01c-56d725bdd2b4}">
      <source node="{f1ca1e8f-656b-4fc2-85d5-648a86b333f9}" port="{e5b384ab-6d05-41b9-9f2d-075202022e58}"/>
      <destination node="{ac37aaf9-e6e1-4375-84f8-1a61a427e9f4}" port="{219e790a-ce92-48d0-8eec-9fb5b8a25e4c}"/>
    </connection>
    <connection type="table" uuid="{5959fb58-9f2e-456a-840c-700b9985b7cc}">
      <source node="{ab4475f3-39a8-4bb0-a6dd-18a32e2f9b43}" port="{61b636b6-4c2a-48ce-9335-17d00715f2b7}"/>
      <destination node="{ac37aaf9-e6e1-4375-84f8-1a61a427e9f4}" port="{1083d31f-6f5e-4080-8d8d-4d1789208cd5}"/>
    </connection>
    <connection type="table" uuid="{6ca5a145-5812-47f1-ac29-2ffb69a8e760}">
      <source node="{6af45d96-ea97-4f6b-af48-d5b90fd30437}" port="{4f98de60-92f7-4c27-b558-8ab1bbadc38e}"/>
      <destination node="{00e97a5c-9133-4004-8635-bf7669924883}" port="{b670d8ef-a571-4981-9aed-cb847de09588}"/>
    </connection>
    <connection type="table" uuid="{8232925e-570d-47bc-b82e-a3baacc4d762}">
      <source node="{4f63cb91-892f-4c33-ab5f-25568e682d01}" port="{c5759768-c589-47ab-845d-670942019766}"/>
      <destination node="{ac37aaf9-e6e1-4375-84f8-1a61a427e9f4}" port="{09bff187-0d04-42dd-a9c3-48cc6949b895}"/>
    </connection>
    <connection type="table" uuid="{919598ab-04b5-4b19-a8ec-e6cfb50df16d}">
      <source node="{28353861-d5ed-47a0-8248-cabecc502f45}" port="{47f5353d-ba6c-4553-b80d-f543cf09426d}"/>
      <destination node="{98d95383-bb55-4efe-a79d-273b651fdc37}" port="{9403cf31-38d2-4fef-9ead-ac43bc19d5e1}"/>
    </connection>
    <connection type="table" uuid="{9e300560-e3a3-49c7-9139-e47c4cee5983}">
      <source node="{4858b708-8a77-4b80-8348-e6e0a2025572}" port="{c2e0a880-2cfe-43f3-b01a-a935af7986f6}"/>
      <destination node="{98d95383-bb55-4efe-a79d-273b651fdc37}" port="{da147dc8-0158-4de9-825a-a45b98a3a963}"/>
    </connection>
    <connection type="[table]" uuid="{abff0b7a-fd39-4135-8af9-32c80ccc9732}">
      <source node="{98d95383-bb55-4efe-a79d-273b651fdc37}" port="{9e37429d-3a5e-43fa-8cda-61828d0fa650}"/>
      <destination node="{1ae68688-a710-476e-87eb-caed33710605}" port="{d2987301-20ab-48d1-9d07-66ae39f2bc10}"/>
    </connection>
    <connection type="[table]" uuid="{ae83cb17-d00a-462e-a016-07e82e178fe1}">
      <source node="{ac37aaf9-e6e1-4375-84f8-1a61a427e9f4}" port="{600d0869-bb91-4bd4-9777-7575f2ac664d}"/>
      <destination node="{98d95383-bb55-4efe-a79d-273b651fdc37}" port="{04d5f6b0-6f0b-485b-9737-b9c4bd469c60}"/>
    </connection>
    <connection type="table" uuid="{b9a65e3c-1a8d-47c1-a834-81676c42c2f1}">
      <source node="{00e97a5c-9133-4004-8635-bf7669924883}" port="{28b71f9f-9587-4c9f-912f-2e8c7157c238}"/>
      <destination node="{98d95383-bb55-4efe-a79d-273b651fdc37}" port="{8902d587-9339-4c72-a8d9-96e33dca4754}"/>
    </connection>
    <connection type="table" uuid="{ce2d6b90-2ce7-4ba6-bcdd-71600cc65f3a}">
      <source node="{1c6f664d-8e87-4279-904b-9d4cf48aedd4}" port="{bb245542-5b81-4edf-bbcb-9d56f71c5dff}"/>
      <destination node="{ac37aaf9-e6e1-4375-84f8-1a61a427e9f4}" port="{f449fafa-dbd4-4785-959d-3fc9d8bc30ef}"/>
    </connection>
    <connection type="table" uuid="{da0a477d-3097-4db0-a631-aac3bf40d2e8}">
      <source node="{b9931bc6-7232-4111-abad-e948c752c4a4}" port="{e4e7afff-99e3-4f40-8717-3c7d849772a9}"/>
      <destination node="{4858b708-8a77-4b80-8348-e6e0a2025572}" port="{b9bb4d40-c29a-4092-9caa-acaeddbd06f4}"/>
    </connection>
    <connection type="table" uuid="{fca82cba-a441-40f0-9e75-d900e18c3e46}">
      <source node="{6878e924-911f-4981-9062-2371b4974822}" port="{41b99cd9-0e1f-4bdd-9719-d11b922802c2}"/>
      <destination node="{ac37aaf9-e6e1-4375-84f8-1a61a427e9f4}" port="{d7f8977f-c1eb-46cc-a1de-bb22f3c96e8e}"/>
    </connection>
  </flow>
  <flow cls="Flow" uuid="{1aebd843-abac-401f-ba0a-e6b455b3e926}" x="1975.0" y="2875.0">
    <label>Select rows for each selection table</label>
    <ports>
      <input index="0" key="Selection tables" parent="True" scheme="hdf5" type="[table]" uuid="{371e8c7e-6124-4db2-93be-15e87185e863}" x="1650.0" y="2250.0">
        <label>Selection tables</label>
      </input>
      <input index="1" key="Input data" parent="True" scheme="hdf5" type="table" uuid="{947fef68-77da-463b-a6a8-3bbf54a8d6c6}" x="1650.0" y="2350.0">
        <label>Input data</label>
      </input>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{484fbc1f-3750-4672-8d88-38d2de8f7257}" x="2225.0" y="2250.0">
        <label>Port</label>
      </output>
    </ports>
    <flow cls="Lambda" uuid="{db7674b0-7f36-4819-a18a-54abc4c52393}" x="1975.0" y="2150.0">
      <label>Select rows in Table with Table</label>
      <ports>
        <input index="0" key="Port" parent="False" scheme="hdf5" type="(table, table)" uuid="{c5aead81-2448-410d-85ef-9eb573fc0d43}" x="1750.0" y="2000.0">
          <label>Port</label>
        </input>
        <output index="0" key="Port" parent="False" scheme="hdf5" type="table" uuid="{c116eafc-4c92-4f23-a56f-d40d71678057}" x="2150.0" y="2000.0">
          <label>Port</label>
        </output>
      </ports>
      <basic_ports>
        <output key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt;" uuid="{de5fc6af-7c35-46ad-880d-ea8c0a772dbd}">
          <label>Lambda function</label>
        </output>
      </basic_ports>
      <node id="org.sysess.sympathy.data.table.selecttablerowsfromtable" port_format="1.1" uuid="{de8b2742-4d2b-4377-bbf1-f0adf67c80f5}" x="2025.0" y="2000.0">
        <label>Select rows in Table with Table</label>
        <version>1.0</version>
        <description>Select rows in Table by using an additional selection Table with predefined comparison relations.</description>
        <author>Greger Cronquist</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">
        {
          "column": {
            "editor": {
              "display": null,
              "edit": true,
              "filter": true,
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Column with column names",
            "list": [],
            "mode": "selected",
            "order": 0,
            "type": "list",
            "value": [],
            "value_names": ["column"]
          },
          "constraint": {
            "editor": {
              "display": null,
              "edit": true,
              "filter": true,
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Column with constraint values",
            "list": [],
            "mode": "selected",
            "order": 2,
            "type": "list",
            "value": [],
            "value_names": ["value"]
          },
          "eval": {
            "editor": {
              "display": null,
              "edit": false,
              "filter": false,
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Evaluate values as code",
            "order": 4,
            "type": "boolean",
            "value": false
          },
          "reduction": {
            "editor": {
              "display": null,
              "edit": false,
              "filter": false,
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Reduction:",
            "list": ["all", "any"],
            "mode": "selected",
            "order": 3,
            "type": "list",
            "value": [0],
            "value_names": ["all"]
          },
          "relation": {
            "editor": {
              "display": null,
              "edit": true,
              "filter": true,
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Column with comparison operators",
            "list": [],
            "mode": "selected",
            "order": 1,
            "type": "list",
            "value": [],
            "value_names": ["operator"]
          },
          "type": "group"
        }
        </parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{79326ae1-07dc-4f68-907a-aebebd388119}">
            <label>Table with three columns that defines a set of comparison relations. Each row in the set will set up a comparison relation with a column name, a comparison operator and a constraint value.</label>
          </input>
          <input key="port2" scheme="hdf5" type="table" type_base="table" uuid="{379fb574-eea1-4203-933f-a422987c4eca}">
            <label>Input Table</label>
          </input>
          <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{27796cdd-d25e-4ac4-9b11-29efb3039c61}">
            <label>Table with rows in Selection</label>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.tuple.untuple2" port_format="1.1" uuid="{eef28ac5-3525-4f24-8bef-ba3caf6a5417}" x="1900.0" y="2000.0">
        <label>Untuple</label>
        <version>1.0</version>
        <description></description>
        <author>Erik der Hagopian</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">{"type": "group"}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="(table, table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{e5e238d1-b8c1-4ff9-849d-6d81a16ab504}">
            <label>Input</label>
          </input>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{a8baf622-e0e2-493b-b0f5-858f5b11b066}">
            <label>Output</label>
          </output>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{65338e97-84b2-4896-b1bb-55bdf072d4cf}">
            <label>Output</label>
          </output>
        </ports>
      </node>
      <connection type="(table, table)" uuid="{6b119d0d-5e6a-4b07-800d-90805b8eec11}">
        <source node="{db7674b0-7f36-4819-a18a-54abc4c52393}" port="{c5aead81-2448-410d-85ef-9eb573fc0d43}"/>
        <destination node="{eef28ac5-3525-4f24-8bef-ba3caf6a5417}" port="{e5e238d1-b8c1-4ff9-849d-6d81a16ab504}"/>
      </connection>
      <connection type="table" uuid="{906e46c7-9c40-4f66-84d2-d3f129bde336}">
        <source node="{eef28ac5-3525-4f24-8bef-ba3caf6a5417}" port="{65338e97-84b2-4896-b1bb-55bdf072d4cf}"/>
        <destination node="{de8b2742-4d2b-4377-bbf1-f0adf67c80f5}" port="{379fb574-eea1-4203-933f-a422987c4eca}"/>
      </connection>
      <connection type="table" uuid="{a8894141-d6f5-4612-bca0-e01fc1e72fd7}">
        <source node="{de8b2742-4d2b-4377-bbf1-f0adf67c80f5}" port="{27796cdd-d25e-4ac4-9b11-29efb3039c61}"/>
        <destination node="{db7674b0-7f36-4819-a18a-54abc4c52393}" port="{c116eafc-4c92-4f23-a56f-d40d71678057}"/>
      </connection>
      <connection type="table" uuid="{cec70abd-b31a-4642-bba3-4ca47d36999c}">
        <source node="{eef28ac5-3525-4f24-8bef-ba3caf6a5417}" port="{a8baf622-e0e2-493b-b0f5-858f5b11b066}"/>
        <destination node="{de8b2742-4d2b-4377-bbf1-f0adf67c80f5}" port="{79326ae1-07dc-4f68-907a-aebebd388119}"/>
      </connection>
    </flow>
    <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{19a4e22c-d8c5-475f-97c4-0aea14b0aabf}" x="1975.0" y="2250.0">
      <label>Zip Tuple</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{af5d53cb-fdb6-40b8-b660-678c4f2fd302}">
          <label>Input</label>
        </input>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{4c7b3ec8-e6aa-402d-88aa-d6225f2cd242}">
          <label>Input</label>
        </input>
        <output key="output" scheme="hdf5" type="[(table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{94e1c7e3-cccd-4ad5-b981-921a8360a7df}">
          <label>Output</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.padlistitem" port_format="1.1" uuid="{1c9d2847-491f-4476-a09b-a580d56450d3}" x="1850.0" y="2300.0">
      <label>Pad List with Item</label>
      <version>1.0</version>
      <description>Pad a list with item match the length of template</description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="template" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{4b426abf-1bd6-4ed6-90fd-c40999f6b685}">
          <label>List with deciding length</label>
        </input>
        <input key="item" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{f2c7f92b-2c4f-4237-bd15-46cb439b0bd3}">
          <label>Item to be used as padding</label>
        </input>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{b7a6f3ec-4b0c-4d92-b158-7a9868a28829}">
          <label>List that will be padded</label>
        </input>
        <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{0152354d-5129-46d1-a69c-6c73ecfb44ce}">
          <label>The padded List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.builtin.empty" port_format="1.1" uuid="{a1bff25b-efac-48e2-ba1a-f445bb936a0c}" x="1650.0" y="2450.0">
      <label>Empty</label>
      <version>1.1</version>
      <description>Generate empty data of inferred or specified type</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
      <copyright>(C) 2016 Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "datatype": {
          "editor": null,
          "label": "Datatype",
          "order": 0,
          "type": "string",
          "value": "&lt;a&gt;"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{fca50ff4-af58-4ba1-9c7a-3959ff71a9d7}">
          <label>Output port containing empty data (must be connected or specified)</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.builtin.map" port_format="1.1" uuid="{b43d902d-0bc3-45b8-bb62-8c72e8bddfaa}" x="2125.0" y="2250.0">
      <label>Map</label>
      <version>1.0</version>
      <description>Map Lambda function over each element in argument list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "fail_strategy": {
          "editor": {
            "display": null,
            "edit": false,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Action on exception",
          "list": ["Error", "Create Empty Item", "Skip Item"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["Error"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{e59a91fd-82af-412b-b94b-f55456450bf0}">
          <label>Lambda Function to Map</label>
        </input>
        <input key="List" scheme="hdf5" type="[(table, table)]" type_base="[&lt;a&gt;]" uuid="{5de1fa6a-baf0-4aee-8a27-15d41eb99995}">
          <label>Argument List</label>
        </input>
        <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{8b8e93f1-778a-4e7e-9df7-66409a8a608d}">
          <label>Output List</label>
        </output>
      </ports>
    </node>
    <connection type="[table]" uuid="{2d62fba5-d9ce-4275-a61a-60272108be72}">
      <source node="{a1bff25b-efac-48e2-ba1a-f445bb936a0c}" port="{fca50ff4-af58-4ba1-9c7a-3959ff71a9d7}"/>
      <destination node="{1c9d2847-491f-4476-a09b-a580d56450d3}" port="{b7a6f3ec-4b0c-4d92-b158-7a9868a28829}"/>
    </connection>
    <connection type="[table]" uuid="{6236acdc-f24a-4b75-835d-bd91e360654c}">
      <source node="{1aebd843-abac-401f-ba0a-e6b455b3e926}" port="{371e8c7e-6124-4db2-93be-15e87185e863}"/>
      <destination node="{19a4e22c-d8c5-475f-97c4-0aea14b0aabf}" port="{af5d53cb-fdb6-40b8-b660-678c4f2fd302}"/>
    </connection>
    <connection type="(table, table) -&gt; table" uuid="{7a6be182-6780-456b-8821-42eeab27556b}">
      <source node="{db7674b0-7f36-4819-a18a-54abc4c52393}" port="{de5fc6af-7c35-46ad-880d-ea8c0a772dbd}"/>
      <destination node="{b43d902d-0bc3-45b8-bb62-8c72e8bddfaa}" port="{e59a91fd-82af-412b-b94b-f55456450bf0}"/>
    </connection>
    <connection type="[table]" uuid="{7d6aec3a-b2f4-4f09-8d80-acf978fa3bc8}">
      <source node="{b43d902d-0bc3-45b8-bb62-8c72e8bddfaa}" port="{8b8e93f1-778a-4e7e-9df7-66409a8a608d}"/>
      <destination node="{1aebd843-abac-401f-ba0a-e6b455b3e926}" port="{484fbc1f-3750-4672-8d88-38d2de8f7257}"/>
    </connection>
    <connection type="[table]" uuid="{90b9aad0-a2eb-46a9-a999-8640306c31c4}">
      <source node="{1aebd843-abac-401f-ba0a-e6b455b3e926}" port="{371e8c7e-6124-4db2-93be-15e87185e863}"/>
      <destination node="{1c9d2847-491f-4476-a09b-a580d56450d3}" port="{4b426abf-1bd6-4ed6-90fd-c40999f6b685}"/>
    </connection>
    <connection type="[table]" uuid="{9c65adf5-83c2-496f-a812-24a8b0fb6498}">
      <source node="{1c9d2847-491f-4476-a09b-a580d56450d3}" port="{0152354d-5129-46d1-a69c-6c73ecfb44ce}"/>
      <destination node="{19a4e22c-d8c5-475f-97c4-0aea14b0aabf}" port="{4c7b3ec8-e6aa-402d-88aa-d6225f2cd242}"/>
    </connection>
    <connection type="[(table, table)]" uuid="{c0ab1718-b7aa-4478-9263-0b318920ecb3}">
      <source node="{19a4e22c-d8c5-475f-97c4-0aea14b0aabf}" port="{94e1c7e3-cccd-4ad5-b981-921a8360a7df}"/>
      <destination node="{b43d902d-0bc3-45b8-bb62-8c72e8bddfaa}" port="{5de1fa6a-baf0-4aee-8a27-15d41eb99995}"/>
    </connection>
    <connection type="table" uuid="{ecee2cea-ff5b-4af1-86e3-4d94d252aecc}">
      <source node="{1aebd843-abac-401f-ba0a-e6b455b3e926}" port="{947fef68-77da-463b-a6a8-3bbf54a8d6c6}"/>
      <destination node="{1c9d2847-491f-4476-a09b-a580d56450d3}" port="{f2c7f92b-2c4f-4237-bd15-46cb439b0bd3}"/>
    </connection>
  </flow>
  <flow cls="Flow" uuid="{3f5c5b39-d415-4fb6-963e-331d4955e1a0}" x="1825.0" y="2275.0">
    <label>Selection tables</label>
    <ports>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{4654d96c-732d-4113-ad71-0f9ed388e90d}" x="2100.0" y="2375.0">
        <label>Port</label>
      </output>
    </ports>
    <node id="org.sysess.sympathy.data.table.vsplittablenode" port_format="1.1" uuid="{bf97fa24-5589-47a2-b310-b61231b74ca5}" x="1975.0" y="2375.0">
      <label>VSplit Table</label>
      <version>1.0</version>
      <description>Split Table rowwise (vertically), grouping unique values of an index column.</description>
      <author>Alexander Busck</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "input_index": {
          "editor": {
            "display": null,
            "edit": true,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Index column",
          "order": 1,
          "type": "string",
          "value": ""
        },
        "missing_index": {
          "editor": {
            "display": null,
            "edit": false,
            "include_empty": false,
            "options": ["Multiple tables, one for each row", "Single table, one table for all rows", "Error"],
            "type": "combobox"
          },
          "label": "Action on missing index",
          "order": 2,
          "type": "string",
          "value": "Multiple tables, one for each row"
        },
        "no_index": {
          "editor": null,
          "label": "One table for each row.",
          "order": 0,
          "type": "boolean",
          "value": true
        },
        "remove_fill": {
          "editor": null,
          "label": "Remove complement columns",
          "order": 3,
          "type": "boolean",
          "value": false
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{dc374fed-b9ad-4e3d-8103-33731a98a6ce}">
          <label>Input Table</label>
        </input>
        <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{a03a9d99-ed0f-4e69-bea2-c595095d4ceb}">
          <label>Split Tables</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{c3f77c38-c978-4e64-9f19-3260bd03b93d}" x="1850.0" y="2375.0">
      <label>Selections</label>
      <version>1.0</version>
      <description></description>
      <author>Magnus Sand&#233;n</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "json_table": {
          "editor": null,
          "label": "GUI",
          "order": 0,
          "type": "string",
          "value": "[[\"column\", \"U\", [\"text\", \"float\", \"int\", \"bool\", \"datetime\", \"timedelta\", \"binary\", \"complex\"]], [\"operator\", \"U\", [\"==\", \"==\", \"==\", \"==\", \"&lt;=\", \"&lt;=\", \"==\", \"==\"]], [\"value\", \"U\", [\"u'B'\", \"0.2\", \"2\", \"True\", \"np.datetime64('2018-03-21T00:00:00')\", \"np.timedelta64(1, 'D')\", \"b'B'\", \"0.2 + 1j\"]]]"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{b61494d0-2a07-4776-8fa2-adf2df3ccd20}">
          <label>Manually created table</label>
        </output>
      </ports>
    </node>
    <connection type="[table]" uuid="{1044f555-a9e0-4e6d-98e4-97bb147f27fd}">
      <source node="{bf97fa24-5589-47a2-b310-b61231b74ca5}" port="{a03a9d99-ed0f-4e69-bea2-c595095d4ceb}"/>
      <destination node="{3f5c5b39-d415-4fb6-963e-331d4955e1a0}" port="{4654d96c-732d-4113-ad71-0f9ed388e90d}"/>
    </connection>
    <connection type="table" uuid="{1d65731e-b915-4db8-867f-8568fec94932}">
      <source node="{c3f77c38-c978-4e64-9f19-3260bd03b93d}" port="{b61494d0-2a07-4776-8fa2-adf2df3ccd20}"/>
      <destination node="{bf97fa24-5589-47a2-b310-b61231b74ca5}" port="{dc374fed-b9ad-4e3d-8103-33731a98a6ce}"/>
    </connection>
  </flow>
  <flow cls="Flow" uuid="{5071ab2f-41af-451a-8fba-5640e0c4dd3d}" x="2125.0" y="2875.0">
    <label>Assert that all selections selected the same row</label>
    <ports>
      <input index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{c42b423e-2119-49b8-b255-fb2bdc071e13}" x="1800.0" y="1950.0">
        <label>Port</label>
      </input>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="table" uuid="{84599894-8917-49e1-b0f3-d81a605bdb8a}" x="2500.0" y="1950.0">
        <label>Port</label>
      </output>
    </ports>
    <flow cls="Lambda" uuid="{c110cfbc-5307-4c89-af90-4a4940376d87}" x="2150.0" y="1856.0">
      <label>Assert Equal Table</label>
      <ports>
        <input index="0" key="Port" parent="False" scheme="hdf5" type="(table, table)" uuid="{50afe921-972c-4dde-aa5a-3667100c08e3}" x="1725.0" y="2000.0">
          <label>Port</label>
        </input>
        <output index="0" key="Port" parent="False" scheme="hdf5" type="table" uuid="{cf5d1f2c-fe8a-4aed-9bae-5c5135bae485}" x="2100.0" y="2000.0">
          <label>Port</label>
        </output>
      </ports>
      <basic_ports>
        <output key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt;" uuid="{740dd8e8-fcd5-4e80-b047-b3047f04c728}">
          <label>Lambda function</label>
        </output>
      </basic_ports>
      <node id="org.sysess.sympathy.tuple.untuple2" port_format="1.1" uuid="{58d97ef6-e8d2-48a5-b7ff-83514e719da7}" x="1875.0" y="2000.0">
        <label>Untuple</label>
        <version>1.0</version>
        <description></description>
        <author>Erik der Hagopian</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">{"type": "group"}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="(table, table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{071be9d5-c318-430f-b9a5-e04cc66ad008}">
            <label>Input</label>
          </input>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{4b00f92c-a5ac-40a2-a940-5f859369d6bf}">
            <label>Output</label>
          </output>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{f26553d4-1d47-4117-8c2c-1c54f7640673}">
            <label>Output</label>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.data.table.assertequaltable" port_format="1.1" uuid="{f7f48d47-c4d0-4118-ab61-d145935ff667}" x="2000.0" y="2000.0">
        <label>Assert Equal Table</label>
        <version>1.0</version>
        <description></description>
        <author>Magnus Sand&#233;n</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">
        {
          "abs_tol": {
            "editor": null,
            "label": "Absolute tolerance",
            "order": 6,
            "type": "float",
            "value": 1e-08
          },
          "col_attrs": {
            "editor": null,
            "label": "Compare column attributes",
            "order": 1,
            "type": "boolean",
            "value": true
          },
          "col_order": {
            "editor": null,
            "label": "Compare column order",
            "order": 0,
            "type": "boolean",
            "value": true
          },
          "inexact_float": {
            "editor": null,
            "label": "Approximate comparison of floats",
            "order": 4,
            "type": "boolean",
            "value": false
          },
          "rel_tol": {
            "editor": null,
            "label": "Relative tolerance",
            "order": 5,
            "type": "float",
            "value": 1e-05
          },
          "tbl_attrs": {
            "editor": null,
            "label": "Compare table attributes",
            "order": 3,
            "type": "boolean",
            "value": true
          },
          "tbl_names": {
            "editor": null,
            "label": "Compare table names",
            "order": 2,
            "type": "boolean",
            "value": true
          },
          "type": "group"
        }
        </parameters>
        <ports>
          <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{1db2783f-f34f-4317-ad17-1b2f880f009d}">
            <label>Table A</label>
          </input>
          <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{50fef5a2-ca16-4a89-8179-4874b90df92c}">
            <label>Table B</label>
          </input>
          <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{3a3b975d-726a-439c-ac17-b46d4704a77b}">
            <label>Output Table</label>
          </output>
        </ports>
      </node>
      <connection type="(table, table)" uuid="{440be1fa-e585-4af7-b462-7ffef489ea87}">
        <source node="{c110cfbc-5307-4c89-af90-4a4940376d87}" port="{50afe921-972c-4dde-aa5a-3667100c08e3}"/>
        <destination node="{58d97ef6-e8d2-48a5-b7ff-83514e719da7}" port="{071be9d5-c318-430f-b9a5-e04cc66ad008}"/>
      </connection>
      <connection type="table" uuid="{80bc5aa1-d8a2-434b-a17f-e96da86600f4}">
        <source node="{f7f48d47-c4d0-4118-ab61-d145935ff667}" port="{3a3b975d-726a-439c-ac17-b46d4704a77b}"/>
        <destination node="{c110cfbc-5307-4c89-af90-4a4940376d87}" port="{cf5d1f2c-fe8a-4aed-9bae-5c5135bae485}"/>
      </connection>
      <connection type="table" uuid="{c3683596-753b-43a2-810e-e66212129e4e}">
        <source node="{58d97ef6-e8d2-48a5-b7ff-83514e719da7}" port="{f26553d4-1d47-4117-8c2c-1c54f7640673}"/>
        <destination node="{f7f48d47-c4d0-4118-ab61-d145935ff667}" port="{50fef5a2-ca16-4a89-8179-4874b90df92c}"/>
      </connection>
      <connection type="table" uuid="{e8e184c9-655e-46e1-ab0d-ee116a673aab}">
        <source node="{58d97ef6-e8d2-48a5-b7ff-83514e719da7}" port="{4b00f92c-a5ac-40a2-a940-5f859369d6bf}"/>
        <destination node="{f7f48d47-c4d0-4118-ab61-d145935ff667}" port="{1db2783f-f34f-4317-ad17-1b2f880f009d}"/>
      </connection>
    </flow>
    <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{1554ddb9-9d83-4725-9c8d-2b21560f02a8}" x="2150.0" y="1950.0">
      <label>Zip Tuple</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{bc5a7ce7-ad32-4ad9-b020-5cd4f9ee732e}">
          <label>Input</label>
        </input>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{1302234a-3979-48f4-8d4c-011bfe78b07b}">
          <label>Input</label>
        </input>
        <output key="output" scheme="hdf5" type="[(table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{4ce25385-4ca6-4ef9-8f3d-1502818ccc5f}">
          <label>Output</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.getitemlist" port_format="1.1" uuid="{24d3d36e-021b-4357-9abe-1b06630ab41e}" x="1925.0" y="1950.0">
      <label>Get Item List</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "index": {
          "editor": {
            "display": null,
            "edit": true,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Index",
          "list": ["0", "1", "2", "3", "4", "5", "6", "7"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["0"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{2bc3a52f-21c1-476d-8741-1e13c8e08d33}">
          <label>Input List</label>
        </input>
        <output key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{2f1597ff-99d7-4abc-adce-45f5c4fa85e9}">
          <label>Output selected Item from List</label>
        </output>
        <output key="rest" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{fae9696f-e5fd-4793-9e40-beb08e803bb8}">
          <label>Output non-selected Items from List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.builtin.empty" port_format="1.1" uuid="{86f0fc77-2c61-4292-80be-6ed4a62c5cdf}" x="1925.0" y="2050.0">
      <label>Empty</label>
      <version>1.1</version>
      <description>Generate empty data of inferred or specified type</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
      <copyright>(C) 2016 Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "datatype": {
          "editor": null,
          "label": "Datatype",
          "order": 0,
          "type": "string",
          "value": "&lt;a&gt;"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{c6e8e35f-f539-4d13-914e-2992086aba58}">
          <label>Output port containing empty data (must be connected or specified)</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.builtin.map" port_format="1.1" uuid="{920707de-f8dc-462d-9fd8-5b187834c721}" x="2275.0" y="1950.0">
      <label>Map</label>
      <version>1.0</version>
      <description>Map Lambda function over each element in argument list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "fail_strategy": {
          "editor": {
            "display": null,
            "edit": false,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Action on exception",
          "list": ["Error", "Create Empty Item", "Skip Item"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["Error"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{cf612c29-7a92-4d15-aad2-694fe6559918}">
          <label>Lambda Function to Map</label>
        </input>
        <input key="List" scheme="hdf5" type="[(table, table)]" type_base="[&lt;a&gt;]" uuid="{a6c97c17-3fbb-41d7-a23c-455c29aecaa4}">
          <label>Argument List</label>
        </input>
        <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{f66e469e-a73d-402c-b740-a077791b5755}">
          <label>Output List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.getitemlist" port_format="1.1" uuid="{f4612fd5-93ca-4890-a862-2afea486a584}" x="2400.0" y="1950.0">
      <label>Get Item List</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "index": {
          "editor": {
            "display": null,
            "edit": true,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Index",
          "list": ["0"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["0"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{a9ec191b-9bd6-430e-8f13-4e2474b7ec09}">
          <label>Input List</label>
        </input>
        <output key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{579d45cc-fbe0-43f3-a4d0-ad2669c51503}">
          <label>Output selected Item from List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.padlistitem" port_format="1.1" uuid="{fb47f8da-147e-4330-a5d3-e5f4e88d361f}" x="2050.0" y="2000.0">
      <label>Pad List with Item</label>
      <version>1.0</version>
      <description>Pad a list with item match the length of template</description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="template" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{f53186aa-72c2-46e1-a903-f11a793f9ecd}">
          <label>List with deciding length</label>
        </input>
        <input key="item" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{2532095c-efe1-4c51-be4e-ec16ee420f41}">
          <label>Item to be used as padding</label>
        </input>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{64cdcce6-409c-4c4b-a420-9b088718a7c8}">
          <label>List that will be padded</label>
        </input>
        <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{03afbbb8-dfa8-4ae2-8c56-3c352f0db380}">
          <label>The padded List</label>
        </output>
      </ports>
    </node>
    <connection type="[(table, table)]" uuid="{08e281bd-4864-4b4f-b047-d30af7b95cec}">
      <source node="{1554ddb9-9d83-4725-9c8d-2b21560f02a8}" port="{4ce25385-4ca6-4ef9-8f3d-1502818ccc5f}"/>
      <destination node="{920707de-f8dc-462d-9fd8-5b187834c721}" port="{a6c97c17-3fbb-41d7-a23c-455c29aecaa4}"/>
    </connection>
    <connection type="[table]" uuid="{235a7cb5-df04-4320-ba91-34c4ec5e2786}">
      <source node="{5071ab2f-41af-451a-8fba-5640e0c4dd3d}" port="{c42b423e-2119-49b8-b255-fb2bdc071e13}"/>
      <destination node="{24d3d36e-021b-4357-9abe-1b06630ab41e}" port="{2bc3a52f-21c1-476d-8741-1e13c8e08d33}"/>
    </connection>
    <connection type="[table]" uuid="{45818bb8-d0a3-4af3-a15f-a124816e73fa}">
      <source node="{24d3d36e-021b-4357-9abe-1b06630ab41e}" port="{fae9696f-e5fd-4793-9e40-beb08e803bb8}"/>
      <destination node="{1554ddb9-9d83-4725-9c8d-2b21560f02a8}" port="{bc5a7ce7-ad32-4ad9-b020-5cd4f9ee732e}"/>
    </connection>
    <connection type="[table]" uuid="{a2ee2b94-1c3d-4e80-a1b4-e787771729f0}">
      <source node="{86f0fc77-2c61-4292-80be-6ed4a62c5cdf}" port="{c6e8e35f-f539-4d13-914e-2992086aba58}"/>
      <destination node="{fb47f8da-147e-4330-a5d3-e5f4e88d361f}" port="{64cdcce6-409c-4c4b-a420-9b088718a7c8}"/>
    </connection>
    <connection type="[table]" uuid="{c7c18f29-ed17-48b3-8d8d-2d58ef3e70ce}">
      <source node="{24d3d36e-021b-4357-9abe-1b06630ab41e}" port="{fae9696f-e5fd-4793-9e40-beb08e803bb8}"/>
      <destination node="{fb47f8da-147e-4330-a5d3-e5f4e88d361f}" port="{f53186aa-72c2-46e1-a903-f11a793f9ecd}"/>
    </connection>
    <connection type="[table]" uuid="{d2788cf3-0186-4bfe-9397-78ce864bd3c4}">
      <source node="{920707de-f8dc-462d-9fd8-5b187834c721}" port="{f66e469e-a73d-402c-b740-a077791b5755}"/>
      <destination node="{f4612fd5-93ca-4890-a862-2afea486a584}" port="{a9ec191b-9bd6-430e-8f13-4e2474b7ec09}"/>
    </connection>
    <connection type="(table, table) -&gt; table" uuid="{d6c1fce9-2481-414c-8593-e0ade24824dd}">
      <source node="{c110cfbc-5307-4c89-af90-4a4940376d87}" port="{740dd8e8-fcd5-4e80-b047-b3047f04c728}"/>
      <destination node="{920707de-f8dc-462d-9fd8-5b187834c721}" port="{cf612c29-7a92-4d15-aad2-694fe6559918}"/>
    </connection>
    <connection type="table" uuid="{e01c4cd5-685f-4b5a-b15c-e32a5f41b368}">
      <source node="{f4612fd5-93ca-4890-a862-2afea486a584}" port="{579d45cc-fbe0-43f3-a4d0-ad2669c51503}"/>
      <destination node="{5071ab2f-41af-451a-8fba-5640e0c4dd3d}" port="{84599894-8917-49e1-b0f3-d81a605bdb8a}"/>
    </connection>
    <connection type="[table]" uuid="{f8bf3a62-b85b-4fe5-9ad0-a960135afda3}">
      <source node="{fb47f8da-147e-4330-a5d3-e5f4e88d361f}" port="{03afbbb8-dfa8-4ae2-8c56-3c352f0db380}"/>
      <destination node="{1554ddb9-9d83-4725-9c8d-2b21560f02a8}" port="{1302234a-3979-48f4-8d4c-011bfe78b07b}"/>
    </connection>
    <connection type="table" uuid="{fe4c67dd-3501-4125-a291-b7a22e6cf143}">
      <source node="{24d3d36e-021b-4357-9abe-1b06630ab41e}" port="{2f1597ff-99d7-4abc-adce-45f5c4fa85e9}"/>
      <destination node="{fb47f8da-147e-4330-a5d3-e5f4e88d361f}" port="{2532095c-efe1-4c51-be4e-ec16ee420f41}"/>
    </connection>
  </flow>
  <flow cls="Flow" uuid="{50b9d251-5ef6-45e6-989e-732b1e131183}" x="2125.0" y="2325.0">
    <label>Assert that all selections selected the same row</label>
    <ports>
      <input index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{0ef1596d-2748-4263-b881-49672cec40f7}" x="1800.0" y="1950.0">
        <label>Port</label>
      </input>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="table" uuid="{2c5ec85a-9147-4f8c-9140-53ba5be3ce74}" x="2500.0" y="1950.0">
        <label>Port</label>
      </output>
    </ports>
    <flow cls="Lambda" uuid="{fd443202-cd05-4184-9430-56959223563e}" x="2150.0" y="1856.0">
      <label>Assert Equal Table</label>
      <ports>
        <input index="0" key="Port" parent="False" scheme="hdf5" type="(table, table)" uuid="{7578d05f-250c-40be-b116-a924ffd62970}" x="1725.0" y="2000.0">
          <label>Port</label>
        </input>
        <output index="0" key="Port" parent="False" scheme="hdf5" type="table" uuid="{305bd967-30b9-43f5-812c-59086dd840f2}" x="2100.0" y="2000.0">
          <label>Port</label>
        </output>
      </ports>
      <basic_ports>
        <output key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt;" uuid="{30b042c0-e424-4849-a52d-05922bdd2810}">
          <label>Lambda function</label>
        </output>
      </basic_ports>
      <node id="org.sysess.sympathy.data.table.assertequaltable" port_format="1.1" uuid="{3be20d91-087a-4bf1-b03b-8f065ce0ef3f}" x="2000.0" y="2000.0">
        <label>Assert Equal Table</label>
        <version>1.0</version>
        <description></description>
        <author>Magnus Sand&#233;n</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">
        {
          "abs_tol": {
            "editor": null,
            "label": "Absolute tolerance",
            "order": 6,
            "type": "float",
            "value": 1e-08
          },
          "col_attrs": {
            "editor": null,
            "label": "Compare column attributes",
            "order": 1,
            "type": "boolean",
            "value": true
          },
          "col_order": {
            "editor": null,
            "label": "Compare column order",
            "order": 0,
            "type": "boolean",
            "value": true
          },
          "inexact_float": {
            "editor": null,
            "label": "Approximate comparison of floats",
            "order": 4,
            "type": "boolean",
            "value": false
          },
          "rel_tol": {
            "editor": null,
            "label": "Relative tolerance",
            "order": 5,
            "type": "float",
            "value": 1e-05
          },
          "tbl_attrs": {
            "editor": null,
            "label": "Compare table attributes",
            "order": 3,
            "type": "boolean",
            "value": true
          },
          "tbl_names": {
            "editor": null,
            "label": "Compare table names",
            "order": 2,
            "type": "boolean",
            "value": true
          },
          "type": "group"
        }
        </parameters>
        <ports>
          <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{d57666e6-369b-49b1-abf7-5251889bc3b5}">
            <label>Table A</label>
          </input>
          <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{aa37912d-b4ac-4c74-ad95-d81ff7ba1a1a}">
            <label>Table B</label>
          </input>
          <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{f9853578-cf9e-4133-9e55-4b1792ba3a0e}">
            <label>Output Table</label>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.tuple.untuple2" port_format="1.1" uuid="{bb7995d6-bd29-48a5-97ea-289d16501b97}" x="1875.0" y="2000.0">
        <label>Untuple</label>
        <version>1.0</version>
        <description></description>
        <author>Erik der Hagopian</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">{"type": "group"}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="(table, table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{747867e9-51e3-468e-92c4-3b8ddd7fc85a}">
            <label>Input</label>
          </input>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{0931b21a-b217-4a2e-86b2-af3f72c0a959}">
            <label>Output</label>
          </output>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{434b3218-e73d-4042-b205-04bb9ed594b2}">
            <label>Output</label>
          </output>
        </ports>
      </node>
      <connection type="table" uuid="{02e20484-2296-4ca0-807e-79760c34793f}">
        <source node="{3be20d91-087a-4bf1-b03b-8f065ce0ef3f}" port="{f9853578-cf9e-4133-9e55-4b1792ba3a0e}"/>
        <destination node="{fd443202-cd05-4184-9430-56959223563e}" port="{305bd967-30b9-43f5-812c-59086dd840f2}"/>
      </connection>
      <connection type="table" uuid="{52ac878b-3d34-4ef2-85a5-f922e25825f5}">
        <source node="{bb7995d6-bd29-48a5-97ea-289d16501b97}" port="{434b3218-e73d-4042-b205-04bb9ed594b2}"/>
        <destination node="{3be20d91-087a-4bf1-b03b-8f065ce0ef3f}" port="{aa37912d-b4ac-4c74-ad95-d81ff7ba1a1a}"/>
      </connection>
      <connection type="(table, table)" uuid="{564c2a4b-6ab0-4353-aa5a-9da22f9f8dac}">
        <source node="{fd443202-cd05-4184-9430-56959223563e}" port="{7578d05f-250c-40be-b116-a924ffd62970}"/>
        <destination node="{bb7995d6-bd29-48a5-97ea-289d16501b97}" port="{747867e9-51e3-468e-92c4-3b8ddd7fc85a}"/>
      </connection>
      <connection type="table" uuid="{73f51444-42df-41b4-962b-290d4974dc4b}">
        <source node="{bb7995d6-bd29-48a5-97ea-289d16501b97}" port="{0931b21a-b217-4a2e-86b2-af3f72c0a959}"/>
        <destination node="{3be20d91-087a-4bf1-b03b-8f065ce0ef3f}" port="{d57666e6-369b-49b1-abf7-5251889bc3b5}"/>
      </connection>
    </flow>
    <node id="org.sysess.sympathy.list.padlistitem" port_format="1.1" uuid="{4749c9ca-11f9-4162-a5f6-120e1b5dda32}" x="2050.0" y="2000.0">
      <label>Pad List with Item</label>
      <version>1.0</version>
      <description>Pad a list with item match the length of template</description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="template" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{ad0dd057-b1ea-407b-9174-0144086ec468}">
          <label>List with deciding length</label>
        </input>
        <input key="item" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{355bc864-2cb8-4dc6-855c-0faf6d50dc4e}">
          <label>Item to be used as padding</label>
        </input>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{fa6ee8ab-3505-4f08-808e-cf575c72d9fa}">
          <label>List that will be padded</label>
        </input>
        <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{54255e48-8550-476d-81a5-89f425da7afd}">
          <label>The padded List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{5bf0ad79-6abd-4999-984e-c0d8d29c5604}" x="2150.0" y="1950.0">
      <label>Zip Tuple</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{4ccd0e10-de3c-4d76-b5c6-36270dd3c683}">
          <label>Input</label>
        </input>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{d7c09650-31ad-4583-81cd-2b08f8062743}">
          <label>Input</label>
        </input>
        <output key="output" scheme="hdf5" type="[(table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{a62d782e-443e-4d76-ae34-a472e1b0cb54}">
          <label>Output</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.getitemlist" port_format="1.1" uuid="{85251c81-e1f6-4c4e-b81c-e73e8ddd00e1}" x="2400.0" y="1950.0">
      <label>Get Item List</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "index": {
          "editor": {
            "display": null,
            "edit": true,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Index",
          "list": ["0"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["0"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{cac212e7-0c66-46ca-b341-e1cf70487b99}">
          <label>Input List</label>
        </input>
        <output key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{9018851a-a481-4d52-846e-866c2171eb26}">
          <label>Output selected Item from List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.builtin.map" port_format="1.1" uuid="{8d74c105-5c5e-4dd7-96bb-4b8bc3d56d11}" x="2275.0" y="1950.0">
      <label>Map</label>
      <version>1.0</version>
      <description>Map Lambda function over each element in argument list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "fail_strategy": {
          "editor": {
            "display": null,
            "edit": false,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Action on exception",
          "list": ["Error", "Create Empty Item", "Skip Item"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["Error"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{5a364ac8-769e-44c8-a569-ede0a38c2bce}">
          <label>Lambda Function to Map</label>
        </input>
        <input key="List" scheme="hdf5" type="[(table, table)]" type_base="[&lt;a&gt;]" uuid="{fc263c00-242b-4983-8913-73bda5e542ef}">
          <label>Argument List</label>
        </input>
        <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{857989c6-47b3-49ee-bd01-27eb33a06594}">
          <label>Output List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.getitemlist" port_format="1.1" uuid="{bcc92afa-fe0e-4061-8579-9d87ed1dada2}" x="1925.0" y="1950.0">
      <label>Get Item List</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "index": {
          "editor": {
            "display": null,
            "edit": true,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Index",
          "list": ["0", "1", "2", "3", "4", "5", "6", "7"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["0"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{df6e1167-5256-4e7f-b84e-54d9cf481d2f}">
          <label>Input List</label>
        </input>
        <output key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{cedae0ef-e20b-4338-96ed-14e84ac7aaa2}">
          <label>Output selected Item from List</label>
        </output>
        <output key="rest" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{64666110-8115-492e-aeaa-d4b42a6e8f00}">
          <label>Output non-selected Items from List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.builtin.empty" port_format="1.1" uuid="{f9c87024-8d17-4037-a83a-c8efc22ba232}" x="1925.0" y="2050.0">
      <label>Empty</label>
      <version>1.1</version>
      <description>Generate empty data of inferred or specified type</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
      <copyright>(C) 2016 Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "datatype": {
          "editor": null,
          "label": "Datatype",
          "order": 0,
          "type": "string",
          "value": "&lt;a&gt;"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{efa1b04d-0d78-42c2-88f4-2ec84353cf51}">
          <label>Output port containing empty data (must be connected or specified)</label>
        </output>
      </ports>
    </node>
    <connection type="[table]" uuid="{17f47de7-8a1e-4010-a68a-f195d8fd67c4}">
      <source node="{8d74c105-5c5e-4dd7-96bb-4b8bc3d56d11}" port="{857989c6-47b3-49ee-bd01-27eb33a06594}"/>
      <destination node="{85251c81-e1f6-4c4e-b81c-e73e8ddd00e1}" port="{cac212e7-0c66-46ca-b341-e1cf70487b99}"/>
    </connection>
    <connection type="[table]" uuid="{1b3195a4-c163-425d-80cb-d6faff37602e}">
      <source node="{bcc92afa-fe0e-4061-8579-9d87ed1dada2}" port="{64666110-8115-492e-aeaa-d4b42a6e8f00}"/>
      <destination node="{4749c9ca-11f9-4162-a5f6-120e1b5dda32}" port="{ad0dd057-b1ea-407b-9174-0144086ec468}"/>
    </connection>
    <connection type="[table]" uuid="{38f62f94-d80c-48c0-800b-bf8f42399c8d}">
      <source node="{bcc92afa-fe0e-4061-8579-9d87ed1dada2}" port="{64666110-8115-492e-aeaa-d4b42a6e8f00}"/>
      <destination node="{5bf0ad79-6abd-4999-984e-c0d8d29c5604}" port="{4ccd0e10-de3c-4d76-b5c6-36270dd3c683}"/>
    </connection>
    <connection type="[(table, table)]" uuid="{5ae86140-85b6-49f7-82a9-23039c76753c}">
      <source node="{5bf0ad79-6abd-4999-984e-c0d8d29c5604}" port="{a62d782e-443e-4d76-ae34-a472e1b0cb54}"/>
      <destination node="{8d74c105-5c5e-4dd7-96bb-4b8bc3d56d11}" port="{fc263c00-242b-4983-8913-73bda5e542ef}"/>
    </connection>
    <connection type="[table]" uuid="{6c81369f-6eee-46a3-b5c5-65dff4a104fc}">
      <source node="{f9c87024-8d17-4037-a83a-c8efc22ba232}" port="{efa1b04d-0d78-42c2-88f4-2ec84353cf51}"/>
      <destination node="{4749c9ca-11f9-4162-a5f6-120e1b5dda32}" port="{fa6ee8ab-3505-4f08-808e-cf575c72d9fa}"/>
    </connection>
    <connection type="table" uuid="{93543eab-8bf4-47bb-95ea-6a72ebfa40b8}">
      <source node="{85251c81-e1f6-4c4e-b81c-e73e8ddd00e1}" port="{9018851a-a481-4d52-846e-866c2171eb26}"/>
      <destination node="{50b9d251-5ef6-45e6-989e-732b1e131183}" port="{2c5ec85a-9147-4f8c-9140-53ba5be3ce74}"/>
    </connection>
    <connection type="table" uuid="{a9fd3020-540e-48ac-b64b-99ec41ce5b2f}">
      <source node="{bcc92afa-fe0e-4061-8579-9d87ed1dada2}" port="{cedae0ef-e20b-4338-96ed-14e84ac7aaa2}"/>
      <destination node="{4749c9ca-11f9-4162-a5f6-120e1b5dda32}" port="{355bc864-2cb8-4dc6-855c-0faf6d50dc4e}"/>
    </connection>
    <connection type="(table, table) -&gt; table" uuid="{ab12551b-c2a2-46c7-bbd7-15b2f07c1847}">
      <source node="{fd443202-cd05-4184-9430-56959223563e}" port="{30b042c0-e424-4849-a52d-05922bdd2810}"/>
      <destination node="{8d74c105-5c5e-4dd7-96bb-4b8bc3d56d11}" port="{5a364ac8-769e-44c8-a569-ede0a38c2bce}"/>
    </connection>
    <connection type="[table]" uuid="{e6696ab9-c84c-4322-b72c-0ea36bdac6de}">
      <source node="{4749c9ca-11f9-4162-a5f6-120e1b5dda32}" port="{54255e48-8550-476d-81a5-89f425da7afd}"/>
      <destination node="{5bf0ad79-6abd-4999-984e-c0d8d29c5604}" port="{d7c09650-31ad-4583-81cd-2b08f8062743}"/>
    </connection>
    <connection type="[table]" uuid="{fca23e96-6ab4-44b9-a20c-05827efd81f2}">
      <source node="{50b9d251-5ef6-45e6-989e-732b1e131183}" port="{0ef1596d-2748-4263-b881-49672cec40f7}"/>
      <destination node="{bcc92afa-fe0e-4061-8579-9d87ed1dada2}" port="{df6e1167-5256-4e7f-b84e-54d9cf481d2f}"/>
    </connection>
  </flow>
  <flow cls="Flow" uuid="{56ac743c-4391-44ed-b233-8cd4df79e1b6}" x="1975.0" y="2600.0">
    <label>Select rows for each selection table</label>
    <ports>
      <input index="0" key="Selection tables" parent="True" scheme="hdf5" type="[table]" uuid="{f522726e-1b62-4735-8a55-1d67024dfe7d}" x="1650.0" y="2250.0">
        <label>Selection tables</label>
      </input>
      <input index="1" key="Input data" parent="True" scheme="hdf5" type="table" uuid="{db42fa9d-fbe8-47ee-aa76-22eb28d3db8e}" x="1650.0" y="2350.0">
        <label>Input data</label>
      </input>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{3cbf5977-5024-41e8-a016-244a792f3885}" x="2225.0" y="2250.0">
        <label>Port</label>
      </output>
    </ports>
    <flow cls="Lambda" uuid="{5e1f22f3-2817-478c-908d-e7e7e5fe5c34}" x="1975.0" y="2150.0">
      <label>Select rows in Table with Table</label>
      <ports>
        <input index="0" key="Port" parent="False" scheme="hdf5" type="(table, table)" uuid="{5012e176-bc1b-4ea7-a33f-1e1119311efa}" x="1800.0" y="2000.0">
          <label>Port</label>
        </input>
        <output index="0" key="Port" parent="False" scheme="hdf5" type="table" uuid="{70ac656f-70bf-46ca-a80c-9daca7f271e4}" x="2150.0" y="2000.0">
          <label>Port</label>
        </output>
      </ports>
      <basic_ports>
        <output key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt;" uuid="{75ff0266-9f28-4808-9cb5-2a4536731119}">
          <label>Lambda function</label>
        </output>
      </basic_ports>
      <node id="org.sysess.sympathy.data.table.selecttablerowsfromtable" port_format="1.1" uuid="{2a688ad6-422e-4353-9c96-7c9e05476627}" x="2050.0" y="2000.0">
        <label>Select rows in Table with Table</label>
        <version>1.0</version>
        <description>Select rows in Table by using an additional selection Table with predefined comparison relations.</description>
        <author>Greger Cronquist</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">
        {
          "column": {
            "editor": {
              "display": null,
              "edit": true,
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Column with column names",
            "list": ["column", "operator", "value"],
            "mode": "selected",
            "order": 0,
            "passthrough": false,
            "type": "list",
            "value": [0],
            "value_names": ["column"]
          },
          "constraint": {
            "editor": {
              "display": null,
              "edit": true,
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Column with constraint values",
            "list": ["column", "operator", "value"],
            "mode": "selected",
            "order": 2,
            "passthrough": false,
            "type": "list",
            "value": [2],
            "value_names": ["value"]
          },
          "eval": {
            "editor": {
              "display": null,
              "edit": false,
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Evaluate values as code",
            "order": 4,
            "type": "boolean",
            "value": false
          },
          "reduction": {
            "editor": {
              "display": null,
              "edit": false,
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Reduction:",
            "list": ["all", "any"],
            "mode": "selected",
            "order": 3,
            "passthrough": false,
            "type": "list",
            "value": [0],
            "value_names": ["all"]
          },
          "relation": {
            "editor": {
              "display": null,
              "edit": true,
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Column with comparison operators",
            "list": ["column", "operator", "value"],
            "mode": "selected",
            "order": 1,
            "passthrough": false,
            "type": "list",
            "value": [1],
            "value_names": ["operator"]
          },
          "type": "group"
        }
        </parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{f6e41ac4-eac2-435a-9e2e-9c2976080170}">
            <label>Table with three columns that defines a set of comparison relations. Each row in the set will set up a comparison relation with a column name, a comparison operator and a constraint value.</label>
          </input>
          <input key="port2" scheme="hdf5" type="table" type_base="table" uuid="{2ca561ff-706e-4516-bb4a-22ea96873e81}">
            <label>Input Table</label>
          </input>
          <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{1a940acf-40cc-4287-938f-7c47988c606c}">
            <label>Table with rows in Selection</label>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.tuple.untuple2" port_format="1.1" uuid="{4bfeb258-660e-4a84-9989-1e45f50090dd}" x="1925.0" y="2000.0">
        <label>Untuple</label>
        <version>1.0</version>
        <description></description>
        <author>Erik der Hagopian</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">{"type": "group"}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="(table, table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{5e9324dc-d953-4776-b7a2-0c2606ad438a}">
            <label>Input</label>
          </input>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{23c292b1-7cc7-4484-975b-08b2cb895de5}">
            <label>Output</label>
          </output>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{52fa5639-97d9-4d9a-8a11-5616bc6bd021}">
            <label>Output</label>
          </output>
        </ports>
      </node>
      <connection type="table" uuid="{35f55ef2-1d28-444a-b937-159fce9d5695}">
        <source node="{2a688ad6-422e-4353-9c96-7c9e05476627}" port="{1a940acf-40cc-4287-938f-7c47988c606c}"/>
        <destination node="{5e1f22f3-2817-478c-908d-e7e7e5fe5c34}" port="{70ac656f-70bf-46ca-a80c-9daca7f271e4}"/>
      </connection>
      <connection type="table" uuid="{5a30fd4c-035e-4660-955f-60cd158f811c}">
        <source node="{4bfeb258-660e-4a84-9989-1e45f50090dd}" port="{23c292b1-7cc7-4484-975b-08b2cb895de5}"/>
        <destination node="{2a688ad6-422e-4353-9c96-7c9e05476627}" port="{f6e41ac4-eac2-435a-9e2e-9c2976080170}"/>
      </connection>
      <connection type="(table, table)" uuid="{6321e3e0-78b0-4ae4-80d3-c3d628744483}">
        <source node="{5e1f22f3-2817-478c-908d-e7e7e5fe5c34}" port="{5012e176-bc1b-4ea7-a33f-1e1119311efa}"/>
        <destination node="{4bfeb258-660e-4a84-9989-1e45f50090dd}" port="{5e9324dc-d953-4776-b7a2-0c2606ad438a}"/>
      </connection>
      <connection type="table" uuid="{940b7bcc-7738-4390-a85e-faccdd39102e}">
        <source node="{4bfeb258-660e-4a84-9989-1e45f50090dd}" port="{52fa5639-97d9-4d9a-8a11-5616bc6bd021}"/>
        <destination node="{2a688ad6-422e-4353-9c96-7c9e05476627}" port="{2ca561ff-706e-4516-bb4a-22ea96873e81}"/>
      </connection>
    </flow>
    <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{22ec5736-b5ba-403e-80bc-ccba2da71518}" x="1975.0" y="2250.0">
      <label>Zip Tuple</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{ae81e3d3-34b9-454f-a93a-489802cf1b9f}">
          <label>Input</label>
        </input>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{de3771d5-b973-4920-b702-2d4deea50643}">
          <label>Input</label>
        </input>
        <output key="output" scheme="hdf5" type="[(table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{eec5117d-462b-4379-be19-2f5b7c114709}">
          <label>Output</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.builtin.empty" port_format="1.1" uuid="{982615ba-03c5-4001-a2d5-6aaa87eefc38}" x="1650.0" y="2450.0">
      <label>Empty</label>
      <version>1.1</version>
      <description>Generate empty data of inferred or specified type</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
      <copyright>(C) 2016 Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "datatype": {
          "editor": null,
          "label": "Datatype",
          "order": 0,
          "type": "string",
          "value": "&lt;a&gt;"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{2c86425a-c72b-4d20-9a6b-dc59be09880a}">
          <label>Output port containing empty data (must be connected or specified)</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.padlistitem" port_format="1.1" uuid="{acc50411-a2a0-474c-b563-a9b785f8dca8}" x="1850.0" y="2300.0">
      <label>Pad List with Item</label>
      <version>1.0</version>
      <description>Pad a list with item match the length of template</description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="template" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{15eadcba-815a-4c6e-a898-dea457590af5}">
          <label>List with deciding length</label>
        </input>
        <input key="item" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{4e170d20-a4bc-48ba-9dbf-e73077e2b4ce}">
          <label>Item to be used as padding</label>
        </input>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{084535c6-cddf-4b64-a328-cae823924efd}">
          <label>List that will be padded</label>
        </input>
        <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{c8cf6ef9-2572-4ba7-b5d9-4f9cd498aedf}">
          <label>The padded List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.builtin.map" port_format="1.1" uuid="{e7043c62-67f8-4d79-8dfd-e396406b198f}" x="2125.0" y="2250.0">
      <label>Map</label>
      <version>1.0</version>
      <description>Map Lambda function over each element in argument list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "fail_strategy": {
          "editor": {
            "display": null,
            "edit": false,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Action on exception",
          "list": ["Error", "Create Empty Item", "Skip Item"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["Error"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{c8f638f6-d4d2-4ca8-8400-b1896dd65fe9}">
          <label>Lambda Function to Map</label>
        </input>
        <input key="List" scheme="hdf5" type="[(table, table)]" type_base="[&lt;a&gt;]" uuid="{d5204fd5-1d37-466a-9d1c-3dd92949952d}">
          <label>Argument List</label>
        </input>
        <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{df4744c9-6012-43e4-8bd7-e386645443d5}">
          <label>Output List</label>
        </output>
      </ports>
    </node>
    <connection type="[table]" uuid="{056b9fd6-80b5-4641-87bb-bada314757c6}">
      <source node="{56ac743c-4391-44ed-b233-8cd4df79e1b6}" port="{f522726e-1b62-4735-8a55-1d67024dfe7d}"/>
      <destination node="{22ec5736-b5ba-403e-80bc-ccba2da71518}" port="{ae81e3d3-34b9-454f-a93a-489802cf1b9f}"/>
    </connection>
    <connection type="[table]" uuid="{32c7485e-058b-4e91-b701-bb3d55629855}">
      <source node="{56ac743c-4391-44ed-b233-8cd4df79e1b6}" port="{f522726e-1b62-4735-8a55-1d67024dfe7d}"/>
      <destination node="{acc50411-a2a0-474c-b563-a9b785f8dca8}" port="{15eadcba-815a-4c6e-a898-dea457590af5}"/>
    </connection>
    <connection type="(table, table) -&gt; table" uuid="{6387b047-bb9f-400d-8d0f-f4d4e201a2fa}">
      <source node="{5e1f22f3-2817-478c-908d-e7e7e5fe5c34}" port="{75ff0266-9f28-4808-9cb5-2a4536731119}"/>
      <destination node="{e7043c62-67f8-4d79-8dfd-e396406b198f}" port="{c8f638f6-d4d2-4ca8-8400-b1896dd65fe9}"/>
    </connection>
    <connection type="[table]" uuid="{86c40dcc-e25c-491e-a454-762f12b22c53}">
      <source node="{acc50411-a2a0-474c-b563-a9b785f8dca8}" port="{c8cf6ef9-2572-4ba7-b5d9-4f9cd498aedf}"/>
      <destination node="{22ec5736-b5ba-403e-80bc-ccba2da71518}" port="{de3771d5-b973-4920-b702-2d4deea50643}"/>
    </connection>
    <connection type="[table]" uuid="{8a148b9c-4f87-42a5-ab19-09051cbe66c8}">
      <source node="{982615ba-03c5-4001-a2d5-6aaa87eefc38}" port="{2c86425a-c72b-4d20-9a6b-dc59be09880a}"/>
      <destination node="{acc50411-a2a0-474c-b563-a9b785f8dca8}" port="{084535c6-cddf-4b64-a328-cae823924efd}"/>
    </connection>
    <connection type="[(table, table)]" uuid="{b2511af9-983d-4fd4-9b74-8c5d394bb1eb}">
      <source node="{22ec5736-b5ba-403e-80bc-ccba2da71518}" port="{eec5117d-462b-4379-be19-2f5b7c114709}"/>
      <destination node="{e7043c62-67f8-4d79-8dfd-e396406b198f}" port="{d5204fd5-1d37-466a-9d1c-3dd92949952d}"/>
    </connection>
    <connection type="[table]" uuid="{bb8afdd9-d6f9-43d8-b9a1-2eb6b07469d7}">
      <source node="{e7043c62-67f8-4d79-8dfd-e396406b198f}" port="{df4744c9-6012-43e4-8bd7-e386645443d5}"/>
      <destination node="{56ac743c-4391-44ed-b233-8cd4df79e1b6}" port="{3cbf5977-5024-41e8-a016-244a792f3885}"/>
    </connection>
    <connection type="table" uuid="{e87ff54b-3cac-4e3f-8e33-4dd86d659e39}">
      <source node="{56ac743c-4391-44ed-b233-8cd4df79e1b6}" port="{db42fa9d-fbe8-47ee-aa76-22eb28d3db8e}"/>
      <destination node="{acc50411-a2a0-474c-b563-a9b785f8dca8}" port="{4e170d20-a4bc-48ba-9dbf-e73077e2b4ce}"/>
    </connection>
  </flow>
  <flow cls="Flow" uuid="{8954650b-3770-445f-b258-60240376d998}" x="1825.0" y="2375.0">
    <label>Input data</label>
    <ports>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="table" uuid="{f20e12bc-eb95-49dc-902d-70f87ec8d4d1}" x="1925.0" y="2375.0">
        <label>Port</label>
      </output>
    </ports>
    <node id="org.sysess.sympathy.data.table.calculatorgeneric" port_format="1.1" uuid="{3714a433-5a09-4dee-816f-069eae756ac4}" x="1800.0" y="2375.0">
      <label>Calculator</label>
      <version>3.0</version>
      <description>Performs user-defined python calculations</description>
      <author>Greger Cronquist, Magnus Sand&#233;n, Sara Gustafzelius &amp; Benedikt Ziegler</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "calc_list": {
          "editor": null,
          "label": "List of calculations",
          "list": ["timedelta = arg['datetime'] - np.datetime64('2018-03-20T00:00:00') #ENABLED:1", "binary = [s.encode('ascii') for s in arg['text']] #ENABLED:1", "complex = arg['float'] + 1j #ENABLED:1"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [],
          "value_names": []
        },
        "copy_input": {
          "editor": null,
          "label": "Copy input",
          "order": 1,
          "type": "boolean",
          "value": true
        },
        "fail_strategy": {
          "editor": {
            "display": null,
            "edit": false,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Action on calculation failure",
          "list": ["Exception", "Skip calculation"],
          "mode": "selected",
          "order": 2,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["Exception"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="port0" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{da146749-8369-453e-90e0-90155958afc1}">
          <label>Generic Input</label>
        </input>
        <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{16130348-d7a2-4664-a26c-40e469069f29}">
          <label>Table with results from the calculations.</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{3a072f20-eb06-45b6-a635-515753b9f22c}" x="1650.0" y="2375.0">
      <label>Manually Create Table</label>
      <version>1.0</version>
      <description></description>
      <author>Magnus Sand&#233;n</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "json_table": {
          "editor": null,
          "label": "GUI",
          "order": 0,
          "type": "string",
          "value": "[[\"text\", \"U\", [\"A\", \"B\", \"C\"]], [\"float\", \"f\", [0.1, 0.2, 0.3]], [\"int\", \"i\", [1, 2, 3]], [\"bool\", \"b\", [false, true, false]], [\"datetime\", \"M\", [\"2018-03-22T00:00:00\", \"2018-03-21T00:00:00\", \"2018-03-23T00:00:00\"]]]"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{a97fdbc8-9ed8-49c9-b21b-28dede0ae413}">
          <label>Manually created table</label>
        </output>
      </ports>
    </node>
    <connection type="table" uuid="{ac2bc3c0-cfca-498c-83a8-4469662e0604}">
      <source node="{3a072f20-eb06-45b6-a635-515753b9f22c}" port="{a97fdbc8-9ed8-49c9-b21b-28dede0ae413}"/>
      <destination node="{3714a433-5a09-4dee-816f-069eae756ac4}" port="{da146749-8369-453e-90e0-90155958afc1}"/>
    </connection>
    <connection type="table" uuid="{cac6c787-3c5e-48d9-a53f-b13e49900d70}">
      <source node="{3714a433-5a09-4dee-816f-069eae756ac4}" port="{16130348-d7a2-4664-a26c-40e469069f29}"/>
      <destination node="{8954650b-3770-445f-b258-60240376d998}" port="{f20e12bc-eb95-49dc-902d-70f87ec8d4d1}"/>
    </connection>
  </flow>
  <flow cls="Flow" uuid="{8bc7b41e-81e3-4d8b-bd07-cbdb5a055026}" x="1825.0" y="2925.0">
    <label>Input data</label>
    <ports>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="table" uuid="{2f0cbd0a-a8a3-4940-9861-c912f7dfb963}" x="1925.0" y="2375.0">
        <label>Port</label>
      </output>
    </ports>
    <node id="org.sysess.sympathy.data.table.calculatorgeneric" port_format="1.1" uuid="{0f1bf074-647d-43f0-8518-e83b018a9268}" x="1800.0" y="2375.0">
      <label>Calculator</label>
      <version>3.0</version>
      <description>Performs user-defined python calculations</description>
      <author>Greger Cronquist, Magnus Sand&#233;n, Sara Gustafzelius &amp; Benedikt Ziegler</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "calc_list": {
          "editor": null,
          "label": "List of calculations",
          "list": ["timedelta = arg['datetime'] - np.datetime64('2018-03-20T00:00:00') #ENABLED:1", "binary = [s.encode('ascii') for s in arg['text']] #ENABLED:1", "complex = arg['float'] + 1j #ENABLED:1"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [],
          "value_names": []
        },
        "copy_input": {
          "editor": null,
          "label": "Copy input",
          "order": 1,
          "type": "boolean",
          "value": true
        },
        "fail_strategy": {
          "editor": {
            "display": null,
            "edit": false,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Action on calculation failure",
          "list": ["Exception", "Skip calculation"],
          "mode": "selected",
          "order": 2,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["Exception"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="port0" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{1b98c41c-1e16-44f0-a436-6b92d107cbaf}">
          <label>Generic Input</label>
        </input>
        <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{5ebc050f-762f-4ec5-adc5-0d06d430c159}">
          <label>Table with results from the calculations.</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{7ff5542d-13a6-44b1-84a3-74de1cb3a6fb}" x="1650.0" y="2375.0">
      <label>Manually Create Table</label>
      <version>1.0</version>
      <description></description>
      <author>Magnus Sand&#233;n</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "json_table": {
          "editor": null,
          "label": "GUI",
          "order": 0,
          "type": "string",
          "value": "[[\"text\", \"U\", [\"A\", \"B\", \"C\"]], [\"float\", \"f\", [0.1, 0.2, 0.3]], [\"int\", \"i\", [1, 2, 3]], [\"bool\", \"b\", [false, true, false]], [\"datetime\", \"M\", [\"2018-03-22T00:00:00\", \"2018-03-21T00:00:00\", \"2018-03-23T00:00:00\"]]]"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{d3e0ee70-8e24-47f5-bf54-70b4e3a76ea2}">
          <label>Manually created table</label>
        </output>
      </ports>
    </node>
    <connection type="table" uuid="{42a26c13-1632-408b-8635-65a9628620b6}">
      <source node="{0f1bf074-647d-43f0-8518-e83b018a9268}" port="{5ebc050f-762f-4ec5-adc5-0d06d430c159}"/>
      <destination node="{8bc7b41e-81e3-4d8b-bd07-cbdb5a055026}" port="{2f0cbd0a-a8a3-4940-9861-c912f7dfb963}"/>
    </connection>
    <connection type="table" uuid="{910a8dc9-ff54-417d-969f-93b1719445b7}">
      <source node="{7ff5542d-13a6-44b1-84a3-74de1cb3a6fb}" port="{d3e0ee70-8e24-47f5-bf54-70b4e3a76ea2}"/>
      <destination node="{0f1bf074-647d-43f0-8518-e83b018a9268}" port="{1b98c41c-1e16-44f0-a436-6b92d107cbaf}"/>
    </connection>
  </flow>
  <flow cls="Flow" uuid="{8db57f3f-6b17-4a9d-ae7f-8d7703f29d17}" x="2125.0" y="2600.0">
    <label>Assert that all selections selected the same row</label>
    <ports>
      <input index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{e01901e8-7d90-45e0-95b4-d5dc79aab7a9}" x="1800.0" y="1950.0">
        <label>Port</label>
      </input>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="table" uuid="{09add8d1-cb6b-46a7-b893-238d9cecd6c1}" x="2475.0" y="1950.0">
        <label>Port</label>
      </output>
    </ports>
    <flow cls="Lambda" uuid="{82565ff6-0e4d-4080-bbe7-f87e9394923e}" x="2150.0" y="1856.0">
      <label>Assert Equal Table</label>
      <ports>
        <input index="0" key="Port" parent="False" scheme="hdf5" type="(table, table)" uuid="{b71956d7-7b95-4b34-adfe-d33d07d51212}" x="1725.0" y="2000.0">
          <label>Port</label>
        </input>
        <output index="0" key="Port" parent="False" scheme="hdf5" type="table" uuid="{8d4ec095-c0c2-4d38-be5c-745b918efbe1}" x="2100.0" y="2000.0">
          <label>Port</label>
        </output>
      </ports>
      <basic_ports>
        <output key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt;" uuid="{1857578c-3a6c-4688-9785-b4d191692aa3}">
          <label>Lambda function</label>
        </output>
      </basic_ports>
      <node id="org.sysess.sympathy.tuple.untuple2" port_format="1.1" uuid="{664f8d2c-1fcf-49b8-8270-80df9728c555}" x="1875.0" y="2000.0">
        <label>Untuple</label>
        <version>1.0</version>
        <description></description>
        <author>Erik der Hagopian</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">{"type": "group"}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="(table, table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{3671feb2-85c9-408f-b637-6d1056a77f66}">
            <label>Input</label>
          </input>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{d2ae17af-8eaa-428f-a6cf-2300e2a0e460}">
            <label>Output</label>
          </output>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{cb675041-2fa4-4f3d-8f65-6ba81f184642}">
            <label>Output</label>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.data.table.assertequaltable" port_format="1.1" uuid="{bf9bc658-d0ca-4090-bba1-c5df46d0cd4d}" x="2000.0" y="2000.0">
        <label>Assert Equal Table</label>
        <version>1.0</version>
        <description></description>
        <author>Magnus Sand&#233;n</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">
        {
          "abs_tol": {
            "editor": null,
            "label": "Absolute tolerance",
            "order": 6,
            "type": "float",
            "value": 1e-08
          },
          "col_attrs": {
            "editor": null,
            "label": "Compare column attributes",
            "order": 1,
            "type": "boolean",
            "value": true
          },
          "col_order": {
            "editor": null,
            "label": "Compare column order",
            "order": 0,
            "type": "boolean",
            "value": true
          },
          "inexact_float": {
            "editor": null,
            "label": "Approximate comparison of floats",
            "order": 4,
            "type": "boolean",
            "value": false
          },
          "rel_tol": {
            "editor": null,
            "label": "Relative tolerance",
            "order": 5,
            "type": "float",
            "value": 1e-05
          },
          "tbl_attrs": {
            "editor": null,
            "label": "Compare table attributes",
            "order": 3,
            "type": "boolean",
            "value": true
          },
          "tbl_names": {
            "editor": null,
            "label": "Compare table names",
            "order": 2,
            "type": "boolean",
            "value": true
          },
          "type": "group"
        }
        </parameters>
        <ports>
          <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{1cf72c4e-c88a-4a2a-8539-97a6edae417a}">
            <label>Table A</label>
          </input>
          <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{921a7889-a4d3-4dae-8aac-a345dad54f6a}">
            <label>Table B</label>
          </input>
          <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{d283dbea-48ce-46dd-936f-c261a5d1f2be}">
            <label>Output Table</label>
          </output>
        </ports>
      </node>
      <connection type="table" uuid="{29f4d260-efcf-4283-8b4f-65085acbfeb5}">
        <source node="{664f8d2c-1fcf-49b8-8270-80df9728c555}" port="{d2ae17af-8eaa-428f-a6cf-2300e2a0e460}"/>
        <destination node="{bf9bc658-d0ca-4090-bba1-c5df46d0cd4d}" port="{1cf72c4e-c88a-4a2a-8539-97a6edae417a}"/>
      </connection>
      <connection type="table" uuid="{2a95dd59-9aca-4c4f-bfe8-a8df0889c269}">
        <source node="{664f8d2c-1fcf-49b8-8270-80df9728c555}" port="{cb675041-2fa4-4f3d-8f65-6ba81f184642}"/>
        <destination node="{bf9bc658-d0ca-4090-bba1-c5df46d0cd4d}" port="{921a7889-a4d3-4dae-8aac-a345dad54f6a}"/>
      </connection>
      <connection type="table" uuid="{2bb6c2aa-91a3-465d-9824-cae3b26c4543}">
        <source node="{bf9bc658-d0ca-4090-bba1-c5df46d0cd4d}" port="{d283dbea-48ce-46dd-936f-c261a5d1f2be}"/>
        <destination node="{82565ff6-0e4d-4080-bbe7-f87e9394923e}" port="{8d4ec095-c0c2-4d38-be5c-745b918efbe1}"/>
      </connection>
      <connection type="(table, table)" uuid="{f5543d50-9dfb-4dd0-9945-74a55fed710a}">
        <source node="{82565ff6-0e4d-4080-bbe7-f87e9394923e}" port="{b71956d7-7b95-4b34-adfe-d33d07d51212}"/>
        <destination node="{664f8d2c-1fcf-49b8-8270-80df9728c555}" port="{3671feb2-85c9-408f-b637-6d1056a77f66}"/>
      </connection>
    </flow>
    <node id="org.sysess.sympathy.list.padlistitem" port_format="1.1" uuid="{25df34cd-013e-460d-a4bc-0f811f46e923}" x="2050.0" y="2000.0">
      <label>Pad List with Item</label>
      <version>1.0</version>
      <description>Pad a list with item match the length of template</description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="template" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{e67196a8-6fb2-4bf0-a3a9-557f08f12bda}">
          <label>List with deciding length</label>
        </input>
        <input key="item" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{9505894d-42d3-4603-8d20-eb848f0e7d4e}">
          <label>Item to be used as padding</label>
        </input>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{ad21c30c-9e67-448e-b9d0-368547403817}">
          <label>List that will be padded</label>
        </input>
        <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{dadb8ad4-e040-41b9-8266-8462c3f90dbb}">
          <label>The padded List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.getitemlist" port_format="1.1" uuid="{38c5dd32-9352-4fa7-bf6e-603ae19ef404}" x="2375.0" y="1950.0">
      <label>Get Item List</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "index": {
          "editor": {
            "display": null,
            "edit": true,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Index",
          "list": ["0"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["0"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{0c069d6a-d96f-4996-909c-d555ae637179}">
          <label>Input List</label>
        </input>
        <output key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{1d3bb3db-1918-4616-95a4-ea755da520f4}">
          <label>Output selected Item from List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.builtin.empty" port_format="1.1" uuid="{3f81bed6-83d8-40a3-b504-22ad6a572cd4}" x="1925.0" y="2050.0">
      <label>Empty</label>
      <version>1.1</version>
      <description>Generate empty data of inferred or specified type</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
      <copyright>(C) 2016 Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "datatype": {
          "editor": null,
          "label": "Datatype",
          "order": 0,
          "type": "string",
          "value": "&lt;a&gt;"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{a9a9e5ef-72ad-4ab9-bb89-92bbc1a2d733}">
          <label>Output port containing empty data (must be connected or specified)</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.getitemlist" port_format="1.1" uuid="{95801dd3-409c-496b-aed0-95938b287ea3}" x="1925.0" y="1950.0">
      <label>Get Item List</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "index": {
          "editor": {
            "display": null,
            "edit": true,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Index",
          "list": ["0", "1", "2", "3", "4", "5", "6", "7"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["0"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{e2bf7d15-435b-494b-adc8-a0b81b34b397}">
          <label>Input List</label>
        </input>
        <output key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{0b18c129-20f3-470d-92e5-197f937e2e56}">
          <label>Output selected Item from List</label>
        </output>
        <output key="rest" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{79d17e07-f2cb-4707-846a-fae6542f5a5f}">
          <label>Output non-selected Items from List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.builtin.map" port_format="1.1" uuid="{d5263d0d-d7d8-408c-9c91-b4df258e67c8}" x="2275.0" y="1950.0">
      <label>Map</label>
      <version>1.0</version>
      <description>Map Lambda function over each element in argument list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "fail_strategy": {
          "editor": {
            "display": null,
            "edit": false,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Action on exception",
          "list": ["Error", "Create Empty Item", "Skip Item"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["Error"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{00a26bfd-48b8-4644-8796-6de4b6edf4b9}">
          <label>Lambda Function to Map</label>
        </input>
        <input key="List" scheme="hdf5" type="[(table, table)]" type_base="[&lt;a&gt;]" uuid="{35c0ab4e-6638-4a2e-a72a-958cf45c4a3a}">
          <label>Argument List</label>
        </input>
        <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{8bd8971e-6933-4a29-a41b-6abfff7de923}">
          <label>Output List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{fedd52c1-ed59-425f-a1e0-1801dd6bdabe}" x="2150.0" y="1950.0">
      <label>Zip Tuple</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{1714ab64-aea6-4f93-ad80-249cd95fa90c}">
          <label>Input</label>
        </input>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{b535b16e-7eba-4d69-a768-424f37c7d0b5}">
          <label>Input</label>
        </input>
        <output key="output" scheme="hdf5" type="[(table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{4b4f855d-239f-4b7a-abe1-0230e2189960}">
          <label>Output</label>
        </output>
      </ports>
    </node>
    <connection type="[table]" uuid="{088b5099-1ed7-4ea6-a1a0-d740fcd66dbe}">
      <source node="{3f81bed6-83d8-40a3-b504-22ad6a572cd4}" port="{a9a9e5ef-72ad-4ab9-bb89-92bbc1a2d733}"/>
      <destination node="{25df34cd-013e-460d-a4bc-0f811f46e923}" port="{ad21c30c-9e67-448e-b9d0-368547403817}"/>
    </connection>
    <connection type="table" uuid="{2a237f5d-ef29-41b7-ad4b-995c18688cf4}">
      <source node="{95801dd3-409c-496b-aed0-95938b287ea3}" port="{0b18c129-20f3-470d-92e5-197f937e2e56}"/>
      <destination node="{25df34cd-013e-460d-a4bc-0f811f46e923}" port="{9505894d-42d3-4603-8d20-eb848f0e7d4e}"/>
    </connection>
    <connection type="[table]" uuid="{41ad827e-dc0d-45bb-a33e-74e94014d9cc}">
      <source node="{d5263d0d-d7d8-408c-9c91-b4df258e67c8}" port="{8bd8971e-6933-4a29-a41b-6abfff7de923}"/>
      <destination node="{38c5dd32-9352-4fa7-bf6e-603ae19ef404}" port="{0c069d6a-d96f-4996-909c-d555ae637179}"/>
    </connection>
    <connection type="(table, table) -&gt; table" uuid="{4bfaaa5c-ada5-494d-afbf-cad6b567c59a}">
      <source node="{82565ff6-0e4d-4080-bbe7-f87e9394923e}" port="{1857578c-3a6c-4688-9785-b4d191692aa3}"/>
      <destination node="{d5263d0d-d7d8-408c-9c91-b4df258e67c8}" port="{00a26bfd-48b8-4644-8796-6de4b6edf4b9}"/>
    </connection>
    <connection type="[table]" uuid="{4fe650ca-34f9-478c-97ca-bd76d1e43768}">
      <source node="{8db57f3f-6b17-4a9d-ae7f-8d7703f29d17}" port="{e01901e8-7d90-45e0-95b4-d5dc79aab7a9}"/>
      <destination node="{95801dd3-409c-496b-aed0-95938b287ea3}" port="{e2bf7d15-435b-494b-adc8-a0b81b34b397}"/>
    </connection>
    <connection type="[(table, table)]" uuid="{57635fa0-74d9-4001-b9b9-b0c6c8907c84}">
      <source node="{fedd52c1-ed59-425f-a1e0-1801dd6bdabe}" port="{4b4f855d-239f-4b7a-abe1-0230e2189960}"/>
      <destination node="{d5263d0d-d7d8-408c-9c91-b4df258e67c8}" port="{35c0ab4e-6638-4a2e-a72a-958cf45c4a3a}"/>
    </connection>
    <connection type="table" uuid="{9223553d-b0c9-4ee7-be14-0c6dccc2688d}">
      <source node="{38c5dd32-9352-4fa7-bf6e-603ae19ef404}" port="{1d3bb3db-1918-4616-95a4-ea755da520f4}"/>
      <destination node="{8db57f3f-6b17-4a9d-ae7f-8d7703f29d17}" port="{09add8d1-cb6b-46a7-b893-238d9cecd6c1}"/>
    </connection>
    <connection type="[table]" uuid="{bcad2dfe-87b2-463c-aac9-4d5a4b533e55}">
      <source node="{95801dd3-409c-496b-aed0-95938b287ea3}" port="{79d17e07-f2cb-4707-846a-fae6542f5a5f}"/>
      <destination node="{fedd52c1-ed59-425f-a1e0-1801dd6bdabe}" port="{1714ab64-aea6-4f93-ad80-249cd95fa90c}"/>
    </connection>
    <connection type="[table]" uuid="{d3f4592b-f8e5-4600-9271-374c00a9d715}">
      <source node="{25df34cd-013e-460d-a4bc-0f811f46e923}" port="{dadb8ad4-e040-41b9-8266-8462c3f90dbb}"/>
      <destination node="{fedd52c1-ed59-425f-a1e0-1801dd6bdabe}" port="{b535b16e-7eba-4d69-a768-424f37c7d0b5}"/>
    </connection>
    <connection type="[table]" uuid="{e3bb269d-8194-4e87-9aaf-a0a18aece73b}">
      <source node="{95801dd3-409c-496b-aed0-95938b287ea3}" port="{79d17e07-f2cb-4707-846a-fae6542f5a5f}"/>
      <destination node="{25df34cd-013e-460d-a4bc-0f811f46e923}" port="{e67196a8-6fb2-4bf0-a3a9-557f08f12bda}"/>
    </connection>
  </flow>
  <flow cls="Flow" uuid="{9a94b169-a87e-4b72-9b52-e5673b177fad}" x="1825.0" y="2825.0">
    <label>Selection tables</label>
    <ports>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{41ae774e-a9e8-40b6-9031-ebd7966f5584}" x="2100.0" y="2375.0">
        <label>Port</label>
      </output>
    </ports>
    <node id="org.sysess.sympathy.data.table.vsplittablenode" port_format="1.1" uuid="{9c962944-cf03-4fb7-a1f4-07c9af7fc4ed}" x="1975.0" y="2375.0">
      <label>VSplit Table</label>
      <version>1.0</version>
      <description>Split Table rowwise (vertically), grouping unique values of an index column.</description>
      <author>Alexander Busck</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "input_index": {
          "editor": {
            "display": null,
            "edit": true,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Index column",
          "order": 1,
          "type": "string",
          "value": ""
        },
        "missing_index": {
          "editor": {
            "display": null,
            "edit": false,
            "include_empty": false,
            "options": ["Multiple tables, one for each row", "Single table, one table for all rows", "Error"],
            "type": "combobox"
          },
          "label": "Action on missing index",
          "order": 2,
          "type": "string",
          "value": "Multiple tables, one for each row"
        },
        "no_index": {
          "editor": null,
          "label": "One table for each row.",
          "order": 0,
          "type": "boolean",
          "value": true
        },
        "remove_fill": {
          "editor": null,
          "label": "Remove complement columns",
          "order": 3,
          "type": "boolean",
          "value": false
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{f6ec6532-1f83-4661-826e-3f8531eb51c5}">
          <label>Input Table</label>
        </input>
        <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{9a483dee-4bd2-4956-80ae-129882da6bc9}">
          <label>Split Tables</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{c7997bf9-3f89-4479-ad39-d03de5084c2b}" x="1850.0" y="2375.0">
      <label>Selections</label>
      <version>1.0</version>
      <description></description>
      <author>Magnus Sand&#233;n</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "json_table": {
          "editor": null,
          "label": "GUI",
          "order": 0,
          "type": "string",
          "value": "[[\"column\", \"U\", [\"text\", \"float\", \"int\", \"bool\", \"datetime\", \"timedelta\", \"binary\", \"complex\"]], [\"operator\", \"U\", [\"==\", \"==\", \"==\", \"==\", \"&lt;=\", \"&lt;=\", \"==\", \"==\"]], [\"value\", \"U\", [\"B\", \"0.2\", \"2\", \"True\", \"2018-03-21T00:00:00\", \"1 D\", \"B\", \"0.2 + 1j\"]]]"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{96f2abe4-f29e-48f6-8cf2-5d46acd9b423}">
          <label>Manually created table</label>
        </output>
      </ports>
    </node>
    <connection type="table" uuid="{5b81211b-e7f8-4cef-9b14-d7d2489b3a47}">
      <source node="{c7997bf9-3f89-4479-ad39-d03de5084c2b}" port="{96f2abe4-f29e-48f6-8cf2-5d46acd9b423}"/>
      <destination node="{9c962944-cf03-4fb7-a1f4-07c9af7fc4ed}" port="{f6ec6532-1f83-4661-826e-3f8531eb51c5}"/>
    </connection>
    <connection type="[table]" uuid="{6d8c0f58-2b64-4ebf-8b91-22473a412f66}">
      <source node="{9c962944-cf03-4fb7-a1f4-07c9af7fc4ed}" port="{9a483dee-4bd2-4956-80ae-129882da6bc9}"/>
      <destination node="{9a94b169-a87e-4b72-9b52-e5673b177fad}" port="{41ae774e-a9e8-40b6-9031-ebd7966f5584}"/>
    </connection>
  </flow>
  <flow cls="Flow" uuid="{e6e00dfe-fc7a-4b02-87d7-e2a037f8c776}" x="1975.0" y="2325.0">
    <label>Select rows for each selection table</label>
    <ports>
      <input index="0" key="Selection tables" parent="True" scheme="hdf5" type="[table]" uuid="{c9d3cbe1-9d95-4592-adb7-237f50021545}" x="1650.0" y="2250.0">
        <label>Selection tables</label>
      </input>
      <input index="1" key="Input data" parent="True" scheme="hdf5" type="table" uuid="{987b5044-ec70-44b6-952f-1a204f11b54e}" x="1650.0" y="2350.0">
        <label>Input data</label>
      </input>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{0ff04455-e40b-43b6-9f97-085613e41d08}" x="2225.0" y="2250.0">
        <label>Port</label>
      </output>
    </ports>
    <flow cls="Lambda" uuid="{cca4794f-5906-46bc-b525-a198e5ac737b}" x="1975.0" y="2150.0">
      <label>Select rows in Table with Table</label>
      <ports>
        <input index="0" key="Port" parent="False" scheme="hdf5" type="(table, table)" uuid="{44cf0cc0-5cf0-42a6-9fbf-11ffdf4ef944}" x="1750.0" y="2000.0">
          <label>Port</label>
        </input>
        <output index="0" key="Port" parent="False" scheme="hdf5" type="table" uuid="{bc086abb-0458-4afc-9dff-55a7fcb7a074}" x="2150.0" y="2000.0">
          <label>Port</label>
        </output>
      </ports>
      <basic_ports>
        <output key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt;" uuid="{25f90dbd-fad5-4565-a002-bf2a13db457e}">
          <label>Lambda function</label>
        </output>
      </basic_ports>
      <node id="org.sysess.sympathy.data.table.selecttablerowsfromtable" port_format="1.1" uuid="{1c15d8e9-6463-41fe-b065-3dc5beb3e10d}" x="2025.0" y="2000.0">
        <label>Select rows in Table with Table</label>
        <version>1.0</version>
        <description>Select rows in Table by using an additional selection Table with predefined comparison relations.</description>
        <author>Greger Cronquist</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">
        {
          "column": {
            "editor": {
              "display": null,
              "edit": true,
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Column with column names",
            "list": [],
            "mode": "selected",
            "order": 0,
            "passthrough": false,
            "type": "list",
            "value": [],
            "value_names": ["column"]
          },
          "constraint": {
            "editor": {
              "display": null,
              "edit": true,
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Column with constraint values",
            "list": [],
            "mode": "selected",
            "order": 2,
            "passthrough": false,
            "type": "list",
            "value": [],
            "value_names": ["value"]
          },
          "eval": {
            "editor": {
              "display": null,
              "edit": false,
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Evaluate values as code",
            "order": 4,
            "type": "boolean",
            "value": true
          },
          "reduction": {
            "editor": {
              "display": null,
              "edit": false,
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Reduction:",
            "list": ["all", "any"],
            "mode": "selected",
            "order": 3,
            "passthrough": false,
            "type": "list",
            "value": [0],
            "value_names": ["all"]
          },
          "relation": {
            "editor": {
              "display": null,
              "edit": true,
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Column with comparison operators",
            "list": [],
            "mode": "selected",
            "order": 1,
            "passthrough": false,
            "type": "list",
            "value": [],
            "value_names": ["operator"]
          },
          "type": "group"
        }
        </parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{08aeadbd-40c2-4968-b605-d4cb3573edfa}">
            <label>Table with three columns that defines a set of comparison relations. Each row in the set will set up a comparison relation with a column name, a comparison operator and a constraint value.</label>
          </input>
          <input key="port2" scheme="hdf5" type="table" type_base="table" uuid="{f04819b7-6dd5-40ce-b3a1-263e3567a069}">
            <label>Input Table</label>
          </input>
          <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{3caf36b7-595a-447b-a8fb-cf0768a5f63c}">
            <label>Table with rows in Selection</label>
          </output>
          <output key="__sy_err__" scheme="hdf5" type="text" type_base="text" uuid="{c8340706-bb53-4c4a-b8ec-f04766cbebdd}">
            <label>Warning Text</label>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.tuple.untuple2" port_format="1.1" uuid="{591cef12-b28f-4f3f-b007-a33cb7ed824a}" x="1900.0" y="2000.0">
        <label>Untuple</label>
        <version>1.0</version>
        <description></description>
        <author>Erik der Hagopian</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">{"type": "group"}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="(table, table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{a6a7ca1b-0b8c-41c5-9cd0-155d5a6f5fe7}">
            <label>Input</label>
          </input>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{01fcb6d3-1124-42ac-bf0f-0dd52bb884ea}">
            <label>Output</label>
          </output>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{fc473c97-2552-40d2-bfde-c7822baf6f8a}">
            <label>Output</label>
          </output>
        </ports>
      </node>
      <connection type="table" uuid="{067be7d8-cc7b-4b58-adfb-da081fde9048}">
        <source node="{591cef12-b28f-4f3f-b007-a33cb7ed824a}" port="{fc473c97-2552-40d2-bfde-c7822baf6f8a}"/>
        <destination node="{1c15d8e9-6463-41fe-b065-3dc5beb3e10d}" port="{f04819b7-6dd5-40ce-b3a1-263e3567a069}"/>
      </connection>
      <connection type="(table, table)" uuid="{531874ff-e9dc-4c5b-b478-2ef546848119}">
        <source node="{cca4794f-5906-46bc-b525-a198e5ac737b}" port="{44cf0cc0-5cf0-42a6-9fbf-11ffdf4ef944}"/>
        <destination node="{591cef12-b28f-4f3f-b007-a33cb7ed824a}" port="{a6a7ca1b-0b8c-41c5-9cd0-155d5a6f5fe7}"/>
      </connection>
      <connection type="table" uuid="{b2968c09-fb9d-4204-8c35-b84905d48cf3}">
        <source node="{1c15d8e9-6463-41fe-b065-3dc5beb3e10d}" port="{3caf36b7-595a-447b-a8fb-cf0768a5f63c}"/>
        <destination node="{cca4794f-5906-46bc-b525-a198e5ac737b}" port="{bc086abb-0458-4afc-9dff-55a7fcb7a074}"/>
      </connection>
      <connection type="table" uuid="{fa4aa11a-df09-427c-abb6-f80471999324}">
        <source node="{591cef12-b28f-4f3f-b007-a33cb7ed824a}" port="{01fcb6d3-1124-42ac-bf0f-0dd52bb884ea}"/>
        <destination node="{1c15d8e9-6463-41fe-b065-3dc5beb3e10d}" port="{08aeadbd-40c2-4968-b605-d4cb3573edfa}"/>
      </connection>
    </flow>
    <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{32e60f4d-9f0a-43cf-beda-6331a9f76b49}" x="1975.0" y="2250.0">
      <label>Zip Tuple</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{d8323f87-968c-4a70-80b8-0ff60f1344d9}">
          <label>Input</label>
        </input>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{d022e407-2dd5-4792-b641-510118dc9a96}">
          <label>Input</label>
        </input>
        <output key="output" scheme="hdf5" type="[(table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{4f328d6d-fd07-4e0e-9e66-8f37825d2d8d}">
          <label>Output</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.padlistitem" port_format="1.1" uuid="{45606acf-fbfb-46b6-9738-ac9ca1c9f4d7}" x="1850.0" y="2300.0">
      <label>Pad List with Item</label>
      <version>1.0</version>
      <description>Pad a list with item match the length of template</description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="template" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{31c54bbb-e12e-4b96-aef5-eafc0878f975}">
          <label>List with deciding length</label>
        </input>
        <input key="item" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{c8dd28f4-fd0e-4da0-8716-c3a48a53ae62}">
          <label>Item to be used as padding</label>
        </input>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{ceaaf53c-6ec7-4609-b479-7038e0ac66e1}">
          <label>List that will be padded</label>
        </input>
        <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{2c8348c1-4d5e-4a74-96ad-e5f30bbf6cf6}">
          <label>The padded List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.builtin.map" port_format="1.1" uuid="{c7af00a8-25a1-448e-a646-f48d4d18d66e}" x="2125.0" y="2250.0">
      <label>Map</label>
      <version>1.0</version>
      <description>Map Lambda function over each element in argument list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "fail_strategy": {
          "editor": {
            "display": null,
            "edit": false,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Action on exception",
          "list": ["Error", "Create Empty Item", "Skip Item"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["Error"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{81e1647f-14ab-4422-ae64-282a5672da54}">
          <label>Lambda Function to Map</label>
        </input>
        <input key="List" scheme="hdf5" type="[(table, table)]" type_base="[&lt;a&gt;]" uuid="{92e403e2-1620-466e-83e5-d5354ce59f76}">
          <label>Argument List</label>
        </input>
        <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{4a320e51-5200-44eb-9389-748ac5f2d558}">
          <label>Output List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.builtin.empty" port_format="1.1" uuid="{ced1b325-cd3c-4764-a95c-a70118bc0097}" x="1650.0" y="2450.0">
      <label>Empty</label>
      <version>1.1</version>
      <description>Generate empty data of inferred or specified type</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
      <copyright>(C) 2016 Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "datatype": {
          "editor": null,
          "label": "Datatype",
          "order": 0,
          "type": "string",
          "value": "&lt;a&gt;"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{347586c4-c8b1-4bf8-90db-5aa5f97804fd}">
          <label>Output port containing empty data (must be connected or specified)</label>
        </output>
      </ports>
    </node>
    <connection type="[table]" uuid="{11fc5f28-e8c6-454f-9055-a99c27d329c4}">
      <source node="{c7af00a8-25a1-448e-a646-f48d4d18d66e}" port="{4a320e51-5200-44eb-9389-748ac5f2d558}"/>
      <destination node="{e6e00dfe-fc7a-4b02-87d7-e2a037f8c776}" port="{0ff04455-e40b-43b6-9f97-085613e41d08}"/>
    </connection>
    <connection type="(table, table) -&gt; table" uuid="{3c02c026-6d63-48d4-b396-6ef9fa308440}">
      <source node="{cca4794f-5906-46bc-b525-a198e5ac737b}" port="{25f90dbd-fad5-4565-a002-bf2a13db457e}"/>
      <destination node="{c7af00a8-25a1-448e-a646-f48d4d18d66e}" port="{81e1647f-14ab-4422-ae64-282a5672da54}"/>
    </connection>
    <connection type="[table]" uuid="{57a7846e-cfd8-41e0-a8b2-31089255629e}">
      <source node="{e6e00dfe-fc7a-4b02-87d7-e2a037f8c776}" port="{c9d3cbe1-9d95-4592-adb7-237f50021545}"/>
      <destination node="{45606acf-fbfb-46b6-9738-ac9ca1c9f4d7}" port="{31c54bbb-e12e-4b96-aef5-eafc0878f975}"/>
    </connection>
    <connection type="[table]" uuid="{7649c4e7-7205-4402-b06a-a3cc126f94f6}">
      <source node="{e6e00dfe-fc7a-4b02-87d7-e2a037f8c776}" port="{c9d3cbe1-9d95-4592-adb7-237f50021545}"/>
      <destination node="{32e60f4d-9f0a-43cf-beda-6331a9f76b49}" port="{d8323f87-968c-4a70-80b8-0ff60f1344d9}"/>
    </connection>
    <connection type="table" uuid="{7b7eb211-a0ff-4473-a216-79e104849b5b}">
      <source node="{e6e00dfe-fc7a-4b02-87d7-e2a037f8c776}" port="{987b5044-ec70-44b6-952f-1a204f11b54e}"/>
      <destination node="{45606acf-fbfb-46b6-9738-ac9ca1c9f4d7}" port="{c8dd28f4-fd0e-4da0-8716-c3a48a53ae62}"/>
    </connection>
    <connection type="[table]" uuid="{a44a1dad-ed9c-4abd-ba7d-d475a09f5946}">
      <source node="{ced1b325-cd3c-4764-a95c-a70118bc0097}" port="{347586c4-c8b1-4bf8-90db-5aa5f97804fd}"/>
      <destination node="{45606acf-fbfb-46b6-9738-ac9ca1c9f4d7}" port="{ceaaf53c-6ec7-4609-b479-7038e0ac66e1}"/>
    </connection>
    <connection type="[table]" uuid="{c67c6c3a-be35-436e-8c20-0b443cf6d9f4}">
      <source node="{45606acf-fbfb-46b6-9738-ac9ca1c9f4d7}" port="{2c8348c1-4d5e-4a74-96ad-e5f30bbf6cf6}"/>
      <destination node="{32e60f4d-9f0a-43cf-beda-6331a9f76b49}" port="{d022e407-2dd5-4792-b641-510118dc9a96}"/>
    </connection>
    <connection type="[(table, table)]" uuid="{ddb9a4f5-dbe6-4a93-b89a-d7b4720464aa}">
      <source node="{32e60f4d-9f0a-43cf-beda-6331a9f76b49}" port="{4f328d6d-fd07-4e0e-9e66-8f37825d2d8d}"/>
      <destination node="{c7af00a8-25a1-448e-a646-f48d4d18d66e}" port="{92e403e2-1620-466e-83e5-d5354ce59f76}"/>
    </connection>
  </flow>
  <flow cls="Flow" uuid="{f872d99c-d457-4072-b213-f4ffb0c0e1b5}" x="1825.0" y="2650.0">
    <label>Input data</label>
    <ports>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="table" uuid="{b62f9206-8425-4ef8-8663-bcbf9a9e2ab2}" x="1925.0" y="2375.0">
        <label>Port</label>
      </output>
    </ports>
    <node id="org.sysess.sympathy.data.table.calculatorgeneric" port_format="1.1" uuid="{64c3e0a7-c4c4-4cee-b691-df4f336a291e}" x="1800.0" y="2375.0">
      <label>Calculator</label>
      <version>3.0</version>
      <description>Performs user-defined python calculations</description>
      <author>Greger Cronquist, Magnus Sand&#233;n, Sara Gustafzelius &amp; Benedikt Ziegler</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "calc_list": {
          "editor": null,
          "label": "List of calculations",
          "list": ["timedelta = arg['datetime'] - np.datetime64('2018-03-20T00:00:00') #ENABLED:1", "binary = [s.encode('ascii') for s in arg['text']] #ENABLED:1", "complex = arg['float'] + 1j #ENABLED:1"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [],
          "value_names": []
        },
        "copy_input": {
          "editor": null,
          "label": "Copy input",
          "order": 1,
          "type": "boolean",
          "value": true
        },
        "fail_strategy": {
          "editor": {
            "display": null,
            "edit": false,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Action on calculation failure",
          "list": ["Exception", "Skip calculation"],
          "mode": "selected",
          "order": 2,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": ["Exception"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="port0" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{8d4aebd4-7bdf-442f-93ce-624e1d8dc6fd}">
          <label>Generic Input</label>
        </input>
        <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{a76579fd-7d62-4761-aead-790bbfde9875}">
          <label>Table with results from the calculations.</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{99b4e303-e8ef-49bd-b039-c7f1241f5405}" x="1650.0" y="2375.0">
      <label>Manually Create Table</label>
      <version>1.0</version>
      <description></description>
      <author>Magnus Sand&#233;n</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "json_table": {
          "editor": null,
          "label": "GUI",
          "order": 0,
          "type": "string",
          "value": "[[\"text\", \"U\", [\"A\", \"B\", \"C\"]], [\"float\", \"f\", [0.1, 0.2, 0.3]], [\"int\", \"i\", [1, 2, 3]], [\"bool\", \"b\", [false, true, false]], [\"datetime\", \"M\", [\"2018-03-22T00:00:00\", \"2018-03-21T00:00:00\", \"2018-03-23T00:00:00\"]]]"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{c2a826d0-252e-48b9-bd91-c79d45eb8e19}">
          <label>Manually created table</label>
        </output>
      </ports>
    </node>
    <connection type="table" uuid="{7a67eda8-5326-4298-be73-02e42efebefd}">
      <source node="{99b4e303-e8ef-49bd-b039-c7f1241f5405}" port="{c2a826d0-252e-48b9-bd91-c79d45eb8e19}"/>
      <destination node="{64c3e0a7-c4c4-4cee-b691-df4f336a291e}" port="{8d4aebd4-7bdf-442f-93ce-624e1d8dc6fd}"/>
    </connection>
    <connection type="table" uuid="{b516e4ea-f72c-473c-88dc-55043e227973}">
      <source node="{64c3e0a7-c4c4-4cee-b691-df4f336a291e}" port="{a76579fd-7d62-4761-aead-790bbfde9875}"/>
      <destination node="{f872d99c-d457-4072-b213-f4ffb0c0e1b5}" port="{b62f9206-8425-4ef8-8663-bcbf9a9e2ab2}"/>
    </connection>
  </flow>
  <node id="org.sysess.sympathy.data.table.assertequaltable" port_format="1.1" uuid="{1335d26b-32d4-4b83-9d18-56d4d7f85a77}" x="2475.0" y="2475.0">
    <label>Assert Equal Table</label>
    <version>1.0</version>
    <description></description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "abs_tol": {
        "editor": null,
        "label": "Absolute tolerance",
        "order": 6,
        "type": "float",
        "value": 1e-08
      },
      "col_attrs": {
        "editor": null,
        "label": "Compare column attributes",
        "order": 1,
        "type": "boolean",
        "value": true
      },
      "col_order": {
        "editor": null,
        "label": "Compare column order",
        "order": 0,
        "type": "boolean",
        "value": true
      },
      "inexact_float": {
        "editor": null,
        "label": "Approximate comparison of floats",
        "order": 4,
        "type": "boolean",
        "value": false
      },
      "rel_tol": {
        "editor": null,
        "label": "Relative tolerance",
        "order": 5,
        "type": "float",
        "value": 1e-05
      },
      "tbl_attrs": {
        "editor": null,
        "label": "Compare table attributes",
        "order": 3,
        "type": "boolean",
        "value": true
      },
      "tbl_names": {
        "editor": null,
        "label": "Compare table names",
        "order": 2,
        "type": "boolean",
        "value": true
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{180299d4-63a9-4320-9cc1-9b096407d192}">
        <label>Table A</label>
      </input>
      <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{36cbc099-db5b-4743-b951-b7a2ef5f0391}">
        <label>Table B</label>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{da6d72fd-a7d4-49bb-b12b-0b825f3c58aa}">
        <label>Output Table</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.selecttablesrowsfromtable" port_format="1.1" uuid="{24698758-62c2-426e-a86b-a52eaac03a52}" x="2225.0" y="2000.0">
    <label>Select rows in Tables with Table</label>
    <version>1.0</version>
    <description>Select rows in Tables by using an additional selection Table with predefined comparison relations.</description>
    <author>Greger Cronquist</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "column": {
        "editor": {
          "display": null,
          "edit": true,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Column with column names",
        "list": ["names", "operators1", "operators2", "values"],
        "mode": "selected",
        "order": 0,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": ["names"]
      },
      "constraint": {
        "editor": {
          "display": null,
          "edit": true,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Column with constraint values",
        "list": ["names", "operators1", "operators2", "values"],
        "mode": "selected",
        "order": 2,
        "passthrough": false,
        "type": "list",
        "value": [3],
        "value_names": ["values"]
      },
      "eval": {
        "editor": {
          "display": null,
          "edit": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Evaluate values as code",
        "order": 4,
        "type": "boolean",
        "value": false
      },
      "reduction": {
        "editor": {
          "display": null,
          "edit": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Reduction:",
        "list": ["all", "any"],
        "mode": "selected",
        "order": 3,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": ["all"]
      },
      "relation": {
        "editor": {
          "display": null,
          "edit": true,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Column with comparison operators",
        "list": ["names", "operators1", "operators2", "values"],
        "mode": "selected",
        "order": 1,
        "passthrough": false,
        "type": "list",
        "value": [1],
        "value_names": ["operators1"]
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{f7c8978c-f1f6-4235-9a03-d54f9efea167}">
        <label>Selection</label>
      </input>
      <input key="port2" scheme="hdf5" type="[table]" type_base="[table]" uuid="{9c96a732-61f6-46ea-bdbb-473f07614f64}">
        <label>Input Tables</label>
      </input>
      <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{3f36c315-36e1-496b-9059-dc443fd9cb80}">
        <label>Tables with rows in Selection</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.selecttablerowsfromtable" port_format="1.1" uuid="{6ff51948-4935-4ca4-8130-de4e161e0bdd}" x="2100.0" y="1800.0">
    <label>Select rows in Table with Table</label>
    <version>1.0</version>
    <description>Select rows in Table by using an additional selection Table with predefined comparison relations.</description>
    <author>Greger Cronquist</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "column": {
        "editor": {
          "display": null,
          "edit": true,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Column with column names",
        "list": ["names", "operators1", "operators2", "values"],
        "mode": "selected",
        "order": 0,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": ["names"]
      },
      "constraint": {
        "editor": {
          "display": null,
          "edit": true,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Column with constraint values",
        "list": ["names", "operators1", "operators2", "values"],
        "mode": "selected",
        "order": 2,
        "passthrough": false,
        "type": "list",
        "value": [3],
        "value_names": ["values"]
      },
      "eval": {
        "editor": {
          "display": null,
          "edit": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Evaluate values as code",
        "order": 4,
        "type": "boolean",
        "value": false
      },
      "reduction": {
        "editor": {
          "display": null,
          "edit": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Reduction:",
        "list": ["all", "any"],
        "mode": "selected",
        "order": 3,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": ["all"]
      },
      "relation": {
        "editor": {
          "display": null,
          "edit": true,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Column with comparison operators",
        "list": ["names", "operators1", "operators2", "values"],
        "mode": "selected",
        "order": 1,
        "passthrough": false,
        "type": "list",
        "value": [1],
        "value_names": ["operators1"]
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{231d289c-f251-4c54-ad11-bb225ddc6a78}">
        <label>Table with three columns that defines a set of comparison relations. Each row in the set will set up a comparison relation with a column name, a comparison operator and a constraint value.</label>
      </input>
      <input key="port2" scheme="hdf5" type="table" type_base="table" uuid="{195dca99-1857-4b83-bd93-3ab041660b62}">
        <label>Input Table</label>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{956f0f3d-5bc3-4fb8-b26b-fd207525092c}">
        <label>Table with rows in Selection</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.renamesingletablecolumns" port_format="1.1" uuid="{7ce86c27-5c33-470a-847e-40f4e94419a4}" x="1950.0" y="2050.0">
    <label>Rename columns in Table</label>
    <version>1.0</version>
    <description>Rename the Table columns by using regular expressions.</description>
    <author>Greger Cronquist</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "dst_expr": {
        "editor": null,
        "label": "Replacement expression",
        "order": 1,
        "type": "string",
        "value": "Column X"
      },
      "src_expr": {
        "editor": null,
        "label": "Search expression",
        "order": 0,
        "type": "string",
        "value": "0"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="Input" scheme="hdf5" type="table" type_base="table" uuid="{db5f9df7-a003-428e-affa-deac1830d8b7}">
        <label>Input</label>
      </input>
      <output key="Output" scheme="hdf5" type="table" type_base="table" uuid="{25639b2f-67f7-49bc-888e-fa2bfc5771db}">
        <label>Output</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.selecttablerowsfromtable" port_format="1.1" uuid="{81547650-3f7c-4101-a1c4-bba8d470cecd}" x="2100.0" y="1900.0">
    <label>Select rows in Table with Table</label>
    <version>1.0</version>
    <description>Select rows in Table by using an additional selection Table with predefined comparison relations.</description>
    <author>Greger Cronquist</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "column": {
        "editor": {
          "display": null,
          "edit": true,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Column with column names",
        "list": ["names", "operators1", "operators2", "values"],
        "mode": "selected",
        "order": 0,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": ["names"]
      },
      "constraint": {
        "editor": {
          "display": null,
          "edit": true,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Column with constraint values",
        "list": ["names", "operators1", "operators2", "values"],
        "mode": "selected",
        "order": 2,
        "passthrough": false,
        "type": "list",
        "value": [3],
        "value_names": ["values"]
      },
      "eval": {
        "editor": {
          "display": null,
          "edit": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Evaluate values as code",
        "order": 4,
        "type": "boolean",
        "value": false
      },
      "reduction": {
        "editor": {
          "display": null,
          "edit": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Reduction:",
        "list": ["all", "any"],
        "mode": "selected",
        "order": 3,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": ["all"]
      },
      "relation": {
        "editor": {
          "display": null,
          "edit": true,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Column with comparison operators",
        "list": ["names", "operators1", "operators2", "values"],
        "mode": "selected",
        "order": 1,
        "passthrough": false,
        "type": "list",
        "value": [2],
        "value_names": ["operators2"]
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{35e826d6-1af0-4808-a301-72dc72082245}">
        <label>Table with three columns that defines a set of comparison relations. Each row in the set will set up a comparison relation with a column name, a comparison operator and a constraint value.</label>
      </input>
      <input key="port2" scheme="hdf5" type="table" type_base="table" uuid="{9df6d594-b3fb-46aa-be55-8d18b861b84c}">
        <label>Input Table</label>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{058c3f25-ea76-4f9b-9435-42f043fd8d52}">
        <label>Table with rows in Selection</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtable" port_format="1.1" uuid="{8a1304fb-68af-4005-b1d3-1eba7cd720e8}" x="1825.0" y="2050.0">
    <label>Random Table</label>
    <version>0.1</version>
    <description>Generate a Table with random numbers between 0 and 1.</description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "column_entries": {
        "editor": {
          "max": 1000000,
          "min": 0,
          "step": 1,
          "type": "spinbox"
        },
        "label": "Column entries",
        "order": 0,
        "type": "integer",
        "value": 2
      },
      "column_length": {
        "editor": {
          "max": 100000000,
          "min": 0,
          "step": 1,
          "type": "spinbox"
        },
        "label": "Column length",
        "order": 1,
        "type": "integer",
        "value": 40
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{7f32b7c5-4188-44cb-bb90-06ad2f5b4e6d}">
        <label>Table with random numbers.</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.getitemlist" port_format="1.1" uuid="{8e3d3708-53cd-42ad-bea6-173ce5684533}" x="2350.0" y="2000.0">
    <label>Get Item List</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "index": {
        "editor": {
          "display": null,
          "edit": true,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Index",
        "list": ["0"],
        "mode": "selected",
        "order": 0,
        "passthrough": false,
        "type": "list",
        "value": [0],
        "value_names": ["0"]
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{e68c0244-d706-48dd-b5af-283b0ee76d1f}">
        <label>Input List</label>
      </input>
      <output key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{ede95145-6fee-4f1a-a2a7-555f0b952a07}">
        <label>Output selected Item from List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" port_format="1.1" uuid="{b181ddea-cb1f-4f69-a272-729c19b4b29f}" x="2100.0" y="2050.0">
    <label>Item to List</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{404d81e9-bc24-41b1-bd50-4b5e452cc71d}">
        <label>Input Item</label>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{5b01d838-40aa-4d23-bf7a-9156261fc7de}">
        <label>Item as List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.assertequaltable" port_format="1.1" uuid="{b54667c7-12e1-4ad6-b99c-277272850dd1}" x="2325.0" y="2475.0">
    <label>Assert Equal Table</label>
    <version>1.0</version>
    <description></description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "abs_tol": {
        "editor": null,
        "label": "Absolute tolerance",
        "order": 6,
        "type": "float",
        "value": 1e-08
      },
      "col_attrs": {
        "editor": null,
        "label": "Compare column attributes",
        "order": 1,
        "type": "boolean",
        "value": true
      },
      "col_order": {
        "editor": null,
        "label": "Compare column order",
        "order": 0,
        "type": "boolean",
        "value": true
      },
      "inexact_float": {
        "editor": null,
        "label": "Approximate comparison of floats",
        "order": 4,
        "type": "boolean",
        "value": false
      },
      "rel_tol": {
        "editor": null,
        "label": "Relative tolerance",
        "order": 5,
        "type": "float",
        "value": 1e-05
      },
      "tbl_attrs": {
        "editor": null,
        "label": "Compare table attributes",
        "order": 3,
        "type": "boolean",
        "value": true
      },
      "tbl_names": {
        "editor": null,
        "label": "Compare table names",
        "order": 2,
        "type": "boolean",
        "value": true
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{2d5edf99-371e-4e24-81a8-db7584eaa611}">
        <label>Table A</label>
      </input>
      <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{c3168f7f-04f2-4a11-a355-b8514d2a5e37}">
        <label>Table B</label>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{90b117a3-414a-40f5-aaba-4c51c85b9af8}">
        <label>Output Table</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{c5f1c2e6-738c-41bd-967f-82666a178ea3}" x="1825.0" y="1900.0">
    <label>Manually Create Table</label>
    <version>1.0</version>
    <description></description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "json_table": {
        "editor": null,
        "label": "GUI",
        "order": 0,
        "type": "string",
        "value": "[[\"names\", \"U\", [\"Column X\"]], [\"operators1\", \"U\", [\"less than\"]], [\"operators2\", \"U\", [\"&lt;=\"]], [\"values\", \"f\", [0.5]]]"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{4f51e524-33ba-4db1-a3d1-72f719aa6971}">
        <label>Manually created table</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.assertequaltable" port_format="1.1" uuid="{d35cb134-8171-4816-859d-4b3df88b0318}" x="2350.0" y="1850.0">
    <label>Assert Equal Table</label>
    <version>1.0</version>
    <description></description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "abs_tol": {
        "editor": null,
        "label": "Absolute tolerance",
        "order": 6,
        "type": "float",
        "value": 1e-08
      },
      "col_attrs": {
        "editor": null,
        "label": "Compare column attributes",
        "order": 1,
        "type": "boolean",
        "value": true
      },
      "col_order": {
        "editor": null,
        "label": "Compare column order",
        "order": 0,
        "type": "boolean",
        "value": true
      },
      "inexact_float": {
        "editor": null,
        "label": "Approximate comparison of floats",
        "order": 4,
        "type": "boolean",
        "value": false
      },
      "rel_tol": {
        "editor": null,
        "label": "Relative tolerance",
        "order": 5,
        "type": "float",
        "value": 1e-05
      },
      "tbl_attrs": {
        "editor": null,
        "label": "Compare table attributes",
        "order": 3,
        "type": "boolean",
        "value": true
      },
      "tbl_names": {
        "editor": null,
        "label": "Compare table names",
        "order": 2,
        "type": "boolean",
        "value": true
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{a0967ac5-3727-4ee4-b1ff-ec1c222e2a5a}">
        <label>Table A</label>
      </input>
      <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{ca1db831-b5fc-4ad2-b34a-cf4208cee837}">
        <label>Table B</label>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{9daed356-028d-4714-8b36-2dc3b3478cc3}">
        <label>Output Table</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.assertequaltable" port_format="1.1" uuid="{ec6c91f2-05dd-4e51-b6b8-d64e0a0b4614}" x="2500.0" y="1925.0">
    <label>Assert Equal Table</label>
    <version>1.0</version>
    <description></description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "abs_tol": {
        "editor": null,
        "label": "Absolute tolerance",
        "order": 6,
        "type": "float",
        "value": 1e-08
      },
      "col_attrs": {
        "editor": null,
        "label": "Compare column attributes",
        "order": 1,
        "type": "boolean",
        "value": true
      },
      "col_order": {
        "editor": null,
        "label": "Compare column order",
        "order": 0,
        "type": "boolean",
        "value": true
      },
      "inexact_float": {
        "editor": null,
        "label": "Approximate comparison of floats",
        "order": 4,
        "type": "boolean",
        "value": false
      },
      "rel_tol": {
        "editor": null,
        "label": "Relative tolerance",
        "order": 5,
        "type": "float",
        "value": 1e-05
      },
      "tbl_attrs": {
        "editor": null,
        "label": "Compare table attributes",
        "order": 3,
        "type": "boolean",
        "value": true
      },
      "tbl_names": {
        "editor": null,
        "label": "Compare table names",
        "order": 2,
        "type": "boolean",
        "value": true
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{a980d58a-2481-4582-a922-5bb0782b02f9}">
        <label>Table A</label>
      </input>
      <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{05657d43-0fd1-4828-8079-e24f31c618ba}">
        <label>Table B</label>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{236b244b-3489-417e-92db-6bb858f4e05a}">
        <label>Output Table</label>
      </output>
    </ports>
  </node>
  <connection type="[table]" uuid="{069ca036-1f51-40c7-b979-a456525a9102}">
    <source node="{e6e00dfe-fc7a-4b02-87d7-e2a037f8c776}" port="{0ff04455-e40b-43b6-9f97-085613e41d08}"/>
    <destination node="{50b9d251-5ef6-45e6-989e-732b1e131183}" port="{0ef1596d-2748-4263-b881-49672cec40f7}"/>
  </connection>
  <connection type="table" uuid="{163f441f-2f2c-4d32-bb0a-36456f471145}">
    <source node="{8e3d3708-53cd-42ad-bea6-173ce5684533}" port="{ede95145-6fee-4f1a-a2a7-555f0b952a07}"/>
    <destination node="{ec6c91f2-05dd-4e51-b6b8-d64e0a0b4614}" port="{05657d43-0fd1-4828-8079-e24f31c618ba}"/>
  </connection>
  <connection type="[table]" uuid="{1d264685-5ed8-4a56-b22b-4b31984ffacc}">
    <source node="{24698758-62c2-426e-a86b-a52eaac03a52}" port="{3f36c315-36e1-496b-9059-dc443fd9cb80}"/>
    <destination node="{8e3d3708-53cd-42ad-bea6-173ce5684533}" port="{e68c0244-d706-48dd-b5af-283b0ee76d1f}"/>
  </connection>
  <connection type="table" uuid="{1ff9094a-ab38-48b2-9683-d09616b2de07}">
    <source node="{c5f1c2e6-738c-41bd-967f-82666a178ea3}" port="{4f51e524-33ba-4db1-a3d1-72f719aa6971}"/>
    <destination node="{24698758-62c2-426e-a86b-a52eaac03a52}" port="{f7c8978c-f1f6-4235-9a03-d54f9efea167}"/>
  </connection>
  <connection type="table" uuid="{23594899-a33c-4397-8fd8-6dd91485a5ce}">
    <source node="{81547650-3f7c-4101-a1c4-bba8d470cecd}" port="{058c3f25-ea76-4f9b-9435-42f043fd8d52}"/>
    <destination node="{d35cb134-8171-4816-859d-4b3df88b0318}" port="{ca1db831-b5fc-4ad2-b34a-cf4208cee837}"/>
  </connection>
  <connection type="[table]" uuid="{2a36a425-eecc-4f8e-92da-c1dca5b7ede1}">
    <source node="{1aebd843-abac-401f-ba0a-e6b455b3e926}" port="{484fbc1f-3750-4672-8d88-38d2de8f7257}"/>
    <destination node="{5071ab2f-41af-451a-8fba-5640e0c4dd3d}" port="{c42b423e-2119-49b8-b255-fb2bdc071e13}"/>
  </connection>
  <connection type="table" uuid="{2e12a75a-33fd-4e3b-8edd-307d00bbacb6}">
    <source node="{8954650b-3770-445f-b258-60240376d998}" port="{f20e12bc-eb95-49dc-902d-70f87ec8d4d1}"/>
    <destination node="{e6e00dfe-fc7a-4b02-87d7-e2a037f8c776}" port="{987b5044-ec70-44b6-952f-1a204f11b54e}"/>
  </connection>
  <connection type="table" uuid="{31266a0b-5614-4b95-b384-ad341325d393}">
    <source node="{8db57f3f-6b17-4a9d-ae7f-8d7703f29d17}" port="{09add8d1-cb6b-46a7-b893-238d9cecd6c1}"/>
    <destination node="{b54667c7-12e1-4ad6-b99c-277272850dd1}" port="{c3168f7f-04f2-4a11-a355-b8514d2a5e37}"/>
  </connection>
  <connection type="table" uuid="{3f4c756e-1b1e-4fae-ac18-d54f13dc253a}">
    <source node="{b54667c7-12e1-4ad6-b99c-277272850dd1}" port="{90b117a3-414a-40f5-aaba-4c51c85b9af8}"/>
    <destination node="{1335d26b-32d4-4b83-9d18-56d4d7f85a77}" port="{180299d4-63a9-4320-9cc1-9b096407d192}"/>
  </connection>
  <connection type="[table]" uuid="{52a43ece-0b0b-4ba8-977e-25b0f6a90565}">
    <source node="{9a94b169-a87e-4b72-9b52-e5673b177fad}" port="{41ae774e-a9e8-40b6-9031-ebd7966f5584}"/>
    <destination node="{1aebd843-abac-401f-ba0a-e6b455b3e926}" port="{371e8c7e-6124-4db2-93be-15e87185e863}"/>
  </connection>
  <connection type="table" uuid="{5669b159-5a39-497c-9218-94404f0dd2cd}">
    <source node="{7ce86c27-5c33-470a-847e-40f4e94419a4}" port="{25639b2f-67f7-49bc-888e-fa2bfc5771db}"/>
    <destination node="{81547650-3f7c-4101-a1c4-bba8d470cecd}" port="{9df6d594-b3fb-46aa-be55-8d18b861b84c}"/>
  </connection>
  <connection type="table" uuid="{7b09ef78-41fd-4427-ac3e-20f6ee3871de}">
    <source node="{d35cb134-8171-4816-859d-4b3df88b0318}" port="{9daed356-028d-4714-8b36-2dc3b3478cc3}"/>
    <destination node="{ec6c91f2-05dd-4e51-b6b8-d64e0a0b4614}" port="{a980d58a-2481-4582-a922-5bb0782b02f9}"/>
  </connection>
  <connection type="table" uuid="{7f80b9f5-bb40-476e-8a45-0798a02225ae}">
    <source node="{7ce86c27-5c33-470a-847e-40f4e94419a4}" port="{25639b2f-67f7-49bc-888e-fa2bfc5771db}"/>
    <destination node="{6ff51948-4935-4ca4-8130-de4e161e0bdd}" port="{195dca99-1857-4b83-bd93-3ab041660b62}"/>
  </connection>
  <connection type="table" uuid="{886a0a3b-9b70-4561-9f1f-2582095a5b26}">
    <source node="{6ff51948-4935-4ca4-8130-de4e161e0bdd}" port="{956f0f3d-5bc3-4fb8-b26b-fd207525092c}"/>
    <destination node="{d35cb134-8171-4816-859d-4b3df88b0318}" port="{a0967ac5-3727-4ee4-b1ff-ec1c222e2a5a}"/>
  </connection>
  <connection type="table" uuid="{8e19c109-07a5-4eb0-a0f6-7cda0030c93f}">
    <source node="{7ce86c27-5c33-470a-847e-40f4e94419a4}" port="{25639b2f-67f7-49bc-888e-fa2bfc5771db}"/>
    <destination node="{b181ddea-cb1f-4f69-a272-729c19b4b29f}" port="{404d81e9-bc24-41b1-bd50-4b5e452cc71d}"/>
  </connection>
  <connection type="[table]" uuid="{9baf61ba-47eb-4d63-bbdf-023a08f415f5}">
    <source node="{56ac743c-4391-44ed-b233-8cd4df79e1b6}" port="{3cbf5977-5024-41e8-a016-244a792f3885}"/>
    <destination node="{8db57f3f-6b17-4a9d-ae7f-8d7703f29d17}" port="{e01901e8-7d90-45e0-95b4-d5dc79aab7a9}"/>
  </connection>
  <connection type="table" uuid="{a67e4bc6-169a-4218-bc77-ee5ce0bdbcd4}">
    <source node="{5071ab2f-41af-451a-8fba-5640e0c4dd3d}" port="{84599894-8917-49e1-b0f3-d81a605bdb8a}"/>
    <destination node="{1335d26b-32d4-4b83-9d18-56d4d7f85a77}" port="{36cbc099-db5b-4743-b951-b7a2ef5f0391}"/>
  </connection>
  <connection type="table" uuid="{b19fcdb9-2289-408f-a3aa-14b1eb206c07}">
    <source node="{c5f1c2e6-738c-41bd-967f-82666a178ea3}" port="{4f51e524-33ba-4db1-a3d1-72f719aa6971}"/>
    <destination node="{81547650-3f7c-4101-a1c4-bba8d470cecd}" port="{35e826d6-1af0-4808-a301-72dc72082245}"/>
  </connection>
  <connection type="table" uuid="{b2bf9822-0998-4a14-9d4f-b1758fec101b}">
    <source node="{8a1304fb-68af-4005-b1d3-1eba7cd720e8}" port="{7f32b7c5-4188-44cb-bb90-06ad2f5b4e6d}"/>
    <destination node="{7ce86c27-5c33-470a-847e-40f4e94419a4}" port="{db5f9df7-a003-428e-affa-deac1830d8b7}"/>
  </connection>
  <connection type="table" uuid="{b49f0319-4218-4736-af1e-4b269bf8fbda}">
    <source node="{c5f1c2e6-738c-41bd-967f-82666a178ea3}" port="{4f51e524-33ba-4db1-a3d1-72f719aa6971}"/>
    <destination node="{6ff51948-4935-4ca4-8130-de4e161e0bdd}" port="{231d289c-f251-4c54-ad11-bb225ddc6a78}"/>
  </connection>
  <connection type="table" uuid="{b92e23db-1e1d-41a7-94b1-6b3f9cacf853}">
    <source node="{8bc7b41e-81e3-4d8b-bd07-cbdb5a055026}" port="{2f0cbd0a-a8a3-4940-9861-c912f7dfb963}"/>
    <destination node="{1aebd843-abac-401f-ba0a-e6b455b3e926}" port="{947fef68-77da-463b-a6a8-3bbf54a8d6c6}"/>
  </connection>
  <connection type="[table]" uuid="{c6a868db-ac8c-4f73-859c-301bd36ae77f}">
    <source node="{3f5c5b39-d415-4fb6-963e-331d4955e1a0}" port="{4654d96c-732d-4113-ad71-0f9ed388e90d}"/>
    <destination node="{e6e00dfe-fc7a-4b02-87d7-e2a037f8c776}" port="{c9d3cbe1-9d95-4592-adb7-237f50021545}"/>
  </connection>
  <connection type="table" uuid="{d1da4218-7a1a-4a10-b7ae-112b9511e284}">
    <source node="{f872d99c-d457-4072-b213-f4ffb0c0e1b5}" port="{b62f9206-8425-4ef8-8663-bcbf9a9e2ab2}"/>
    <destination node="{56ac743c-4391-44ed-b233-8cd4df79e1b6}" port="{db42fa9d-fbe8-47ee-aa76-22eb28d3db8e}"/>
  </connection>
  <connection type="[table]" uuid="{d2d4fa09-f4aa-40a1-b1fc-d7a557b41128}">
    <source node="{b181ddea-cb1f-4f69-a272-729c19b4b29f}" port="{5b01d838-40aa-4d23-bf7a-9156261fc7de}"/>
    <destination node="{24698758-62c2-426e-a86b-a52eaac03a52}" port="{9c96a732-61f6-46ea-bdbb-473f07614f64}"/>
  </connection>
  <connection type="[table]" uuid="{d345305b-0428-4029-8787-5a7580968942}">
    <source node="{1ae68688-a710-476e-87eb-caed33710605}" port="{d2987301-20ab-48d1-9d07-66ae39f2bc10}"/>
    <destination node="{56ac743c-4391-44ed-b233-8cd4df79e1b6}" port="{f522726e-1b62-4735-8a55-1d67024dfe7d}"/>
  </connection>
  <connection type="table" uuid="{dd86778e-e61f-4497-a784-ba63739d7002}">
    <source node="{50b9d251-5ef6-45e6-989e-732b1e131183}" port="{2c5ec85a-9147-4f8c-9140-53ba5be3ce74}"/>
    <destination node="{b54667c7-12e1-4ad6-b99c-277272850dd1}" port="{2d5edf99-371e-4e24-81a8-db7584eaa611}"/>
  </connection>
  <text color="Beige" height="475.0" uuid="{6bce982a-b50b-493d-ac54-25ea7755e149}" width="875.0" x="1750.0" y="1700.0">Test using text operator 'less than' and symbol operator &lt;

Also test list version of the node</text>
  <text color="Beige" height="250.0" uuid="{c12a0240-52ac-4019-88d4-6e24ed916f38}" width="500.0" x="1750.0" y="2225.0">Test all different column data types (evaluate values = old default)</text>
  <text color="Beige" height="250.0" uuid="{6b98e661-a01a-460e-9b44-29cea0c36131}" width="500.0" x="1750.0" y="2500.0">Test all different column data types (don't evaluate values = new default)</text>
  <text color="Beige" height="250.0" uuid="{b02c8d42-ff4b-40fb-849f-6530af27e942}" width="500.0" x="1750.0" y="2775.0">Test all different column data types (don't evaluate values = new default)
Process string values according to target column type.</text>
</flow>
