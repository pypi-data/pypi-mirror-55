<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" uuid="{2b63770d-0c0d-4224-a5ee-79aed62a99c6}">
  <label></label>
  <ports/>
  <flow cls="Flow" uuid="{36615ba6-a502-4997-ba87-ce26b00a0d2f}" x="2250.0" y="1925.0">
    <label>Assert Equal Tables</label>
    <ports>
      <input index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{8d156e41-6e3d-4cf4-8844-6b0149b39efe}" x="1900.0" y="2237.5">
        <label>Port</label>
      </input>
      <input index="1" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{f868458f-29b5-4733-92c8-da9c856d06f1}" x="1900.0" y="2312.5">
        <label>Port</label>
      </input>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{ab132818-91c6-47bd-b757-7f58164e0388}" x="2250.0" y="2275.0">
        <label>Port</label>
      </output>
    </ports>
    <flow cls="Lambda" uuid="{f2c93115-4f1e-4754-b36d-8272051b8d77}" x="2000.0" y="2175.0">
      <label>Assert Equal Table</label>
      <ports>
        <input index="0" key="Port" parent="False" scheme="hdf5" type="(table, table)" uuid="{2ac43382-a181-4c11-a44a-5f2f66fd06e4}" x="1650.0" y="2000.0">
          <label>Port</label>
        </input>
        <output index="0" key="Port" parent="False" scheme="hdf5" type="table" uuid="{8914ea74-0e8a-4a1a-b441-e88e510d7589}" x="2050.0" y="2000.0">
          <label>Port</label>
        </output>
      </ports>
      <basic_ports>
        <output key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt;" uuid="{c3a94b3c-a2d1-403c-8d29-de9709c0d6c2}">
          <label>Lambda function</label>
        </output>
      </basic_ports>
      <node id="org.sysess.sympathy.tuple.untuple2" port_format="1.1" uuid="{b8176fa2-c1aa-433b-88ec-ebdb1cfd81e5}" x="1800.0" y="2000.0">
        <label>Untuple</label>
        <version>1.0</version>
        <description></description>
        <author>Erik der Hagopian</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">{"type": "group"}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="(table, table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{fb2ecf29-eaaa-43ad-922e-2bc1461bd6f4}">
            <label>Input</label>
          </input>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{02e65f54-fa0e-4b10-ae96-1f0d68c1285a}">
            <label>Output</label>
          </output>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{86e0625f-68b7-46dd-9cac-81ccf43bb1c7}">
            <label>Output</label>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.data.table.assertequaltable" port_format="1.1" uuid="{d1901c30-941d-4416-abf6-bf4b06a50b6a}" x="1925.0" y="2000.0">
        <label>Assert Equal Table</label>
        <version>1.0</version>
        <description></description>
        <author>Magnus Sand&#233;n</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">
        {
          "abs_tol": {
            "editor": null,
            "label": "Absolute tolerance",
            "order": 6,
            "type": "float",
            "value": 1e-08
          },
          "col_attrs": {
            "editor": null,
            "label": "Compare column attributes",
            "order": 1,
            "type": "boolean",
            "value": true
          },
          "col_order": {
            "editor": null,
            "label": "Compare column order",
            "order": 0,
            "type": "boolean",
            "value": true
          },
          "inexact_float": {
            "editor": null,
            "label": "Approximate comparison of floats",
            "order": 4,
            "type": "boolean",
            "value": false
          },
          "rel_tol": {
            "editor": null,
            "label": "Relative tolerance",
            "order": 5,
            "type": "float",
            "value": 1e-05
          },
          "tbl_attrs": {
            "editor": null,
            "label": "Compare table attributes",
            "order": 3,
            "type": "boolean",
            "value": true
          },
          "tbl_names": {
            "editor": null,
            "label": "Compare table names",
            "order": 2,
            "type": "boolean",
            "value": true
          },
          "type": "group"
        }
        </parameters>
        <ports>
          <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{cd9b01e8-e667-41bb-ab47-eedd5da6e252}">
            <label>Table A</label>
          </input>
          <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{0571faeb-d185-45ec-a438-f4e23cd1bb4b}">
            <label>Table B</label>
          </input>
          <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{71c3231f-f0a3-4053-a3b9-8e70776ec0ff}">
            <label>Output Table</label>
          </output>
        </ports>
      </node>
      <connection type="table" uuid="{07eff97d-206f-47e5-8bb8-2b7145e4152f}">
        <source node="{b8176fa2-c1aa-433b-88ec-ebdb1cfd81e5}" port="{02e65f54-fa0e-4b10-ae96-1f0d68c1285a}"/>
        <destination node="{d1901c30-941d-4416-abf6-bf4b06a50b6a}" port="{cd9b01e8-e667-41bb-ab47-eedd5da6e252}"/>
      </connection>
      <connection type="(table, table)" uuid="{2bb6df6e-014b-4bde-aa35-4e18422fc3c1}">
        <source node="{f2c93115-4f1e-4754-b36d-8272051b8d77}" port="{2ac43382-a181-4c11-a44a-5f2f66fd06e4}"/>
        <destination node="{b8176fa2-c1aa-433b-88ec-ebdb1cfd81e5}" port="{fb2ecf29-eaaa-43ad-922e-2bc1461bd6f4}"/>
      </connection>
      <connection type="table" uuid="{a5635b83-77a9-4fd2-b333-189e6f9e20d6}">
        <source node="{d1901c30-941d-4416-abf6-bf4b06a50b6a}" port="{71c3231f-f0a3-4053-a3b9-8e70776ec0ff}"/>
        <destination node="{f2c93115-4f1e-4754-b36d-8272051b8d77}" port="{8914ea74-0e8a-4a1a-b441-e88e510d7589}"/>
      </connection>
      <connection type="table" uuid="{e026faad-5d6a-4956-8933-2d92611d077b}">
        <source node="{b8176fa2-c1aa-433b-88ec-ebdb1cfd81e5}" port="{86e0625f-68b7-46dd-9cac-81ccf43bb1c7}"/>
        <destination node="{d1901c30-941d-4416-abf6-bf4b06a50b6a}" port="{0571faeb-d185-45ec-a438-f4e23cd1bb4b}"/>
      </connection>
    </flow>
    <node id="org.sysess.builtin.map" port_format="1.1" uuid="{b19aa89a-2da0-4211-8aa0-dbd8c5356ade}" x="2150.0" y="2275.0">
      <label>Map</label>
      <version>1.0</version>
      <description>Map Lambda function over each element in argument list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "fail_strategy": {
          "editor": {
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Action on exception",
          "list": ["Error", "Create Empty Item", "Skip Item"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": []
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{68da9e07-b1a9-4a13-8069-55363fe31e5f}">
          <label>Lambda Function to Map</label>
        </input>
        <input key="List" scheme="hdf5" type="[(table, table)]" type_base="[&lt;a&gt;]" uuid="{560e7023-d8e7-438d-83c0-d25ab991cb88}">
          <label>Argument List</label>
        </input>
        <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{269af2fb-2c26-4f84-8672-56b5b5716097}">
          <label>Output List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{b27c52ed-81fa-4070-ac53-2b14e5bf3673}" x="2000.0" y="2275.0">
      <label>Zip Tuple</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{343668ad-0a60-4921-8ce0-30e3c75e9edd}">
          <label>Input</label>
        </input>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{100a0800-ad8a-48b2-bf3c-ff72413ce392}">
          <label>Input</label>
        </input>
        <output key="output" scheme="hdf5" type="[(table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{bf9f2be6-91b9-4714-9121-025b45499741}">
          <label>Output</label>
        </output>
      </ports>
    </node>
    <connection type="[table]" uuid="{03f532c2-1031-4884-87ce-3c406b0fe86c}">
      <source node="{b19aa89a-2da0-4211-8aa0-dbd8c5356ade}" port="{269af2fb-2c26-4f84-8672-56b5b5716097}"/>
      <destination node="{36615ba6-a502-4997-ba87-ce26b00a0d2f}" port="{ab132818-91c6-47bd-b757-7f58164e0388}"/>
    </connection>
    <connection type="[table]" uuid="{27decef8-417c-4f4e-9a82-b9f83148a163}">
      <source node="{36615ba6-a502-4997-ba87-ce26b00a0d2f}" port="{f868458f-29b5-4733-92c8-da9c856d06f1}"/>
      <destination node="{b27c52ed-81fa-4070-ac53-2b14e5bf3673}" port="{100a0800-ad8a-48b2-bf3c-ff72413ce392}"/>
    </connection>
    <connection type="[table]" uuid="{8380c10e-b48d-438d-96d4-f05b9736c618}">
      <source node="{36615ba6-a502-4997-ba87-ce26b00a0d2f}" port="{8d156e41-6e3d-4cf4-8844-6b0149b39efe}"/>
      <destination node="{b27c52ed-81fa-4070-ac53-2b14e5bf3673}" port="{343668ad-0a60-4921-8ce0-30e3c75e9edd}"/>
    </connection>
    <connection type="[(table, table)]" uuid="{aafffaec-0ff6-47ad-bc7d-9ad653f9e22c}">
      <source node="{b27c52ed-81fa-4070-ac53-2b14e5bf3673}" port="{bf9f2be6-91b9-4714-9121-025b45499741}"/>
      <destination node="{b19aa89a-2da0-4211-8aa0-dbd8c5356ade}" port="{560e7023-d8e7-438d-83c0-d25ab991cb88}"/>
    </connection>
    <connection type="(table, table) -&gt; table" uuid="{fe3edff3-6e17-422e-80c8-67476122df2a}">
      <source node="{f2c93115-4f1e-4754-b36d-8272051b8d77}" port="{c3a94b3c-a2d1-403c-8d29-de9709c0d6c2}"/>
      <destination node="{b19aa89a-2da0-4211-8aa0-dbd8c5356ade}" port="{68da9e07-b1a9-4a13-8069-55363fe31e5f}"/>
    </connection>
  </flow>
  <flow cls="Flow" uuid="{579ff6f4-06d4-46b1-9ef9-0abf4fb26663}" x="2250.0" y="2100.0">
    <label>Assert Equal Tables</label>
    <ports>
      <input index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{e6b884b0-6a68-40fd-8229-c52287425f1a}" x="1900.0" y="2237.5">
        <label>Port</label>
      </input>
      <input index="1" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{9b7e011c-3d26-43a5-ad6c-937d98028946}" x="1900.0" y="2312.5">
        <label>Port</label>
      </input>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{d6c9f3c6-eba9-488a-91d1-7dd886058328}" x="2250.0" y="2275.0">
        <label>Port</label>
      </output>
    </ports>
    <flow cls="Lambda" uuid="{d924fc03-f64a-46aa-b2b6-eda08c1883fb}" x="2000.0" y="2175.0">
      <label>Assert Equal Table</label>
      <ports>
        <input index="0" key="Port" parent="False" scheme="hdf5" type="(table, table)" uuid="{5e0f658f-25ad-449e-9877-bb584d7e1e57}" x="1650.0" y="2000.0">
          <label>Port</label>
        </input>
        <output index="0" key="Port" parent="False" scheme="hdf5" type="table" uuid="{9ca06168-fa0c-4feb-aa3b-b9927c948b5e}" x="2050.0" y="2000.0">
          <label>Port</label>
        </output>
      </ports>
      <basic_ports>
        <output key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt;" uuid="{010e821e-3d99-4cd8-a688-b29ed2d0de57}">
          <label>Lambda function</label>
        </output>
      </basic_ports>
      <node id="org.sysess.sympathy.tuple.untuple2" port_format="1.1" uuid="{2a52264f-c50d-438f-b7bc-26a16e0a1275}" x="1800.0" y="2000.0">
        <label>Untuple</label>
        <version>1.0</version>
        <description></description>
        <author>Erik der Hagopian</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">{"type": "group"}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="(table, table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{8eb7bf79-d275-4be9-851b-67487f32505f}">
            <label>Input</label>
          </input>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{5023f0c0-4472-42b7-8228-3ecd5f71c81b}">
            <label>Output</label>
          </output>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{e02b590a-7bba-4cad-94a2-6e9e1cbf2e01}">
            <label>Output</label>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.data.table.assertequaltable" port_format="1.1" uuid="{a3643ca7-aad1-4a3f-9936-23dd19ec6f38}" x="1925.0" y="2000.0">
        <label>Assert Equal Table</label>
        <version>1.0</version>
        <description></description>
        <author>Magnus Sand&#233;n</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">
        {
          "abs_tol": {
            "editor": null,
            "label": "Absolute tolerance",
            "order": 6,
            "type": "float",
            "value": 1e-08
          },
          "col_attrs": {
            "editor": null,
            "label": "Compare column attributes",
            "order": 1,
            "type": "boolean",
            "value": true
          },
          "col_order": {
            "editor": null,
            "label": "Compare column order",
            "order": 0,
            "type": "boolean",
            "value": true
          },
          "inexact_float": {
            "editor": null,
            "label": "Approximate comparison of floats",
            "order": 4,
            "type": "boolean",
            "value": false
          },
          "rel_tol": {
            "editor": null,
            "label": "Relative tolerance",
            "order": 5,
            "type": "float",
            "value": 1e-05
          },
          "tbl_attrs": {
            "editor": null,
            "label": "Compare table attributes",
            "order": 3,
            "type": "boolean",
            "value": true
          },
          "tbl_names": {
            "editor": null,
            "label": "Compare table names",
            "order": 2,
            "type": "boolean",
            "value": true
          },
          "type": "group"
        }
        </parameters>
        <ports>
          <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{5a484fdc-75eb-4f9a-8c40-f86cbc9dfbb1}">
            <label>Table A</label>
          </input>
          <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{8c6c871e-3c8d-42b7-af10-e1bdaa09e249}">
            <label>Table B</label>
          </input>
          <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{10295b68-af13-405d-9b5c-a370b6e90cb8}">
            <label>Output Table</label>
          </output>
        </ports>
      </node>
      <connection type="table" uuid="{02e71612-9c59-45a3-a7c3-26e11c898a34}">
        <source node="{2a52264f-c50d-438f-b7bc-26a16e0a1275}" port="{e02b590a-7bba-4cad-94a2-6e9e1cbf2e01}"/>
        <destination node="{a3643ca7-aad1-4a3f-9936-23dd19ec6f38}" port="{8c6c871e-3c8d-42b7-af10-e1bdaa09e249}"/>
      </connection>
      <connection type="table" uuid="{0487c94c-beec-4b7b-b2a8-d129f412ff14}">
        <source node="{a3643ca7-aad1-4a3f-9936-23dd19ec6f38}" port="{10295b68-af13-405d-9b5c-a370b6e90cb8}"/>
        <destination node="{d924fc03-f64a-46aa-b2b6-eda08c1883fb}" port="{9ca06168-fa0c-4feb-aa3b-b9927c948b5e}"/>
      </connection>
      <connection type="(table, table)" uuid="{0c3d8877-d0f4-49d4-a0b2-42eac0b40270}">
        <source node="{d924fc03-f64a-46aa-b2b6-eda08c1883fb}" port="{5e0f658f-25ad-449e-9877-bb584d7e1e57}"/>
        <destination node="{2a52264f-c50d-438f-b7bc-26a16e0a1275}" port="{8eb7bf79-d275-4be9-851b-67487f32505f}"/>
      </connection>
      <connection type="table" uuid="{c11ebe0c-26c3-4c62-b605-51ccefed452a}">
        <source node="{2a52264f-c50d-438f-b7bc-26a16e0a1275}" port="{5023f0c0-4472-42b7-8228-3ecd5f71c81b}"/>
        <destination node="{a3643ca7-aad1-4a3f-9936-23dd19ec6f38}" port="{5a484fdc-75eb-4f9a-8c40-f86cbc9dfbb1}"/>
      </connection>
    </flow>
    <node id="org.sysess.builtin.map" port_format="1.1" uuid="{49fdc537-199c-4a44-af9c-8e70981c16c2}" x="2150.0" y="2275.0">
      <label>Map</label>
      <version>1.0</version>
      <description>Map Lambda function over each element in argument list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "fail_strategy": {
          "editor": {
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Action on exception",
          "list": ["Error", "Create Empty Item", "Skip Item"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": []
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{1b39e467-c84d-437f-89fc-7448aac74c8f}">
          <label>Lambda Function to Map</label>
        </input>
        <input key="List" scheme="hdf5" type="[(table, table)]" type_base="[&lt;a&gt;]" uuid="{76e28401-53b7-405a-b69a-deb69c69374e}">
          <label>Argument List</label>
        </input>
        <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{ad4272ab-7340-4000-8f9c-38a2bdd66bac}">
          <label>Output List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{b45003df-67c2-4a80-984f-b8613d774156}" x="2000.0" y="2275.0">
      <label>Zip Tuple</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{a792f10f-9ae8-4918-861d-bf528ce54488}">
          <label>Input</label>
        </input>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{89cf8df3-04f2-40f1-bb0d-c6f4a062dc0f}">
          <label>Input</label>
        </input>
        <output key="output" scheme="hdf5" type="[(table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{2e552a8e-1b8b-486a-8a9c-e0cbe9ea929d}">
          <label>Output</label>
        </output>
      </ports>
    </node>
    <connection type="[(table, table)]" uuid="{2ce40bc2-10a8-41c6-876d-c57246f8dc31}">
      <source node="{b45003df-67c2-4a80-984f-b8613d774156}" port="{2e552a8e-1b8b-486a-8a9c-e0cbe9ea929d}"/>
      <destination node="{49fdc537-199c-4a44-af9c-8e70981c16c2}" port="{76e28401-53b7-405a-b69a-deb69c69374e}"/>
    </connection>
    <connection type="[table]" uuid="{585aa346-4cf7-431f-9a97-30e85f405143}">
      <source node="{49fdc537-199c-4a44-af9c-8e70981c16c2}" port="{ad4272ab-7340-4000-8f9c-38a2bdd66bac}"/>
      <destination node="{579ff6f4-06d4-46b1-9ef9-0abf4fb26663}" port="{d6c9f3c6-eba9-488a-91d1-7dd886058328}"/>
    </connection>
    <connection type="[table]" uuid="{758e6533-378d-4d0c-826e-515ffe557b0e}">
      <source node="{579ff6f4-06d4-46b1-9ef9-0abf4fb26663}" port="{9b7e011c-3d26-43a5-ad6c-937d98028946}"/>
      <destination node="{b45003df-67c2-4a80-984f-b8613d774156}" port="{89cf8df3-04f2-40f1-bb0d-c6f4a062dc0f}"/>
    </connection>
    <connection type="(table, table) -&gt; table" uuid="{97d2057f-d4a5-4a6d-9629-1d1bf7081be7}">
      <source node="{d924fc03-f64a-46aa-b2b6-eda08c1883fb}" port="{010e821e-3d99-4cd8-a688-b29ed2d0de57}"/>
      <destination node="{49fdc537-199c-4a44-af9c-8e70981c16c2}" port="{1b39e467-c84d-437f-89fc-7448aac74c8f}"/>
    </connection>
    <connection type="[table]" uuid="{ea14859d-eb95-4288-a4e3-3ee2c18ad5c7}">
      <source node="{579ff6f4-06d4-46b1-9ef9-0abf4fb26663}" port="{e6b884b0-6a68-40fd-8229-c52287425f1a}"/>
      <destination node="{b45003df-67c2-4a80-984f-b8613d774156}" port="{a792f10f-9ae8-4918-861d-bf528ce54488}"/>
    </connection>
  </flow>
  <flow cls="Flow" uuid="{5df33b17-8f1f-4082-a306-c322ffa359bf}" x="1950.0" y="2100.0">
    <label>Filter tangent</label>
    <ports>
      <input index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{9e6512fb-102b-42e7-bc28-6aac77a22605}" x="1800.0" y="2000.0">
        <label>Port</label>
      </input>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{924ec491-5278-4e29-bb6a-d4533d7ef0ac}" x="2150.0" y="2075.0">
        <label>Port</label>
      </output>
    </ports>
    <flow cls="Flow" uuid="{39182c3d-9865-40d6-9649-b42ce09813b1}" x="2050.0" y="2075.0">
      <label>Assert Equal Tables</label>
      <ports>
        <input index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{8753aa64-9515-4ae9-94ba-47c8e315c23a}" x="1900.0" y="2237.5">
          <label>Port</label>
        </input>
        <input index="1" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{924f563f-d4fd-461e-bc58-1836d2df12c6}" x="1900.0" y="2312.5">
          <label>Port</label>
        </input>
        <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{d87f323d-8aa3-4bec-b9b9-ede5888f7893}" x="2250.0" y="2275.0">
          <label>Port</label>
        </output>
      </ports>
      <flow cls="Lambda" uuid="{3a5c48d7-7728-405c-a523-4cf12b580360}" x="2000.0" y="2175.0">
        <label>Assert Equal Table</label>
        <ports>
          <input index="0" key="Port" parent="False" scheme="hdf5" type="(table, table)" uuid="{68680029-3c5d-42e8-aefa-09da701ab1e5}" x="1650.0" y="2000.0">
            <label>Port</label>
          </input>
          <output index="0" key="Port" parent="False" scheme="hdf5" type="table" uuid="{07ae60dc-de00-4398-8b1b-a14af61489ae}" x="2050.0" y="2000.0">
            <label>Port</label>
          </output>
        </ports>
        <basic_ports>
          <output key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt;" uuid="{8a62a7c3-1f78-4f45-8a27-8c39ee755327}">
            <label>Lambda function</label>
          </output>
        </basic_ports>
        <node id="org.sysess.sympathy.tuple.untuple2" port_format="1.1" uuid="{34de537d-459f-4edd-85f3-44a020bee1d5}" x="1800.0" y="2000.0">
          <label>Untuple</label>
          <version>1.0</version>
          <description></description>
          <author>Erik der Hagopian</author>
          <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
          <parameters type="json">{"type": "group"}</parameters>
          <ports>
            <input key="input" scheme="hdf5" type="(table, table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{bbd9465e-a0b4-46fd-a898-68811f00fff1}">
              <label>Input</label>
            </input>
            <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{04c4f29c-b12e-43b1-baab-d1bb8c94a2a9}">
              <label>Output</label>
            </output>
            <output key="output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{4af2731f-5dd9-4ed3-9979-e2d3ddf75988}">
              <label>Output</label>
            </output>
          </ports>
        </node>
        <node id="org.sysess.sympathy.data.table.assertequaltable" port_format="1.1" uuid="{f0c2b20a-f7c7-4247-bf34-41eda1f7c9f7}" x="1925.0" y="2000.0">
          <label>Assert Equal Table</label>
          <version>1.0</version>
          <description></description>
          <author>Magnus Sand&#233;n</author>
          <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
          <parameters type="json">
          {
            "abs_tol": {
              "editor": null,
              "label": "Absolute tolerance",
              "order": 6,
              "type": "float",
              "value": 1e-08
            },
            "col_attrs": {
              "editor": null,
              "label": "Compare column attributes",
              "order": 1,
              "type": "boolean",
              "value": true
            },
            "col_order": {
              "editor": null,
              "label": "Compare column order",
              "order": 0,
              "type": "boolean",
              "value": true
            },
            "inexact_float": {
              "editor": null,
              "label": "Approximate comparison of floats",
              "order": 4,
              "type": "boolean",
              "value": false
            },
            "rel_tol": {
              "editor": null,
              "label": "Relative tolerance",
              "order": 5,
              "type": "float",
              "value": 1e-05
            },
            "tbl_attrs": {
              "editor": null,
              "label": "Compare table attributes",
              "order": 3,
              "type": "boolean",
              "value": true
            },
            "tbl_names": {
              "editor": null,
              "label": "Compare table names",
              "order": 2,
              "type": "boolean",
              "value": true
            },
            "type": "group"
          }
          </parameters>
          <ports>
            <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{6c27f21d-497f-4a52-aea9-f863acab6d8c}">
              <label>Table A</label>
            </input>
            <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{61ce1e48-abdc-4084-a568-029d73cfc4cf}">
              <label>Table B</label>
            </input>
            <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{ce27d9c4-2608-4ad5-998b-efccfd7f2f85}">
              <label>Output Table</label>
            </output>
          </ports>
        </node>
        <connection type="table" uuid="{485fe241-8f99-49e6-9797-54f4489bd3b4}">
          <source node="{34de537d-459f-4edd-85f3-44a020bee1d5}" port="{04c4f29c-b12e-43b1-baab-d1bb8c94a2a9}"/>
          <destination node="{f0c2b20a-f7c7-4247-bf34-41eda1f7c9f7}" port="{6c27f21d-497f-4a52-aea9-f863acab6d8c}"/>
        </connection>
        <connection type="(table, table)" uuid="{6c529113-6137-41ed-bd76-e3f4f649d27d}">
          <source node="{3a5c48d7-7728-405c-a523-4cf12b580360}" port="{68680029-3c5d-42e8-aefa-09da701ab1e5}"/>
          <destination node="{34de537d-459f-4edd-85f3-44a020bee1d5}" port="{bbd9465e-a0b4-46fd-a898-68811f00fff1}"/>
        </connection>
        <connection type="table" uuid="{8f390ed9-1309-42ae-87f3-708de9b75f79}">
          <source node="{f0c2b20a-f7c7-4247-bf34-41eda1f7c9f7}" port="{ce27d9c4-2608-4ad5-998b-efccfd7f2f85}"/>
          <destination node="{3a5c48d7-7728-405c-a523-4cf12b580360}" port="{07ae60dc-de00-4398-8b1b-a14af61489ae}"/>
        </connection>
        <connection type="table" uuid="{bafdfce5-892b-423a-85de-500eb511abcb}">
          <source node="{34de537d-459f-4edd-85f3-44a020bee1d5}" port="{4af2731f-5dd9-4ed3-9979-e2d3ddf75988}"/>
          <destination node="{f0c2b20a-f7c7-4247-bf34-41eda1f7c9f7}" port="{61ce1e48-abdc-4084-a568-029d73cfc4cf}"/>
        </connection>
      </flow>
      <node id="org.sysess.builtin.map" port_format="1.1" uuid="{8361d63e-7b01-4e50-a095-d849c9c87b39}" x="2150.0" y="2275.0">
        <label>Map</label>
        <version>1.0</version>
        <description>Map Lambda function over each element in argument list</description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
        <parameters type="json">
        {
          "fail_strategy": {
            "editor": {
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Action on exception",
            "list": ["Error", "Create Empty Item", "Skip Item"],
            "mode": "selected",
            "order": 0,
            "passthrough": false,
            "type": "list",
            "value": [0],
            "value_names": []
          },
          "type": "group"
        }
        </parameters>
        <ports>
          <input key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{33354127-3f49-49b7-94bb-2108c25840e8}">
            <label>Lambda Function to Map</label>
          </input>
          <input key="List" scheme="hdf5" type="[(table, table)]" type_base="[&lt;a&gt;]" uuid="{f88d3533-7d40-4775-b0e1-1d7a16c94fba}">
            <label>Argument List</label>
          </input>
          <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{ff990872-d056-4b67-96eb-9afb1a626714}">
            <label>Output List</label>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{c363dd31-8670-4912-8c67-9f079a0bd007}" x="2000.0" y="2275.0">
        <label>Zip Tuple</label>
        <version>1.0</version>
        <description></description>
        <author>Erik der Hagopian</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">{"type": "group"}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{136e88d9-a365-44ee-b202-636ef2043465}">
            <label>Input</label>
          </input>
          <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{75f8e1ff-244b-4240-964b-473d7aa08c44}">
            <label>Input</label>
          </input>
          <output key="output" scheme="hdf5" type="[(table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{42901d65-d552-45a4-ab54-70220fa39cd5}">
            <label>Output</label>
          </output>
        </ports>
      </node>
      <connection type="(table, table) -&gt; table" uuid="{13cd6d60-33fb-47e2-92b2-68a2b9ba9d6b}">
        <source node="{3a5c48d7-7728-405c-a523-4cf12b580360}" port="{8a62a7c3-1f78-4f45-8a27-8c39ee755327}"/>
        <destination node="{8361d63e-7b01-4e50-a095-d849c9c87b39}" port="{33354127-3f49-49b7-94bb-2108c25840e8}"/>
      </connection>
      <connection type="[table]" uuid="{515b2904-0e04-482a-9519-06d9d142eed3}">
        <source node="{8361d63e-7b01-4e50-a095-d849c9c87b39}" port="{ff990872-d056-4b67-96eb-9afb1a626714}"/>
        <destination node="{39182c3d-9865-40d6-9649-b42ce09813b1}" port="{d87f323d-8aa3-4bec-b9b9-ede5888f7893}"/>
      </connection>
      <connection type="[(table, table)]" uuid="{51ee1ed0-8c55-416e-8438-756293f467b7}">
        <source node="{c363dd31-8670-4912-8c67-9f079a0bd007}" port="{42901d65-d552-45a4-ab54-70220fa39cd5}"/>
        <destination node="{8361d63e-7b01-4e50-a095-d849c9c87b39}" port="{f88d3533-7d40-4775-b0e1-1d7a16c94fba}"/>
      </connection>
      <connection type="[table]" uuid="{816fb0aa-add3-4e20-9fc9-f03d978c9e8e}">
        <source node="{39182c3d-9865-40d6-9649-b42ce09813b1}" port="{924f563f-d4fd-461e-bc58-1836d2df12c6}"/>
        <destination node="{c363dd31-8670-4912-8c67-9f079a0bd007}" port="{75f8e1ff-244b-4240-964b-473d7aa08c44}"/>
      </connection>
      <connection type="[table]" uuid="{e286a0c3-96ab-4191-92cb-ab8f4d4426f7}">
        <source node="{39182c3d-9865-40d6-9649-b42ce09813b1}" port="{8753aa64-9515-4ae9-94ba-47c8e315c23a}"/>
        <destination node="{c363dd31-8670-4912-8c67-9f079a0bd007}" port="{136e88d9-a365-44ee-b202-636ef2043465}"/>
      </connection>
    </flow>
    <node id="org.sysess.sympathy.list.filterlisttable" port_format="1.1" uuid="{38c9c1c8-2478-46c1-a287-0b6b26266964}" x="1900.0" y="2000.0">
      <label>Filter List with Table input</label>
      <version>1.0</version>
      <description>Filter a list using an incoming table.</description>
      <author>Magnus Sanden</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "filter": {
          "editor": {
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Filter column",
          "list": ["filter"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [],
          "value_names": []
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="filter" scheme="hdf5" type="table" type_base="table" uuid="{ae012cc9-5ae2-4d37-96aa-d98d700741e5}">
          <label>Filter</label>
        </input>
        <input key="in" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{da473362-97dd-40b5-b782-d85b0efdfb86}">
          <label>List of items</label>
        </input>
        <output key="out" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{659ebeb6-1871-40a7-833a-cc5a95b68571}">
          <label>Filtered list of items</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.filterlistpredicate" port_format="1.1" uuid="{a0cd635c-de05-4635-b99b-3c007743c049}" x="1750.0" y="2075.0">
      <label>Filter List Predicate</label>
      <version>1.0</version>
      <description>Filter a list using configured item based predicate.</description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "predicate": {
          "editor": {
            "language": "python",
            "type": "code"
          },
          "label": "Predicate filter function",
          "order": 0,
          "type": "string",
          "value": "lambda item: 'tangent1' in item.column_names()"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{dedc8e19-96d1-4893-b1e9-71021d63fa22}">
          <label>List</label>
        </input>
        <output key="index" scheme="hdf5" type="table" type_base="table" uuid="{cbf25b56-c776-4fc7-a079-8ea0dba39fee}">
          <label>Index</label>
        </output>
        <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{7f1bea71-c491-4a9c-be75-26f027884deb}">
          <label>List</label>
        </output>
      </ports>
    </node>
    <connection type="[table]" uuid="{7a9b748f-8f89-4ae8-8cf7-7ba98029b340}">
      <source node="{39182c3d-9865-40d6-9649-b42ce09813b1}" port="{d87f323d-8aa3-4bec-b9b9-ede5888f7893}"/>
      <destination node="{5df33b17-8f1f-4082-a306-c322ffa359bf}" port="{924ec491-5278-4e29-bb6a-d4533d7ef0ac}"/>
    </connection>
    <connection type="[table]" uuid="{7cf26c63-6de0-42b5-93c3-f0e218969786}">
      <source node="{5df33b17-8f1f-4082-a306-c322ffa359bf}" port="{9e6512fb-102b-42e7-bc28-6aac77a22605}"/>
      <destination node="{a0cd635c-de05-4635-b99b-3c007743c049}" port="{dedc8e19-96d1-4893-b1e9-71021d63fa22}"/>
    </connection>
    <connection type="table" uuid="{c55f9e31-979f-4628-a2e0-49bd1a93b272}">
      <source node="{a0cd635c-de05-4635-b99b-3c007743c049}" port="{cbf25b56-c776-4fc7-a079-8ea0dba39fee}"/>
      <destination node="{38c9c1c8-2478-46c1-a287-0b6b26266964}" port="{ae012cc9-5ae2-4d37-96aa-d98d700741e5}"/>
    </connection>
    <connection type="[table]" uuid="{ceef4cd1-53f9-4b73-b6c4-d4bd6ed96d11}">
      <source node="{a0cd635c-de05-4635-b99b-3c007743c049}" port="{7f1bea71-c491-4a9c-be75-26f027884deb}"/>
      <destination node="{39182c3d-9865-40d6-9649-b42ce09813b1}" port="{924f563f-d4fd-461e-bc58-1836d2df12c6}"/>
    </connection>
    <connection type="[table]" uuid="{d5414525-969b-453b-be98-55d481ee7626}">
      <source node="{38c9c1c8-2478-46c1-a287-0b6b26266964}" port="{659ebeb6-1871-40a7-833a-cc5a95b68571}"/>
      <destination node="{39182c3d-9865-40d6-9649-b42ce09813b1}" port="{8753aa64-9515-4ae9-94ba-47c8e315c23a}"/>
    </connection>
    <connection type="[table]" uuid="{f378c0f4-b182-4a5e-9073-421a27861a6f}">
      <source node="{5df33b17-8f1f-4082-a306-c322ffa359bf}" port="{9e6512fb-102b-42e7-bc28-6aac77a22605}"/>
      <destination node="{38c9c1c8-2478-46c1-a287-0b6b26266964}" port="{da473362-97dd-40b5-b782-d85b0efdfb86}"/>
    </connection>
  </flow>
  <flow cls="Flow" uuid="{6bd03762-d65a-4988-9076-1a11023a787c}" x="2550.0" y="2200.0">
    <label>Assert Equal Tables</label>
    <ports>
      <input index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{7d2b9019-2da0-4c60-a1c6-b47a75bfad5a}" x="1900.0" y="2237.5">
        <label>Port</label>
      </input>
      <input index="1" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{1a9d9fcf-8b69-4376-bbd2-2b3442b4475d}" x="1900.0" y="2312.5">
        <label>Port</label>
      </input>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{a7e66e6b-7eaa-41f5-859c-175f559d80e1}" x="2250.0" y="2275.0">
        <label>Port</label>
      </output>
    </ports>
    <flow cls="Lambda" uuid="{ee46aa54-aeab-4056-955a-2f67fa7ab015}" x="2000.0" y="2175.0">
      <label>Assert Equal Table</label>
      <ports>
        <input index="0" key="Port" parent="False" scheme="hdf5" type="(table, table)" uuid="{78c02342-9a39-44aa-af9e-fcf5c8fca716}" x="1650.0" y="2000.0">
          <label>Port</label>
        </input>
        <output index="0" key="Port" parent="False" scheme="hdf5" type="table" uuid="{fd5e5da7-aed3-4c2d-92c7-43cf4af776e0}" x="2050.0" y="2000.0">
          <label>Port</label>
        </output>
      </ports>
      <basic_ports>
        <output key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt;" uuid="{98413dbe-919b-4f64-adcc-a877f0d9b479}">
          <label>Lambda function</label>
        </output>
      </basic_ports>
      <node id="org.sysess.sympathy.tuple.untuple2" port_format="1.1" uuid="{33b6021a-a8e8-4bbc-90b2-9b6fbebc995a}" x="1800.0" y="2000.0">
        <label>Untuple</label>
        <version>1.0</version>
        <description></description>
        <author>Erik der Hagopian</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">{"type": "group"}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="(table, table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{b4001ec5-476a-4407-9f36-79d8e18eca7e}">
            <label>Input</label>
          </input>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{50aa3a24-df42-465e-849a-81d8149be238}">
            <label>Output</label>
          </output>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{d774caf4-5e9f-4338-9654-3092ca966574}">
            <label>Output</label>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.data.table.assertequaltable" port_format="1.1" uuid="{d0437e93-3a50-48dd-bb37-79856e6d7a77}" x="1925.0" y="2000.0">
        <label>Assert Equal Table</label>
        <version>1.0</version>
        <description></description>
        <author>Magnus Sand&#233;n</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">
        {
          "abs_tol": {
            "editor": null,
            "label": "Absolute tolerance",
            "order": 6,
            "type": "float",
            "value": 1e-08
          },
          "col_attrs": {
            "editor": null,
            "label": "Compare column attributes",
            "order": 1,
            "type": "boolean",
            "value": true
          },
          "col_order": {
            "editor": null,
            "label": "Compare column order",
            "order": 0,
            "type": "boolean",
            "value": true
          },
          "inexact_float": {
            "editor": null,
            "label": "Approximate comparison of floats",
            "order": 4,
            "type": "boolean",
            "value": false
          },
          "rel_tol": {
            "editor": null,
            "label": "Relative tolerance",
            "order": 5,
            "type": "float",
            "value": 1e-05
          },
          "tbl_attrs": {
            "editor": null,
            "label": "Compare table attributes",
            "order": 3,
            "type": "boolean",
            "value": true
          },
          "tbl_names": {
            "editor": null,
            "label": "Compare table names",
            "order": 2,
            "type": "boolean",
            "value": true
          },
          "type": "group"
        }
        </parameters>
        <ports>
          <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{9ca3a678-fe17-4c7f-86a1-237b4adc9214}">
            <label>Table A</label>
          </input>
          <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{841d2c94-9455-4072-9a8b-0729c2140d48}">
            <label>Table B</label>
          </input>
          <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{e8ed96d2-c476-49d9-bb30-f088e4d2e6e7}">
            <label>Output Table</label>
          </output>
        </ports>
      </node>
      <connection type="table" uuid="{3fc1432b-8503-4ef1-b31a-48ac02ea9a9a}">
        <source node="{33b6021a-a8e8-4bbc-90b2-9b6fbebc995a}" port="{d774caf4-5e9f-4338-9654-3092ca966574}"/>
        <destination node="{d0437e93-3a50-48dd-bb37-79856e6d7a77}" port="{841d2c94-9455-4072-9a8b-0729c2140d48}"/>
      </connection>
      <connection type="table" uuid="{57ed8cef-5ed1-48d1-9a07-f57dba45c12c}">
        <source node="{33b6021a-a8e8-4bbc-90b2-9b6fbebc995a}" port="{50aa3a24-df42-465e-849a-81d8149be238}"/>
        <destination node="{d0437e93-3a50-48dd-bb37-79856e6d7a77}" port="{9ca3a678-fe17-4c7f-86a1-237b4adc9214}"/>
      </connection>
      <connection type="(table, table)" uuid="{73defcc3-bc7e-464c-95d3-d181af6feda6}">
        <source node="{ee46aa54-aeab-4056-955a-2f67fa7ab015}" port="{78c02342-9a39-44aa-af9e-fcf5c8fca716}"/>
        <destination node="{33b6021a-a8e8-4bbc-90b2-9b6fbebc995a}" port="{b4001ec5-476a-4407-9f36-79d8e18eca7e}"/>
      </connection>
      <connection type="table" uuid="{f73f19f9-68d7-41d5-8cc0-59de59fbfe61}">
        <source node="{d0437e93-3a50-48dd-bb37-79856e6d7a77}" port="{e8ed96d2-c476-49d9-bb30-f088e4d2e6e7}"/>
        <destination node="{ee46aa54-aeab-4056-955a-2f67fa7ab015}" port="{fd5e5da7-aed3-4c2d-92c7-43cf4af776e0}"/>
      </connection>
    </flow>
    <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{b8441a8a-b02d-44a1-813d-65ea2750b15a}" x="2000.0" y="2275.0">
      <label>Zip Tuple</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{17904b07-a1c7-4280-a94b-f6d8a5a6dca0}">
          <label>Input</label>
        </input>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{ba17257c-d56e-4f5d-b72d-e8ab22ccaa9b}">
          <label>Input</label>
        </input>
        <output key="output" scheme="hdf5" type="[(table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{b17d18cd-4969-47c8-9b42-1e7a0d438b60}">
          <label>Output</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.builtin.map" port_format="1.1" uuid="{db37106a-7548-4f87-aaee-1284a9ced8b3}" x="2150.0" y="2275.0">
      <label>Map</label>
      <version>1.0</version>
      <description>Map Lambda function over each element in argument list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "fail_strategy": {
          "editor": {
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Action on exception",
          "list": ["Error", "Create Empty Item", "Skip Item"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": []
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{6f8ffbd8-ed7a-4d86-a583-daa4a349ce94}">
          <label>Lambda Function to Map</label>
        </input>
        <input key="List" scheme="hdf5" type="[(table, table)]" type_base="[&lt;a&gt;]" uuid="{1a1c6964-968b-4902-93bb-2c421381aefb}">
          <label>Argument List</label>
        </input>
        <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{7f55acd2-bdd3-46e9-9634-9fbc96241725}">
          <label>Output List</label>
        </output>
      </ports>
    </node>
    <connection type="[table]" uuid="{0ead108e-4eeb-4005-bd2b-d632846c70bd}">
      <source node="{6bd03762-d65a-4988-9076-1a11023a787c}" port="{7d2b9019-2da0-4c60-a1c6-b47a75bfad5a}"/>
      <destination node="{b8441a8a-b02d-44a1-813d-65ea2750b15a}" port="{17904b07-a1c7-4280-a94b-f6d8a5a6dca0}"/>
    </connection>
    <connection type="(table, table) -&gt; table" uuid="{adf185b0-441c-4595-adab-288814e7bc64}">
      <source node="{ee46aa54-aeab-4056-955a-2f67fa7ab015}" port="{98413dbe-919b-4f64-adcc-a877f0d9b479}"/>
      <destination node="{db37106a-7548-4f87-aaee-1284a9ced8b3}" port="{6f8ffbd8-ed7a-4d86-a583-daa4a349ce94}"/>
    </connection>
    <connection type="[table]" uuid="{c89e7338-2a6a-4c46-9ace-7f4cc7e89469}">
      <source node="{db37106a-7548-4f87-aaee-1284a9ced8b3}" port="{7f55acd2-bdd3-46e9-9634-9fbc96241725}"/>
      <destination node="{6bd03762-d65a-4988-9076-1a11023a787c}" port="{a7e66e6b-7eaa-41f5-859c-175f559d80e1}"/>
    </connection>
    <connection type="[table]" uuid="{e37a040c-77c0-4adb-bf61-b259927f4fdd}">
      <source node="{6bd03762-d65a-4988-9076-1a11023a787c}" port="{1a9d9fcf-8b69-4376-bbd2-2b3442b4475d}"/>
      <destination node="{b8441a8a-b02d-44a1-813d-65ea2750b15a}" port="{ba17257c-d56e-4f5d-b72d-e8ab22ccaa9b}"/>
    </connection>
    <connection type="[(table, table)]" uuid="{f1eb60ac-086b-47e5-a014-809a6c53df5e}">
      <source node="{b8441a8a-b02d-44a1-813d-65ea2750b15a}" port="{b17d18cd-4969-47c8-9b42-1e7a0d438b60}"/>
      <destination node="{db37106a-7548-4f87-aaee-1284a9ced8b3}" port="{1a1c6964-968b-4902-93bb-2c421381aefb}"/>
    </connection>
  </flow>
  <flow cls="Flow" uuid="{74b0314d-a209-44d1-9f8a-7b57bc2dbd35}" x="2250.0" y="1650.0">
    <label>Assert Equal Tables</label>
    <ports>
      <input index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{f036f363-8783-45f5-a121-39d0c2235948}" x="1900.0" y="2237.5">
        <label>Port</label>
      </input>
      <input index="1" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{04f9bd1e-eccb-4b87-9c7f-4be459cbc085}" x="1900.0" y="2312.5">
        <label>Port</label>
      </input>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{50cc6325-3ee6-4c06-bcec-ae3163606373}" x="2250.0" y="2275.0">
        <label>Port</label>
      </output>
    </ports>
    <flow cls="Lambda" uuid="{7c22a4b8-5911-435f-a46b-0cf111e2b0a0}" x="2000.0" y="2175.0">
      <label>Assert Equal Table</label>
      <ports>
        <input index="0" key="Port" parent="False" scheme="hdf5" type="(table, table)" uuid="{014baa6c-cac6-4ff4-b450-7e9e382351a8}" x="1650.0" y="2000.0">
          <label>Port</label>
        </input>
        <output index="0" key="Port" parent="False" scheme="hdf5" type="table" uuid="{c92dc62e-86a9-4804-aa05-5d0086def76e}" x="2050.0" y="2000.0">
          <label>Port</label>
        </output>
      </ports>
      <basic_ports>
        <output key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt;" uuid="{b2e1fe04-2936-45bd-b701-d5fceba753ec}">
          <label>Lambda function</label>
        </output>
      </basic_ports>
      <node id="org.sysess.sympathy.tuple.untuple2" port_format="1.1" uuid="{33c00da5-efd9-44ae-b2b7-eab7c3bbbb47}" x="1800.0" y="2000.0">
        <label>Untuple</label>
        <version>1.0</version>
        <description></description>
        <author>Erik der Hagopian</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">{"type": "group"}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="(table, table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{4fec2310-e656-44e5-9930-512b95a8cb84}">
            <label>Input</label>
          </input>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{8a566992-57c7-4df1-85ae-31134199b344}">
            <label>Output</label>
          </output>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{6c4814ea-829d-4a5a-bcd6-d5768464c0d0}">
            <label>Output</label>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.data.table.assertequaltable" port_format="1.1" uuid="{ac4ed50d-0646-4e56-ac27-55fa97474264}" x="1925.0" y="2000.0">
        <label>Assert Equal Table</label>
        <version>1.0</version>
        <description></description>
        <author>Magnus Sand&#233;n</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">
        {
          "abs_tol": {
            "editor": null,
            "label": "Absolute tolerance",
            "order": 6,
            "type": "float",
            "value": 1e-08
          },
          "col_attrs": {
            "editor": null,
            "label": "Compare column attributes",
            "order": 1,
            "type": "boolean",
            "value": true
          },
          "col_order": {
            "editor": null,
            "label": "Compare column order",
            "order": 0,
            "type": "boolean",
            "value": true
          },
          "inexact_float": {
            "editor": null,
            "label": "Approximate comparison of floats",
            "order": 4,
            "type": "boolean",
            "value": false
          },
          "rel_tol": {
            "editor": null,
            "label": "Relative tolerance",
            "order": 5,
            "type": "float",
            "value": 1e-05
          },
          "tbl_attrs": {
            "editor": null,
            "label": "Compare table attributes",
            "order": 3,
            "type": "boolean",
            "value": true
          },
          "tbl_names": {
            "editor": null,
            "label": "Compare table names",
            "order": 2,
            "type": "boolean",
            "value": true
          },
          "type": "group"
        }
        </parameters>
        <ports>
          <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{574b75ab-9bc1-470b-8ac9-4286c728ecf3}">
            <label>Table A</label>
          </input>
          <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{ba267c80-0147-4d18-81db-8d6855b25f5c}">
            <label>Table B</label>
          </input>
          <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{df5e2772-b89e-49a9-8092-b81a6602da99}">
            <label>Output Table</label>
          </output>
        </ports>
      </node>
      <connection type="(table, table)" uuid="{8a24b218-a42d-44c3-babb-427a7df3b2af}">
        <source node="{7c22a4b8-5911-435f-a46b-0cf111e2b0a0}" port="{014baa6c-cac6-4ff4-b450-7e9e382351a8}"/>
        <destination node="{33c00da5-efd9-44ae-b2b7-eab7c3bbbb47}" port="{4fec2310-e656-44e5-9930-512b95a8cb84}"/>
      </connection>
      <connection type="table" uuid="{8aa536d8-0269-4af8-a511-c9c9912f3155}">
        <source node="{33c00da5-efd9-44ae-b2b7-eab7c3bbbb47}" port="{8a566992-57c7-4df1-85ae-31134199b344}"/>
        <destination node="{ac4ed50d-0646-4e56-ac27-55fa97474264}" port="{574b75ab-9bc1-470b-8ac9-4286c728ecf3}"/>
      </connection>
      <connection type="table" uuid="{cb1d3fdd-84db-40cb-b646-96815abdad88}">
        <source node="{33c00da5-efd9-44ae-b2b7-eab7c3bbbb47}" port="{6c4814ea-829d-4a5a-bcd6-d5768464c0d0}"/>
        <destination node="{ac4ed50d-0646-4e56-ac27-55fa97474264}" port="{ba267c80-0147-4d18-81db-8d6855b25f5c}"/>
      </connection>
      <connection type="table" uuid="{e24b4983-c48a-4262-b467-534f70f1716e}">
        <source node="{ac4ed50d-0646-4e56-ac27-55fa97474264}" port="{df5e2772-b89e-49a9-8092-b81a6602da99}"/>
        <destination node="{7c22a4b8-5911-435f-a46b-0cf111e2b0a0}" port="{c92dc62e-86a9-4804-aa05-5d0086def76e}"/>
      </connection>
    </flow>
    <node id="org.sysess.builtin.map" port_format="1.1" uuid="{2a81520c-ce81-416c-9754-bb2866b5e317}" x="2150.0" y="2275.0">
      <label>Map</label>
      <version>1.0</version>
      <description>Map Lambda function over each element in argument list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "fail_strategy": {
          "editor": {
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Action on exception",
          "list": ["Error", "Create Empty Item", "Skip Item"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": []
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{a0d6b51e-639f-4f36-b958-72a4d562505b}">
          <label>Lambda Function to Map</label>
        </input>
        <input key="List" scheme="hdf5" type="[(table, table)]" type_base="[&lt;a&gt;]" uuid="{156b4790-19aa-432c-ac2a-33fcf4770a49}">
          <label>Argument List</label>
        </input>
        <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{a1eebf83-267f-4934-8723-d542362eddcf}">
          <label>Output List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{3b25e516-9235-491f-99ba-119ae928144a}" x="2000.0" y="2275.0">
      <label>Zip Tuple</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{b32a397c-f6e5-43c0-a387-7d074ae83aa6}">
          <label>Input</label>
        </input>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{2bf70f1f-30ee-4685-a958-d94c11b117a2}">
          <label>Input</label>
        </input>
        <output key="output" scheme="hdf5" type="[(table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{cda67172-51b5-4fce-9dc4-b19b184330be}">
          <label>Output</label>
        </output>
      </ports>
    </node>
    <connection type="(table, table) -&gt; table" uuid="{263bdb41-ba78-4be7-a4e4-93e612f937bd}">
      <source node="{7c22a4b8-5911-435f-a46b-0cf111e2b0a0}" port="{b2e1fe04-2936-45bd-b701-d5fceba753ec}"/>
      <destination node="{2a81520c-ce81-416c-9754-bb2866b5e317}" port="{a0d6b51e-639f-4f36-b958-72a4d562505b}"/>
    </connection>
    <connection type="[(table, table)]" uuid="{4439362b-4249-4a56-831c-333a149f0ebe}">
      <source node="{3b25e516-9235-491f-99ba-119ae928144a}" port="{cda67172-51b5-4fce-9dc4-b19b184330be}"/>
      <destination node="{2a81520c-ce81-416c-9754-bb2866b5e317}" port="{156b4790-19aa-432c-ac2a-33fcf4770a49}"/>
    </connection>
    <connection type="[table]" uuid="{6103e1d4-7b37-43d3-9c69-571ebbfc3ac5}">
      <source node="{74b0314d-a209-44d1-9f8a-7b57bc2dbd35}" port="{f036f363-8783-45f5-a121-39d0c2235948}"/>
      <destination node="{3b25e516-9235-491f-99ba-119ae928144a}" port="{b32a397c-f6e5-43c0-a387-7d074ae83aa6}"/>
    </connection>
    <connection type="[table]" uuid="{e9ffa3fd-7b71-44a3-84b9-5fccfa43c85e}">
      <source node="{74b0314d-a209-44d1-9f8a-7b57bc2dbd35}" port="{04f9bd1e-eccb-4b87-9c7f-4be459cbc085}"/>
      <destination node="{3b25e516-9235-491f-99ba-119ae928144a}" port="{2bf70f1f-30ee-4685-a958-d94c11b117a2}"/>
    </connection>
    <connection type="[table]" uuid="{ea199207-183b-47a2-a4ab-322792e6aa80}">
      <source node="{2a81520c-ce81-416c-9754-bb2866b5e317}" port="{a1eebf83-267f-4934-8723-d542362eddcf}"/>
      <destination node="{74b0314d-a209-44d1-9f8a-7b57bc2dbd35}" port="{50cc6325-3ee6-4c06-bcec-ae3163606373}"/>
    </connection>
  </flow>
  <flow cls="Flow" uuid="{7870c961-8768-4e3d-9e6b-8e4f02453884}" x="1950.0" y="1650.0">
    <label>Filter sine</label>
    <ports>
      <input index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{7defe200-3d8e-43de-8d38-48a34e025ace}" x="1625.0" y="1625.0">
        <label>Port</label>
      </input>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{74dbf8b6-7eac-4ca9-bb99-92dd2b155b28}" x="2150.0" y="1625.0">
        <label>Port</label>
      </output>
    </ports>
    <flow cls="Flow" uuid="{e9924177-362d-4f61-9cc4-80c46e80fbb3}" x="2050.0" y="1625.0">
      <label>Assert Equal Tables</label>
      <ports>
        <input index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{3f816581-d632-4096-9d30-19a2abcda894}" x="1900.0" y="2237.5">
          <label>Port</label>
        </input>
        <input index="1" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{9332f34f-2174-4b06-afbd-f29e35a5787d}" x="1900.0" y="2312.5">
          <label>Port</label>
        </input>
        <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{6d7439c0-d1a7-4066-a3df-a4e64c1c90ce}" x="2250.0" y="2275.0">
          <label>Port</label>
        </output>
      </ports>
      <flow cls="Lambda" uuid="{d99007b6-7ce0-4a79-9495-88272774db81}" x="2000.0" y="2175.0">
        <label>Assert Equal Table</label>
        <ports>
          <input index="0" key="Port" parent="False" scheme="hdf5" type="(table, table)" uuid="{c22b00b0-76d3-4562-811a-bb561c467614}" x="1650.0" y="2000.0">
            <label>Port</label>
          </input>
          <output index="0" key="Port" parent="False" scheme="hdf5" type="table" uuid="{4bc01de0-577c-42bc-a742-2977c186b06b}" x="2050.0" y="2000.0">
            <label>Port</label>
          </output>
        </ports>
        <basic_ports>
          <output key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt;" uuid="{dfdcfb2e-63aa-4b4e-9bdd-e5e82a084ebe}">
            <label>Lambda function</label>
          </output>
        </basic_ports>
        <node id="org.sysess.sympathy.tuple.untuple2" port_format="1.1" uuid="{665cbfd9-0f55-4b92-9b5e-44180ee2f0d0}" x="1800.0" y="2000.0">
          <label>Untuple</label>
          <version>1.0</version>
          <description></description>
          <author>Erik der Hagopian</author>
          <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
          <parameters type="json">{"type": "group"}</parameters>
          <ports>
            <input key="input" scheme="hdf5" type="(table, table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{08a23bf1-4e64-4619-8c7e-9dee1cd32109}">
              <label>Input</label>
            </input>
            <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{d9161a84-5aa0-408d-8978-11fdd406c95e}">
              <label>Output</label>
            </output>
            <output key="output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{134442b5-5e62-45ce-8db8-49f272eef5a9}">
              <label>Output</label>
            </output>
          </ports>
        </node>
        <node id="org.sysess.sympathy.data.table.assertequaltable" port_format="1.1" uuid="{be789077-5fb2-404b-94d9-6719eb9b4cc5}" x="1925.0" y="2000.0">
          <label>Assert Equal Table</label>
          <version>1.0</version>
          <description></description>
          <author>Magnus Sand&#233;n</author>
          <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
          <parameters type="json">
          {
            "abs_tol": {
              "editor": null,
              "label": "Absolute tolerance",
              "order": 6,
              "type": "float",
              "value": 1e-08
            },
            "col_attrs": {
              "editor": null,
              "label": "Compare column attributes",
              "order": 1,
              "type": "boolean",
              "value": true
            },
            "col_order": {
              "editor": null,
              "label": "Compare column order",
              "order": 0,
              "type": "boolean",
              "value": true
            },
            "inexact_float": {
              "editor": null,
              "label": "Approximate comparison of floats",
              "order": 4,
              "type": "boolean",
              "value": false
            },
            "rel_tol": {
              "editor": null,
              "label": "Relative tolerance",
              "order": 5,
              "type": "float",
              "value": 1e-05
            },
            "tbl_attrs": {
              "editor": null,
              "label": "Compare table attributes",
              "order": 3,
              "type": "boolean",
              "value": true
            },
            "tbl_names": {
              "editor": null,
              "label": "Compare table names",
              "order": 2,
              "type": "boolean",
              "value": true
            },
            "type": "group"
          }
          </parameters>
          <ports>
            <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{535ba321-3464-4b20-a00a-c87b013d3b0c}">
              <label>Table A</label>
            </input>
            <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{aa300d60-205a-45d2-ad8b-80908c12edc1}">
              <label>Table B</label>
            </input>
            <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{6dab57c9-0fe6-45af-a44d-b7c3259a5ec3}">
              <label>Output Table</label>
            </output>
          </ports>
        </node>
        <connection type="table" uuid="{311f32bf-5881-4e61-8020-3d053f346701}">
          <source node="{665cbfd9-0f55-4b92-9b5e-44180ee2f0d0}" port="{d9161a84-5aa0-408d-8978-11fdd406c95e}"/>
          <destination node="{be789077-5fb2-404b-94d9-6719eb9b4cc5}" port="{535ba321-3464-4b20-a00a-c87b013d3b0c}"/>
        </connection>
        <connection type="table" uuid="{82507638-0b88-4969-99cb-08070eb7798a}">
          <source node="{665cbfd9-0f55-4b92-9b5e-44180ee2f0d0}" port="{134442b5-5e62-45ce-8db8-49f272eef5a9}"/>
          <destination node="{be789077-5fb2-404b-94d9-6719eb9b4cc5}" port="{aa300d60-205a-45d2-ad8b-80908c12edc1}"/>
        </connection>
        <connection type="(table, table)" uuid="{8830841c-3f1c-4183-8dba-1517bcb357df}">
          <source node="{d99007b6-7ce0-4a79-9495-88272774db81}" port="{c22b00b0-76d3-4562-811a-bb561c467614}"/>
          <destination node="{665cbfd9-0f55-4b92-9b5e-44180ee2f0d0}" port="{08a23bf1-4e64-4619-8c7e-9dee1cd32109}"/>
        </connection>
        <connection type="table" uuid="{9f401cea-9127-40df-be54-5754795a7190}">
          <source node="{be789077-5fb2-404b-94d9-6719eb9b4cc5}" port="{6dab57c9-0fe6-45af-a44d-b7c3259a5ec3}"/>
          <destination node="{d99007b6-7ce0-4a79-9495-88272774db81}" port="{4bc01de0-577c-42bc-a742-2977c186b06b}"/>
        </connection>
      </flow>
      <node id="org.sysess.builtin.map" port_format="1.1" uuid="{0f28fa17-da29-4d8a-aead-91acf0769709}" x="2150.0" y="2275.0">
        <label>Map</label>
        <version>1.0</version>
        <description>Map Lambda function over each element in argument list</description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
        <parameters type="json">
        {
          "fail_strategy": {
            "editor": {
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Action on exception",
            "list": ["Error", "Create Empty Item", "Skip Item"],
            "mode": "selected",
            "order": 0,
            "passthrough": false,
            "type": "list",
            "value": [0],
            "value_names": []
          },
          "type": "group"
        }
        </parameters>
        <ports>
          <input key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{8d933949-b332-4fc6-9786-3c7700c2b057}">
            <label>Lambda Function to Map</label>
          </input>
          <input key="List" scheme="hdf5" type="[(table, table)]" type_base="[&lt;a&gt;]" uuid="{e389b9c0-f0da-458e-a573-6d1438be2e6d}">
            <label>Argument List</label>
          </input>
          <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{22435314-0c9e-419c-9bd9-81c41c0a4151}">
            <label>Output List</label>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{20f3d0a5-4837-4feb-abd6-934d0d4e963c}" x="2000.0" y="2275.0">
        <label>Zip Tuple</label>
        <version>1.0</version>
        <description></description>
        <author>Erik der Hagopian</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">{"type": "group"}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{adfc644e-4668-41ff-afb4-9710e66762f5}">
            <label>Input</label>
          </input>
          <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{62bf89de-519b-4fd1-8ee0-fb3f206d8736}">
            <label>Input</label>
          </input>
          <output key="output" scheme="hdf5" type="[(table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{60cad954-4a62-4424-97e3-7c08bc66844c}">
            <label>Output</label>
          </output>
        </ports>
      </node>
      <connection type="[table]" uuid="{06291bc7-994a-4593-b365-5e949701fc5b}">
        <source node="{0f28fa17-da29-4d8a-aead-91acf0769709}" port="{22435314-0c9e-419c-9bd9-81c41c0a4151}"/>
        <destination node="{e9924177-362d-4f61-9cc4-80c46e80fbb3}" port="{6d7439c0-d1a7-4066-a3df-a4e64c1c90ce}"/>
      </connection>
      <connection type="[table]" uuid="{6c29aad7-e2d6-4e3c-b915-4c2e72f1e5f0}">
        <source node="{e9924177-362d-4f61-9cc4-80c46e80fbb3}" port="{3f816581-d632-4096-9d30-19a2abcda894}"/>
        <destination node="{20f3d0a5-4837-4feb-abd6-934d0d4e963c}" port="{adfc644e-4668-41ff-afb4-9710e66762f5}"/>
      </connection>
      <connection type="(table, table) -&gt; table" uuid="{98110ea2-3d99-47b8-8270-63ee278987b2}">
        <source node="{d99007b6-7ce0-4a79-9495-88272774db81}" port="{dfdcfb2e-63aa-4b4e-9bdd-e5e82a084ebe}"/>
        <destination node="{0f28fa17-da29-4d8a-aead-91acf0769709}" port="{8d933949-b332-4fc6-9786-3c7700c2b057}"/>
      </connection>
      <connection type="[(table, table)]" uuid="{d035b3fb-353b-40ee-94a4-394a249971ba}">
        <source node="{20f3d0a5-4837-4feb-abd6-934d0d4e963c}" port="{60cad954-4a62-4424-97e3-7c08bc66844c}"/>
        <destination node="{0f28fa17-da29-4d8a-aead-91acf0769709}" port="{e389b9c0-f0da-458e-a573-6d1438be2e6d}"/>
      </connection>
      <connection type="[table]" uuid="{e162f6cb-24c4-4f90-a72a-eb245e10f021}">
        <source node="{e9924177-362d-4f61-9cc4-80c46e80fbb3}" port="{9332f34f-2174-4b06-afbd-f29e35a5787d}"/>
        <destination node="{20f3d0a5-4837-4feb-abd6-934d0d4e963c}" port="{62bf89de-519b-4fd1-8ee0-fb3f206d8736}"/>
      </connection>
    </flow>
    <node id="org.sysess.sympathy.list.filterlistpredicate" port_format="1.1" uuid="{9c179e63-5959-4433-a276-1a4bdc151257}" x="1750.0" y="1625.0">
      <label>Filter List Predicate</label>
      <version>1.0</version>
      <description>Filter a list using configured item based predicate.</description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "predicate": {
          "editor": {
            "language": "python",
            "type": "code"
          },
          "label": "Predicate filter function",
          "order": 0,
          "type": "string",
          "value": "lambda item: 'sinus1' in item.column_names()"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{8bbc83d2-7bc9-43d3-a8bf-a132bc845521}">
          <label>List</label>
        </input>
        <output key="index" scheme="hdf5" type="table" type_base="table" uuid="{0d14048f-1d35-4861-9ce4-fc51cc490bac}">
          <label>Index</label>
        </output>
        <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{6a2a15b1-880c-4f45-ad46-603624736407}">
          <label>List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.filterlisttable" port_format="1.1" uuid="{ecaf463a-43d2-4ee7-aaaf-1291a2704a4c}" x="1900.0" y="1550.0">
      <label>Filter List with Table input</label>
      <version>1.0</version>
      <description>Filter a list using an incoming table.</description>
      <author>Magnus Sanden</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "filter": {
          "editor": {
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Filter column",
          "list": ["filter"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [],
          "value_names": []
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="filter" scheme="hdf5" type="table" type_base="table" uuid="{6288667a-dd8e-47f4-9f41-083ce3ca6d64}">
          <label>Filter</label>
        </input>
        <input key="in" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{5a5727fc-4f19-4e38-a4e4-2daed5885952}">
          <label>List of items</label>
        </input>
        <output key="out" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{74005cf2-4f96-498f-8802-d0da0028053b}">
          <label>Filtered list of items</label>
        </output>
      </ports>
    </node>
    <connection type="[table]" uuid="{01afa654-d49b-430b-97f7-da275598a8af}">
      <source node="{e9924177-362d-4f61-9cc4-80c46e80fbb3}" port="{6d7439c0-d1a7-4066-a3df-a4e64c1c90ce}"/>
      <destination node="{7870c961-8768-4e3d-9e6b-8e4f02453884}" port="{74dbf8b6-7eac-4ca9-bb99-92dd2b155b28}"/>
    </connection>
    <connection type="[table]" uuid="{5d9aed5c-0455-46e8-84f7-38e401776b40}">
      <source node="{7870c961-8768-4e3d-9e6b-8e4f02453884}" port="{7defe200-3d8e-43de-8d38-48a34e025ace}"/>
      <destination node="{ecaf463a-43d2-4ee7-aaaf-1291a2704a4c}" port="{5a5727fc-4f19-4e38-a4e4-2daed5885952}"/>
    </connection>
    <connection type="[table]" uuid="{6a8874b7-dc2a-4110-8aee-7aa64a5adaf8}">
      <source node="{ecaf463a-43d2-4ee7-aaaf-1291a2704a4c}" port="{74005cf2-4f96-498f-8802-d0da0028053b}"/>
      <destination node="{e9924177-362d-4f61-9cc4-80c46e80fbb3}" port="{3f816581-d632-4096-9d30-19a2abcda894}"/>
    </connection>
    <connection type="[table]" uuid="{963aaef7-6ffd-47fc-8a82-bb28eafeff0a}">
      <source node="{7870c961-8768-4e3d-9e6b-8e4f02453884}" port="{7defe200-3d8e-43de-8d38-48a34e025ace}"/>
      <destination node="{9c179e63-5959-4433-a276-1a4bdc151257}" port="{8bbc83d2-7bc9-43d3-a8bf-a132bc845521}"/>
    </connection>
    <connection type="[table]" uuid="{d533a72f-c28b-4921-b017-30f4d4a65202}">
      <source node="{9c179e63-5959-4433-a276-1a4bdc151257}" port="{6a2a15b1-880c-4f45-ad46-603624736407}"/>
      <destination node="{e9924177-362d-4f61-9cc4-80c46e80fbb3}" port="{9332f34f-2174-4b06-afbd-f29e35a5787d}"/>
    </connection>
    <connection type="table" uuid="{f8608be9-f8a0-45a4-b04b-ad53b516e1be}">
      <source node="{9c179e63-5959-4433-a276-1a4bdc151257}" port="{0d14048f-1d35-4861-9ce4-fc51cc490bac}"/>
      <destination node="{ecaf463a-43d2-4ee7-aaaf-1291a2704a4c}" port="{6288667a-dd8e-47f4-9f41-083ce3ca6d64}"/>
    </connection>
  </flow>
  <flow cls="Flow" uuid="{911bc49a-a3f5-4811-b45e-ac52bc2fe1fd}" x="1950.0" y="1925.0">
    <label>Filter cosine</label>
    <ports>
      <input index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{2cea1ff7-f124-486b-b956-4a95c5009e80}" x="1575.0" y="1825.0">
        <label>Port</label>
      </input>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{afc42a06-6859-468c-96f2-f086827c2b3e}" x="2150.0" y="1900.0">
        <label>Port</label>
      </output>
    </ports>
    <flow cls="Flow" uuid="{14e14f1f-9628-4082-af28-542f93a5af2f}" x="2050.0" y="1900.0">
      <label>Assert Equal Tables</label>
      <ports>
        <input index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{43d39f00-824c-44e1-9d6a-67e5f32a536a}" x="1900.0" y="2237.5">
          <label>Port</label>
        </input>
        <input index="1" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{be25ee35-08c0-41e0-8a48-caa4a1272765}" x="1900.0" y="2312.5">
          <label>Port</label>
        </input>
        <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{6af03520-5bb1-4a47-876d-481efa6ee0dc}" x="2250.0" y="2275.0">
          <label>Port</label>
        </output>
      </ports>
      <flow cls="Lambda" uuid="{fbe1ead2-f4df-432b-80a8-8351f83805d3}" x="2000.0" y="2175.0">
        <label>Assert Equal Table</label>
        <ports>
          <input index="0" key="Port" parent="False" scheme="hdf5" type="(table, table)" uuid="{38a1062a-4afb-480c-943f-8a675c10d6c8}" x="1650.0" y="2000.0">
            <label>Port</label>
          </input>
          <output index="0" key="Port" parent="False" scheme="hdf5" type="table" uuid="{306d256c-8ce6-4498-bccf-a2039ae6f04f}" x="2050.0" y="2000.0">
            <label>Port</label>
          </output>
        </ports>
        <basic_ports>
          <output key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt;" uuid="{2df85ec4-ea0e-4d54-91e5-aa6cb84752c4}">
            <label>Lambda function</label>
          </output>
        </basic_ports>
        <node id="org.sysess.sympathy.data.table.assertequaltable" port_format="1.1" uuid="{200f19b3-a2ee-4f93-8732-3b43db79d4f3}" x="1925.0" y="2000.0">
          <label>Assert Equal Table</label>
          <version>1.0</version>
          <description></description>
          <author>Magnus Sand&#233;n</author>
          <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
          <parameters type="json">
          {
            "abs_tol": {
              "editor": null,
              "label": "Absolute tolerance",
              "order": 6,
              "type": "float",
              "value": 1e-08
            },
            "col_attrs": {
              "editor": null,
              "label": "Compare column attributes",
              "order": 1,
              "type": "boolean",
              "value": true
            },
            "col_order": {
              "editor": null,
              "label": "Compare column order",
              "order": 0,
              "type": "boolean",
              "value": true
            },
            "inexact_float": {
              "editor": null,
              "label": "Approximate comparison of floats",
              "order": 4,
              "type": "boolean",
              "value": false
            },
            "rel_tol": {
              "editor": null,
              "label": "Relative tolerance",
              "order": 5,
              "type": "float",
              "value": 1e-05
            },
            "tbl_attrs": {
              "editor": null,
              "label": "Compare table attributes",
              "order": 3,
              "type": "boolean",
              "value": true
            },
            "tbl_names": {
              "editor": null,
              "label": "Compare table names",
              "order": 2,
              "type": "boolean",
              "value": true
            },
            "type": "group"
          }
          </parameters>
          <ports>
            <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{c33861db-de6f-485c-8096-f125a6eeee7b}">
              <label>Table A</label>
            </input>
            <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{6f55b6be-37f6-4234-8244-120de3ef8a5f}">
              <label>Table B</label>
            </input>
            <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{156fb59a-0e7d-48e3-9533-22de686d7e08}">
              <label>Output Table</label>
            </output>
          </ports>
        </node>
        <node id="org.sysess.sympathy.tuple.untuple2" port_format="1.1" uuid="{26e53b02-cb03-41ae-8c3b-719dee96e3aa}" x="1800.0" y="2000.0">
          <label>Untuple</label>
          <version>1.0</version>
          <description></description>
          <author>Erik der Hagopian</author>
          <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
          <parameters type="json">{"type": "group"}</parameters>
          <ports>
            <input key="input" scheme="hdf5" type="(table, table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{5469e071-d55c-4749-8501-18441dcbb745}">
              <label>Input</label>
            </input>
            <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{d2d5e6b7-47f1-49c8-af0a-8ac126045935}">
              <label>Output</label>
            </output>
            <output key="output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{ae6e8d7e-1958-46fe-9971-c26c1b09da1b}">
              <label>Output</label>
            </output>
          </ports>
        </node>
        <connection type="table" uuid="{4c359263-d88a-49da-a092-e0fa00bc9d66}">
          <source node="{26e53b02-cb03-41ae-8c3b-719dee96e3aa}" port="{d2d5e6b7-47f1-49c8-af0a-8ac126045935}"/>
          <destination node="{200f19b3-a2ee-4f93-8732-3b43db79d4f3}" port="{c33861db-de6f-485c-8096-f125a6eeee7b}"/>
        </connection>
        <connection type="table" uuid="{7f27f16d-b536-4909-8352-d82d1bdd526d}">
          <source node="{200f19b3-a2ee-4f93-8732-3b43db79d4f3}" port="{156fb59a-0e7d-48e3-9533-22de686d7e08}"/>
          <destination node="{fbe1ead2-f4df-432b-80a8-8351f83805d3}" port="{306d256c-8ce6-4498-bccf-a2039ae6f04f}"/>
        </connection>
        <connection type="table" uuid="{8ae60119-5181-4d33-bb39-5c21dd2ee1b6}">
          <source node="{26e53b02-cb03-41ae-8c3b-719dee96e3aa}" port="{ae6e8d7e-1958-46fe-9971-c26c1b09da1b}"/>
          <destination node="{200f19b3-a2ee-4f93-8732-3b43db79d4f3}" port="{6f55b6be-37f6-4234-8244-120de3ef8a5f}"/>
        </connection>
        <connection type="(table, table)" uuid="{97eb4e41-a423-42c9-801c-b95848bae2ce}">
          <source node="{fbe1ead2-f4df-432b-80a8-8351f83805d3}" port="{38a1062a-4afb-480c-943f-8a675c10d6c8}"/>
          <destination node="{26e53b02-cb03-41ae-8c3b-719dee96e3aa}" port="{5469e071-d55c-4749-8501-18441dcbb745}"/>
        </connection>
      </flow>
      <node id="org.sysess.builtin.map" port_format="1.1" uuid="{36c2cf77-3d11-4e37-82e5-92645338b6c6}" x="2150.0" y="2275.0">
        <label>Map</label>
        <version>1.0</version>
        <description>Map Lambda function over each element in argument list</description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
        <parameters type="json">
        {
          "fail_strategy": {
            "editor": {
              "include_empty": false,
              "options": [],
              "type": "combobox"
            },
            "label": "Action on exception",
            "list": ["Error", "Create Empty Item", "Skip Item"],
            "mode": "selected",
            "order": 0,
            "passthrough": false,
            "type": "list",
            "value": [0],
            "value_names": []
          },
          "type": "group"
        }
        </parameters>
        <ports>
          <input key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{fcea2c40-7ca1-4dc9-b3e2-d9324888703d}">
            <label>Lambda Function to Map</label>
          </input>
          <input key="List" scheme="hdf5" type="[(table, table)]" type_base="[&lt;a&gt;]" uuid="{f4423749-976a-4b7d-8dae-9f72bb927cfd}">
            <label>Argument List</label>
          </input>
          <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{cbf2457f-1b80-49be-a596-718194908b3c}">
            <label>Output List</label>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{f47eaf57-5795-4553-8465-e43c12faf630}" x="2000.0" y="2275.0">
        <label>Zip Tuple</label>
        <version>1.0</version>
        <description></description>
        <author>Erik der Hagopian</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">{"type": "group"}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{931bf3c1-a1d5-47e1-9e8b-cf1ad5a76698}">
            <label>Input</label>
          </input>
          <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{e2a077e7-6151-4bf1-9139-4bed20c5b109}">
            <label>Input</label>
          </input>
          <output key="output" scheme="hdf5" type="[(table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{3cbf6c31-55c1-422e-b682-c6d19a839a7a}">
            <label>Output</label>
          </output>
        </ports>
      </node>
      <connection type="(table, table) -&gt; table" uuid="{21161e77-b095-4085-bd42-712069cefe53}">
        <source node="{fbe1ead2-f4df-432b-80a8-8351f83805d3}" port="{2df85ec4-ea0e-4d54-91e5-aa6cb84752c4}"/>
        <destination node="{36c2cf77-3d11-4e37-82e5-92645338b6c6}" port="{fcea2c40-7ca1-4dc9-b3e2-d9324888703d}"/>
      </connection>
      <connection type="[table]" uuid="{4bb2096a-e077-4d99-9f39-9d03077c878e}">
        <source node="{36c2cf77-3d11-4e37-82e5-92645338b6c6}" port="{cbf2457f-1b80-49be-a596-718194908b3c}"/>
        <destination node="{14e14f1f-9628-4082-af28-542f93a5af2f}" port="{6af03520-5bb1-4a47-876d-481efa6ee0dc}"/>
      </connection>
      <connection type="[table]" uuid="{69385be6-1475-46a5-af67-d68332e8237f}">
        <source node="{14e14f1f-9628-4082-af28-542f93a5af2f}" port="{43d39f00-824c-44e1-9d6a-67e5f32a536a}"/>
        <destination node="{f47eaf57-5795-4553-8465-e43c12faf630}" port="{931bf3c1-a1d5-47e1-9e8b-cf1ad5a76698}"/>
      </connection>
      <connection type="[(table, table)]" uuid="{b5d11b23-e4bf-4c99-a16b-2b3bcfe13e0a}">
        <source node="{f47eaf57-5795-4553-8465-e43c12faf630}" port="{3cbf6c31-55c1-422e-b682-c6d19a839a7a}"/>
        <destination node="{36c2cf77-3d11-4e37-82e5-92645338b6c6}" port="{f4423749-976a-4b7d-8dae-9f72bb927cfd}"/>
      </connection>
      <connection type="[table]" uuid="{f54e85de-df85-4557-86f0-d864ba8e1c9c}">
        <source node="{14e14f1f-9628-4082-af28-542f93a5af2f}" port="{be25ee35-08c0-41e0-8a48-caa4a1272765}"/>
        <destination node="{f47eaf57-5795-4553-8465-e43c12faf630}" port="{e2a077e7-6151-4bf1-9139-4bed20c5b109}"/>
      </connection>
    </flow>
    <node id="org.sysess.sympathy.list.filterlistpredicate" port_format="1.1" uuid="{3d06ef14-0ec9-44f9-b9c5-dba91fb66b47}" x="1750.0" y="1900.0">
      <label>Filter List Predicate</label>
      <version>1.0</version>
      <description>Filter a list using configured item based predicate.</description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "predicate": {
          "editor": {
            "language": "python",
            "type": "code"
          },
          "label": "Predicate filter function",
          "order": 0,
          "type": "string",
          "value": "lambda item: 'cosines1' in item.column_names()"
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{dea9d9aa-c85f-4684-b6ce-e7616e2f3dd7}">
          <label>List</label>
        </input>
        <output key="index" scheme="hdf5" type="table" type_base="table" uuid="{46658436-b046-457b-bcb4-1846fff35c9f}">
          <label>Index</label>
        </output>
        <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{895e4e11-66c4-4d4d-a938-12094b60c8d1}">
          <label>List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.list.filterlisttable" port_format="1.1" uuid="{c36b0f4a-1823-4873-ab54-90c389034f86}" x="1900.0" y="1825.0">
      <label>Filter List with Table input</label>
      <version>1.0</version>
      <description>Filter a list using an incoming table.</description>
      <author>Magnus Sanden</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "filter": {
          "editor": {
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Filter column",
          "list": ["filter"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [],
          "value_names": []
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="filter" scheme="hdf5" type="table" type_base="table" uuid="{801130f8-1b02-4dcf-9e95-eee34126b728}">
          <label>Filter</label>
        </input>
        <input key="in" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{5f668256-1da1-4626-bb18-6b9cd5b1fa04}">
          <label>List of items</label>
        </input>
        <output key="out" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{875c5b11-a954-4544-9523-62b49250fc83}">
          <label>Filtered list of items</label>
        </output>
      </ports>
    </node>
    <connection type="[table]" uuid="{0e6121db-64e7-4fee-a42f-303b344d23f3}">
      <source node="{14e14f1f-9628-4082-af28-542f93a5af2f}" port="{6af03520-5bb1-4a47-876d-481efa6ee0dc}"/>
      <destination node="{911bc49a-a3f5-4811-b45e-ac52bc2fe1fd}" port="{afc42a06-6859-468c-96f2-f086827c2b3e}"/>
    </connection>
    <connection type="[table]" uuid="{1c832c05-02c3-4b75-8dda-5975dd6c848b}">
      <source node="{c36b0f4a-1823-4873-ab54-90c389034f86}" port="{875c5b11-a954-4544-9523-62b49250fc83}"/>
      <destination node="{14e14f1f-9628-4082-af28-542f93a5af2f}" port="{43d39f00-824c-44e1-9d6a-67e5f32a536a}"/>
    </connection>
    <connection type="[table]" uuid="{1e391e35-d8bd-47d9-ac6d-f5fe5a1b8790}">
      <source node="{911bc49a-a3f5-4811-b45e-ac52bc2fe1fd}" port="{2cea1ff7-f124-486b-b956-4a95c5009e80}"/>
      <destination node="{c36b0f4a-1823-4873-ab54-90c389034f86}" port="{5f668256-1da1-4626-bb18-6b9cd5b1fa04}"/>
    </connection>
    <connection type="[table]" uuid="{20f7d7fd-8a75-4e3c-b4fb-f482dc9080d4}">
      <source node="{3d06ef14-0ec9-44f9-b9c5-dba91fb66b47}" port="{895e4e11-66c4-4d4d-a938-12094b60c8d1}"/>
      <destination node="{14e14f1f-9628-4082-af28-542f93a5af2f}" port="{be25ee35-08c0-41e0-8a48-caa4a1272765}"/>
    </connection>
    <connection type="[table]" uuid="{6ed11eb3-eece-48bb-8421-ecb1f88e5e7c}">
      <source node="{911bc49a-a3f5-4811-b45e-ac52bc2fe1fd}" port="{2cea1ff7-f124-486b-b956-4a95c5009e80}"/>
      <destination node="{3d06ef14-0ec9-44f9-b9c5-dba91fb66b47}" port="{dea9d9aa-c85f-4684-b6ce-e7616e2f3dd7}"/>
    </connection>
    <connection type="table" uuid="{92d454f8-905b-428b-b1de-d14a23224b10}">
      <source node="{3d06ef14-0ec9-44f9-b9c5-dba91fb66b47}" port="{46658436-b046-457b-bcb4-1846fff35c9f}"/>
      <destination node="{c36b0f4a-1823-4873-ab54-90c389034f86}" port="{801130f8-1b02-4dcf-9e95-eee34126b728}"/>
    </connection>
  </flow>
  <node id="org.sysess.sympathy.list.partitionlistpredicate" port_format="1.1" uuid="{135001c0-e808-45a6-8397-98cba7019061}" x="1700.0" y="1450.0">
    <label>Partition sine/rest</label>
    <version>1.0</version>
    <description>Partition a list using configured item based predicate.</description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "predicate": {
        "editor": {
          "language": "python",
          "type": "code"
        },
        "label": "Predicate partition function",
        "order": 0,
        "type": "string",
        "value": "lambda item: 'sinus1' in item.column_names()"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{04c8cbde-66df-4502-a0e0-1c5fe009d820}">
        <label>List</label>
      </input>
      <output key="list_true" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{e93cf91f-663b-4884-9bad-b7e5b8c7975e}">
        <label>List of items where predicate returned true</label>
      </output>
      <output key="list_false" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{dd3abb19-c914-44f9-a769-5644ee5ca356}">
        <label>List of items where predicate returned false</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.extendlist" port_format="1.1" uuid="{17ca11d5-1320-4e9c-972b-a25a73a1c866}" x="1575.0" y="2200.0">
    <label>Extend List</label>
    <version>1.0</version>
    <description>Extend a list</description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{c9e458e3-5345-437a-9372-9cac5b7fa40c}">
        <label>List that will be added</label>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{9f338f77-16f5-4a4e-b772-46a33024dacf}">
        <label>List that will be added</label>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{091c030c-a17b-4f95-bd55-bf568ef55334}">
        <label>List that will be added</label>
      </input>
      <output key="output" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{7e16abda-3da6-4b49-9560-6ae95e403687}">
        <label>The extended List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generate.signaltables" port_format="1.1" uuid="{30143166-5b05-40d2-96a5-4c8ed397247a}" x="1425.0" y="2075.0">
    <label>Sine</label>
    <version>0.1</version>
    <description>Generate a list of Tables with signals like sine, cosine, etc., with or without random noise.</description>
    <author>Benedikt Ziegler</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "signal_params": {
        "add_noise": {
          "editor": null,
          "label": "Add random noise",
          "order": 6,
          "type": "boolean",
          "value": false
        },
        "amplitude": {
          "editor": null,
          "label": "Amplitude",
          "order": 1,
          "type": "float",
          "value": 1.0
        },
        "frequency": {
          "editor": null,
          "label": "Frequency",
          "order": 2,
          "type": "float",
          "value": 0.01
        },
        "index_column": {
          "editor": null,
          "label": "First column as index",
          "order": 8,
          "type": "boolean",
          "value": true
        },
        "label": "Signal",
        "noise_amplitude": {
          "editor": {
            "decimals": 2,
            "step": 0.05,
            "type": "spinbox"
          },
          "label": "Amplitude of noise",
          "order": 7,
          "type": "float",
          "value": 0.01
        },
        "order": 1,
        "period": {
          "editor": null,
          "label": "Period",
          "order": 3,
          "type": "float",
          "value": 10.0
        },
        "phase_offset": {
          "editor": null,
          "label": "Phase offset",
          "order": 5,
          "type": "float",
          "value": 0.0
        },
        "signal_type": {
          "editor": {
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Signal type",
          "list": ["sinus", "cosines", "tangent"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [0],
          "value_names": []
        },
        "type": "page",
        "use_period": {
          "editor": null,
          "label": "Period or Frequency",
          "order": 4,
          "type": "boolean",
          "value": true
        }
      },
      "table_params": {
        "column_entries": {
          "editor": {
            "max": 1000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column entries",
          "order": 0,
          "type": "integer",
          "value": 2
        },
        "column_length": {
          "editor": {
            "max": 100000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column length",
          "order": 1,
          "type": "integer",
          "value": 10
        },
        "label": "Table",
        "length": {
          "editor": {
            "max": 10000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Table list length",
          "order": 2,
          "type": "integer",
          "value": 3
        },
        "order": 0,
        "type": "page"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{34bc865a-73f8-479b-a192-ea99ba2ac0a1}">
        <label>Signal Tables</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generate.signaltables" port_format="1.1" uuid="{3b64b728-bf9c-4fe1-8bc3-6b61b9d691e6}" x="1425.0" y="2325.0">
    <label>Tangent</label>
    <version>0.1</version>
    <description>Generate a list of Tables with signals like sine, cosine, etc., with or without random noise.</description>
    <author>Benedikt Ziegler</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "signal_params": {
        "add_noise": {
          "editor": null,
          "label": "Add random noise",
          "order": 6,
          "type": "boolean",
          "value": false
        },
        "amplitude": {
          "editor": null,
          "label": "Amplitude",
          "order": 1,
          "type": "float",
          "value": 1.0
        },
        "frequency": {
          "editor": null,
          "label": "Frequency",
          "order": 2,
          "type": "float",
          "value": 0.01
        },
        "index_column": {
          "editor": null,
          "label": "First column as index",
          "order": 8,
          "type": "boolean",
          "value": true
        },
        "label": "Signal",
        "noise_amplitude": {
          "editor": {
            "decimals": 2,
            "step": 0.05,
            "type": "spinbox"
          },
          "label": "Amplitude of noise",
          "order": 7,
          "type": "float",
          "value": 0.01
        },
        "order": 1,
        "period": {
          "editor": null,
          "label": "Period",
          "order": 3,
          "type": "float",
          "value": 10.0
        },
        "phase_offset": {
          "editor": null,
          "label": "Phase offset",
          "order": 5,
          "type": "float",
          "value": 0.0
        },
        "signal_type": {
          "editor": {
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Signal type",
          "list": ["sinus", "cosines", "tangent"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [2],
          "value_names": ["tangent"]
        },
        "type": "page",
        "use_period": {
          "editor": null,
          "label": "Period or Frequency",
          "order": 4,
          "type": "boolean",
          "value": true
        }
      },
      "table_params": {
        "column_entries": {
          "editor": {
            "max": 1000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column entries",
          "order": 0,
          "type": "integer",
          "value": 2
        },
        "column_length": {
          "editor": {
            "max": 100000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column length",
          "order": 1,
          "type": "integer",
          "value": 10
        },
        "label": "Table",
        "length": {
          "editor": {
            "max": 10000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Table list length",
          "order": 2,
          "type": "integer",
          "value": 3
        },
        "order": 0,
        "type": "page"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{0e38940f-4ff3-4f3e-93fe-2c89ae383ea0}">
        <label>Signal Tables</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.getitemlist" port_format="1.1" uuid="{3f65fc28-f703-4d83-8dfa-9a740cde0c4c}" x="1875.0" y="2250.0">
    <label>Get Item List</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "fail_strategy": {
        "editor": {
          "display": null,
          "edit": false,
          "filter": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Action on index out of bounds",
        "list": ["Error", "Create Empty Item"],
        "mode": "selected",
        "order": 1,
        "type": "list",
        "value": [0],
        "value_names": ["Error"]
      },
      "index": {
        "editor": {
          "display": null,
          "edit": true,
          "filter": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Index",
        "list": [],
        "mode": "selected",
        "order": 0,
        "type": "list",
        "value": [],
        "value_names": ["0"]
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{2297f4f6-a332-42da-825c-ff553854670c}">
        <label>Input List</label>
      </input>
      <output key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{00721942-8a55-4626-a691-e8693bdeae33}">
        <label>Output selected Item from List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{575568cd-0415-4062-9ce8-05146d3d72d3}" x="1575.0" y="2350.0">
    <label>Manually Create Table</label>
    <version>1.0</version>
    <description></description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "json_table": {
        "editor": null,
        "label": "GUI",
        "order": 0,
        "type": "string",
        "value": "[[\"filter\", \"b\", [false, true, false]]]"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{c327f9d9-897b-4059-80e8-b83694fece35}">
        <label>Manually created table</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.filterlisttable" port_format="1.1" uuid="{66873414-7a17-4316-bf25-5c7aafeb5c87}" x="1825.0" y="1375.0">
    <label>Filter List with Table input</label>
    <version>1.0</version>
    <description>Filter a list using an incoming table.</description>
    <author>Magnus Sanden</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "filter": {
        "editor": {
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Filter column",
        "list": ["filter"],
        "mode": "selected",
        "order": 0,
        "passthrough": false,
        "type": "list",
        "value": [],
        "value_names": []
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="filter" scheme="hdf5" type="table" type_base="table" uuid="{17578e08-a32d-45fa-aa40-29e8a6bea724}">
        <label>Filter</label>
      </input>
      <input key="in" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{1a27cfc5-b374-431d-b202-59b94bed2148}">
        <label>List of items</label>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{e9a8d160-f2e4-4db3-b930-9b7cb68cf0f3}">
        <label>Filtered list of items</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.getitemlist" port_format="1.1" uuid="{7bbd4403-9bf8-4efb-ace0-2533fec63cc4}" x="1875.0" y="2350.0">
    <label>Get Item List</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "fail_strategy": {
        "editor": {
          "display": null,
          "edit": false,
          "filter": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Action on index out of bounds",
        "list": ["Error", "Create Empty Item"],
        "mode": "selected",
        "order": 1,
        "type": "list",
        "value": [0],
        "value_names": ["Error"]
      },
      "index": {
        "editor": {
          "display": null,
          "edit": true,
          "filter": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Index",
        "list": [],
        "mode": "selected",
        "order": 0,
        "type": "list",
        "value": [],
        "value_names": ["0"]
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{32aa30c2-2c6f-4b23-a51f-7d6fe98ab821}">
        <label>Input List</label>
      </input>
      <output key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{7300088c-ccd2-4d9c-8c62-f734dd73bac1}">
        <label>Output selected Item from List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.partitionlistpredicate" port_format="1.1" uuid="{82c3265c-05c4-491a-b717-1bab59119156}" x="1950.0" y="1775.0">
    <label>Partition sine/rest</label>
    <version>1.0</version>
    <description>Partition a list using configured item based predicate.</description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "predicate": {
        "editor": {
          "language": "python",
          "type": "code"
        },
        "label": "Predicate partition function",
        "order": 0,
        "type": "string",
        "value": "lambda item: 'sinus1' in item.column_names()"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{20ddcacc-13fc-4382-97be-109650b398cb}">
        <label>List</label>
      </input>
      <output key="list_true" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{cdacba6d-2156-440c-b294-fa26da05fda8}">
        <label>List of items where predicate returned true</label>
      </output>
      <output key="list_false" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{0b83ffc9-8b49-491a-aa53-00125851411e}">
        <label>List of items where predicate returned false</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.filterlisttable" port_format="1.1" uuid="{967c34d5-6a86-434a-bedd-4c3f5dd8e3d8}" x="1725.0" y="2350.0">
    <label>Filter List with Table</label>
    <version>1.0</version>
    <description>Filter a list using an incoming table.</description>
    <author>Magnus Sanden</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "filter": {
        "editor": {
          "display": null,
          "edit": true,
          "filter": true,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Filter column",
        "list": [],
        "mode": "selected",
        "order": 0,
        "type": "list",
        "value": [],
        "value_names": []
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="filter" scheme="hdf5" type="table" type_base="table" uuid="{94b5f2f2-5939-4ffe-af1d-dba070b43444}">
        <label>Filter</label>
      </input>
      <input key="in" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{67cd593c-7ace-4611-ae97-0f4d53d6ec45}">
        <label>List of items</label>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{2a92414f-74b0-4aff-a9f9-b693c270a31b}">
        <label>Filtered list of items</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.partitionlistpredicate" port_format="1.1" uuid="{b82d0acc-78f6-478b-b5f1-d24201c0c8b4}" x="2100.0" y="2025.0">
    <label>Partition cosine/rest</label>
    <version>1.0</version>
    <description>Partition a list using configured item based predicate.</description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "predicate": {
        "editor": {
          "language": "python",
          "type": "code"
        },
        "label": "Predicate partition function",
        "order": 0,
        "type": "string",
        "value": "lambda item: 'cosines1' in item.column_names()"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{a4f75449-8f59-4f5c-a1aa-c4aeae315bc3}">
        <label>List</label>
      </input>
      <output key="list_true" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{55844b1d-fce5-49c2-8cd9-4ea0f02f1736}">
        <label>List of items where predicate returned true</label>
      </output>
      <output key="list_false" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{7babb48e-f995-44c0-a8e6-82a5a7a1b3b9}">
        <label>List of items where predicate returned false</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.filterlistpredicate" port_format="1.1" uuid="{bd25309e-daa0-4975-ac56-f12b49d5d03d}" x="1700.0" y="1300.0">
    <label>Filter List Predicate</label>
    <version>1.0</version>
    <description>Filter a list using configured item based predicate.</description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "predicate": {
        "editor": {
          "language": "python",
          "type": "code"
        },
        "label": "Predicate filter function",
        "order": 0,
        "type": "string",
        "value": "lambda item: 'sinus1' in item.column_names()"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{99a0756c-e2b9-41dc-979b-61b87ec08abf}">
        <label>List</label>
      </input>
      <output key="index" scheme="hdf5" type="table" type_base="table" uuid="{c767c147-fbae-4d30-821a-c8ed918ecc3a}">
        <label>Index</label>
      </output>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{e1673106-9913-4af5-915d-b13c39ee8e53}">
        <label>List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generate.signaltables" port_format="1.1" uuid="{c454d755-89d2-4448-b651-e8c1805d38e2}" x="1425.0" y="2200.0">
    <label>Cosine</label>
    <version>0.1</version>
    <description>Generate a list of Tables with signals like sine, cosine, etc., with or without random noise.</description>
    <author>Benedikt Ziegler</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "signal_params": {
        "add_noise": {
          "editor": null,
          "label": "Add random noise",
          "order": 6,
          "type": "boolean",
          "value": false
        },
        "amplitude": {
          "editor": null,
          "label": "Amplitude",
          "order": 1,
          "type": "float",
          "value": 1.0
        },
        "frequency": {
          "editor": null,
          "label": "Frequency",
          "order": 2,
          "type": "float",
          "value": 0.01
        },
        "index_column": {
          "editor": null,
          "label": "First column as index",
          "order": 8,
          "type": "boolean",
          "value": true
        },
        "label": "Signal",
        "noise_amplitude": {
          "editor": {
            "decimals": 2,
            "step": 0.05,
            "type": "spinbox"
          },
          "label": "Amplitude of noise",
          "order": 7,
          "type": "float",
          "value": 0.01
        },
        "order": 1,
        "period": {
          "editor": null,
          "label": "Period",
          "order": 3,
          "type": "float",
          "value": 10.0
        },
        "phase_offset": {
          "editor": null,
          "label": "Phase offset",
          "order": 5,
          "type": "float",
          "value": 0.0
        },
        "signal_type": {
          "editor": {
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Signal type",
          "list": ["sinus", "cosines", "tangent"],
          "mode": "selected",
          "order": 0,
          "passthrough": false,
          "type": "list",
          "value": [1],
          "value_names": ["cosines"]
        },
        "type": "page",
        "use_period": {
          "editor": null,
          "label": "Period or Frequency",
          "order": 4,
          "type": "boolean",
          "value": true
        }
      },
      "table_params": {
        "column_entries": {
          "editor": {
            "max": 1000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column entries",
          "order": 0,
          "type": "integer",
          "value": 2
        },
        "column_length": {
          "editor": {
            "max": 100000000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Column length",
          "order": 1,
          "type": "integer",
          "value": 10
        },
        "label": "Table",
        "length": {
          "editor": {
            "max": 10000,
            "min": 0,
            "step": 1,
            "type": "spinbox"
          },
          "label": "Table list length",
          "order": 2,
          "type": "integer",
          "value": 3
        },
        "order": 0,
        "type": "page"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{85deab1e-70df-46fc-8016-7a308b210820}">
        <label>Signal Tables</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.assertequaltable" port_format="1.1" uuid="{dcf9d9fe-801d-4ecc-8d82-bf4fb2495b64}" x="2025.0" y="2300.0">
    <label>Assert Equal Table</label>
    <version>1.0</version>
    <description></description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "abs_tol": {
        "editor": null,
        "label": "Absolute tolerance",
        "order": 6,
        "type": "float",
        "value": 1e-08
      },
      "col_attrs": {
        "editor": null,
        "label": "Compare column attributes",
        "order": 1,
        "type": "boolean",
        "value": true
      },
      "col_order": {
        "editor": null,
        "label": "Compare column order",
        "order": 0,
        "type": "boolean",
        "value": true
      },
      "inexact_float": {
        "editor": null,
        "label": "Approximate comparison of floats",
        "order": 4,
        "type": "boolean",
        "value": false
      },
      "rel_tol": {
        "editor": null,
        "label": "Relative tolerance",
        "order": 5,
        "type": "float",
        "value": 1e-05
      },
      "tbl_attrs": {
        "editor": null,
        "label": "Compare table attributes",
        "order": 3,
        "type": "boolean",
        "value": true
      },
      "tbl_names": {
        "editor": null,
        "label": "Compare table names",
        "order": 2,
        "type": "boolean",
        "value": true
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{4c6efd2b-00d2-4ef0-8b84-3eb8c9c85baf}">
        <label>Table A</label>
      </input>
      <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{fc081b89-5c92-4eaa-af55-6e0c7d1c5510}">
        <label>Table B</label>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{88f57b88-ff39-4cc4-bd95-f9a10a05005a}">
        <label>Output Table</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.extendlist" port_format="1.1" uuid="{f2f5cec8-246c-4537-9b05-bd55beb29bb5}" x="2400.0" y="2100.0">
    <label>Extend List</label>
    <version>1.0</version>
    <description>Extend a list</description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{ab0a4999-d14a-4bec-b174-2f5c7ceced16}">
        <label>List that will be added</label>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{af50aca6-340c-428d-a78a-2f44840e7f91}">
        <label>List that will be added</label>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{b552dff0-4fdc-4e5b-bd14-22e788726507}">
        <label>List that will be added</label>
      </input>
      <output key="output" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{fea5b1bb-962c-4a85-927b-f68c56f02aad}">
        <label>The extended List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.empty" port_format="1.1" uuid="{f4cab4df-b9b9-4b16-9a87-ab6ac1c96309}" x="1575.0" y="1375.0">
    <label>Empty</label>
    <version>1.1</version>
    <description>Generate empty data of inferred or specified type</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "datatype": {
        "editor": null,
        "label": "Datatype",
        "order": 0,
        "type": "string",
        "value": "[table]"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="" scheme="hdf5" type="[table]" type_base="[table]" uuid="{63916877-2896-48b5-9f8a-a24e05c5edff}">
        <label>Output port containing empty data (must be connected or specified)</label>
      </output>
    </ports>
  </node>
  <connection type="[table]" uuid="{06b85fec-8259-40a6-8827-24e6f462f17e}">
    <source node="{17ca11d5-1320-4e9c-972b-a25a73a1c866}" port="{7e16abda-3da6-4b49-9560-6ae95e403687}"/>
    <destination node="{3f65fc28-f703-4d83-8dfa-9a740cde0c4c}" port="{2297f4f6-a332-42da-825c-ff553854670c}"/>
  </connection>
  <connection type="table" uuid="{0cfc5867-c5f7-4412-964c-b5e8a6a1115e}">
    <source node="{bd25309e-daa0-4975-ac56-f12b49d5d03d}" port="{c767c147-fbae-4d30-821a-c8ed918ecc3a}"/>
    <destination node="{66873414-7a17-4316-bf25-5c7aafeb5c87}" port="{17578e08-a32d-45fa-aa40-29e8a6bea724}"/>
  </connection>
  <connection type="[table]" uuid="{0e52667b-929c-416b-81ea-51704dcec981}">
    <source node="{3b64b728-bf9c-4fe1-8bc3-6b61b9d691e6}" port="{0e38940f-4ff3-4f3e-93fe-2c89ae383ea0}"/>
    <destination node="{17ca11d5-1320-4e9c-972b-a25a73a1c866}" port="{091c030c-a17b-4f95-bd55-bf568ef55334}"/>
  </connection>
  <connection type="table" uuid="{165b3acf-7f59-403b-867a-53f2ea292378}">
    <source node="{3f65fc28-f703-4d83-8dfa-9a740cde0c4c}" port="{00721942-8a55-4626-a691-e8693bdeae33}"/>
    <destination node="{dcf9d9fe-801d-4ecc-8d82-bf4fb2495b64}" port="{4c6efd2b-00d2-4ef0-8b84-3eb8c9c85baf}"/>
  </connection>
  <connection type="[table]" uuid="{3287a2d0-3659-4fe8-b424-eb0cb0502cee}">
    <source node="{17ca11d5-1320-4e9c-972b-a25a73a1c866}" port="{7e16abda-3da6-4b49-9560-6ae95e403687}"/>
    <destination node="{6bd03762-d65a-4988-9076-1a11023a787c}" port="{1a9d9fcf-8b69-4376-bbd2-2b3442b4475d}"/>
  </connection>
  <connection type="[table]" uuid="{523cb3c0-c7ba-4655-a582-0bd1bdc4f03a}">
    <source node="{c454d755-89d2-4448-b651-e8c1805d38e2}" port="{85deab1e-70df-46fc-8016-7a308b210820}"/>
    <destination node="{17ca11d5-1320-4e9c-972b-a25a73a1c866}" port="{9f338f77-16f5-4a4e-b772-46a33024dacf}"/>
  </connection>
  <connection type="[table]" uuid="{55d93ea7-9231-4683-9105-0c647c35b6e4}">
    <source node="{967c34d5-6a86-434a-bedd-4c3f5dd8e3d8}" port="{2a92414f-74b0-4aff-a9f9-b693c270a31b}"/>
    <destination node="{7bbd4403-9bf8-4efb-ace0-2533fec63cc4}" port="{32aa30c2-2c6f-4b23-a51f-7d6fe98ab821}"/>
  </connection>
  <connection type="[table]" uuid="{60eaa862-2b5b-4b80-a6fa-0c3aef91ae75}">
    <source node="{82c3265c-05c4-491a-b717-1bab59119156}" port="{cdacba6d-2156-440c-b294-fa26da05fda8}"/>
    <destination node="{74b0314d-a209-44d1-9f8a-7b57bc2dbd35}" port="{04f9bd1e-eccb-4b87-9c7f-4be459cbc085}"/>
  </connection>
  <connection type="[table]" uuid="{676eaeda-2415-442c-9b87-05d178516308}">
    <source node="{579ff6f4-06d4-46b1-9ef9-0abf4fb26663}" port="{d6c9f3c6-eba9-488a-91d1-7dd886058328}"/>
    <destination node="{f2f5cec8-246c-4537-9b05-bd55beb29bb5}" port="{b552dff0-4fdc-4e5b-bd14-22e788726507}"/>
  </connection>
  <connection type="[table]" uuid="{6b441f7c-7a7d-4ce6-9575-53802f1d152f}">
    <source node="{f4cab4df-b9b9-4b16-9a87-ab6ac1c96309}" port="{63916877-2896-48b5-9f8a-a24e05c5edff}"/>
    <destination node="{bd25309e-daa0-4975-ac56-f12b49d5d03d}" port="{99a0756c-e2b9-41dc-979b-61b87ec08abf}"/>
  </connection>
  <connection type="[table]" uuid="{7019a6eb-bc31-46ea-8e69-9688180f19ef}">
    <source node="{f4cab4df-b9b9-4b16-9a87-ab6ac1c96309}" port="{63916877-2896-48b5-9f8a-a24e05c5edff}"/>
    <destination node="{66873414-7a17-4316-bf25-5c7aafeb5c87}" port="{1a27cfc5-b374-431d-b202-59b94bed2148}"/>
  </connection>
  <connection type="table" uuid="{76c1d759-1daf-4b36-993a-d297230d3ab4}">
    <source node="{7bbd4403-9bf8-4efb-ace0-2533fec63cc4}" port="{7300088c-ccd2-4d9c-8c62-f734dd73bac1}"/>
    <destination node="{dcf9d9fe-801d-4ecc-8d82-bf4fb2495b64}" port="{fc081b89-5c92-4eaa-af55-6e0c7d1c5510}"/>
  </connection>
  <connection type="[table]" uuid="{7905094f-e1f5-49a6-85e9-00ea337c12d2}">
    <source node="{5df33b17-8f1f-4082-a306-c322ffa359bf}" port="{924ec491-5278-4e29-bb6a-d4533d7ef0ac}"/>
    <destination node="{579ff6f4-06d4-46b1-9ef9-0abf4fb26663}" port="{9b7e011c-3d26-43a5-ad6c-937d98028946}"/>
  </connection>
  <connection type="[table]" uuid="{7a2c8e3a-0c63-486d-8e81-2d29309f9ff7}">
    <source node="{17ca11d5-1320-4e9c-972b-a25a73a1c866}" port="{7e16abda-3da6-4b49-9560-6ae95e403687}"/>
    <destination node="{82c3265c-05c4-491a-b717-1bab59119156}" port="{20ddcacc-13fc-4382-97be-109650b398cb}"/>
  </connection>
  <connection type="[table]" uuid="{8f4a8f0c-3356-41cc-a2a8-c3572fdad7fb}">
    <source node="{17ca11d5-1320-4e9c-972b-a25a73a1c866}" port="{7e16abda-3da6-4b49-9560-6ae95e403687}"/>
    <destination node="{911bc49a-a3f5-4811-b45e-ac52bc2fe1fd}" port="{2cea1ff7-f124-486b-b956-4a95c5009e80}"/>
  </connection>
  <connection type="[table]" uuid="{8ff3c735-c895-408b-8513-bcdbce08edda}">
    <source node="{17ca11d5-1320-4e9c-972b-a25a73a1c866}" port="{7e16abda-3da6-4b49-9560-6ae95e403687}"/>
    <destination node="{7870c961-8768-4e3d-9e6b-8e4f02453884}" port="{7defe200-3d8e-43de-8d38-48a34e025ace}"/>
  </connection>
  <connection type="[table]" uuid="{91b69d1a-6f20-44a0-a730-d73cbbc59bbd}">
    <source node="{74b0314d-a209-44d1-9f8a-7b57bc2dbd35}" port="{50cc6325-3ee6-4c06-bcec-ae3163606373}"/>
    <destination node="{f2f5cec8-246c-4537-9b05-bd55beb29bb5}" port="{ab0a4999-d14a-4bec-b174-2f5c7ceced16}"/>
  </connection>
  <connection type="table" uuid="{9945d7c7-0016-4c2d-8267-84c724f95650}">
    <source node="{575568cd-0415-4062-9ce8-05146d3d72d3}" port="{c327f9d9-897b-4059-80e8-b83694fece35}"/>
    <destination node="{967c34d5-6a86-434a-bedd-4c3f5dd8e3d8}" port="{94b5f2f2-5939-4ffe-af1d-dba070b43444}"/>
  </connection>
  <connection type="[table]" uuid="{a0fcc49c-bcd5-47ac-9e7f-faae90dc23d8}">
    <source node="{17ca11d5-1320-4e9c-972b-a25a73a1c866}" port="{7e16abda-3da6-4b49-9560-6ae95e403687}"/>
    <destination node="{967c34d5-6a86-434a-bedd-4c3f5dd8e3d8}" port="{67cd593c-7ace-4611-ae97-0f4d53d6ec45}"/>
  </connection>
  <connection type="[table]" uuid="{a613536f-2b14-493a-8a66-03063a8aad50}">
    <source node="{f4cab4df-b9b9-4b16-9a87-ab6ac1c96309}" port="{63916877-2896-48b5-9f8a-a24e05c5edff}"/>
    <destination node="{135001c0-e808-45a6-8397-98cba7019061}" port="{04c8cbde-66df-4502-a0e0-1c5fe009d820}"/>
  </connection>
  <connection type="[table]" uuid="{a8d7436e-03e4-4e0a-ab6d-aa74d9eefdfc}">
    <source node="{7870c961-8768-4e3d-9e6b-8e4f02453884}" port="{74dbf8b6-7eac-4ca9-bb99-92dd2b155b28}"/>
    <destination node="{74b0314d-a209-44d1-9f8a-7b57bc2dbd35}" port="{f036f363-8783-45f5-a121-39d0c2235948}"/>
  </connection>
  <connection type="[table]" uuid="{b90d7f8b-45a9-4165-a56a-e285d11ccdcc}">
    <source node="{36615ba6-a502-4997-ba87-ce26b00a0d2f}" port="{ab132818-91c6-47bd-b757-7f58164e0388}"/>
    <destination node="{f2f5cec8-246c-4537-9b05-bd55beb29bb5}" port="{af50aca6-340c-428d-a78a-2f44840e7f91}"/>
  </connection>
  <connection type="[table]" uuid="{b991887b-3aa9-4853-bdc8-ce3570b36b9a}">
    <source node="{b82d0acc-78f6-478b-b5f1-d24201c0c8b4}" port="{55844b1d-fce5-49c2-8cd9-4ea0f02f1736}"/>
    <destination node="{36615ba6-a502-4997-ba87-ce26b00a0d2f}" port="{8d156e41-6e3d-4cf4-8844-6b0149b39efe}"/>
  </connection>
  <connection type="[table]" uuid="{bd093e35-545d-4c8c-b679-bd897325a7f3}">
    <source node="{b82d0acc-78f6-478b-b5f1-d24201c0c8b4}" port="{7babb48e-f995-44c0-a8e6-82a5a7a1b3b9}"/>
    <destination node="{579ff6f4-06d4-46b1-9ef9-0abf4fb26663}" port="{e6b884b0-6a68-40fd-8229-c52287425f1a}"/>
  </connection>
  <connection type="[table]" uuid="{c4ca698f-f3ca-4d34-8984-89496cddc56d}">
    <source node="{30143166-5b05-40d2-96a5-4c8ed397247a}" port="{34bc865a-73f8-479b-a192-ea99ba2ac0a1}"/>
    <destination node="{17ca11d5-1320-4e9c-972b-a25a73a1c866}" port="{c9e458e3-5345-437a-9372-9cac5b7fa40c}"/>
  </connection>
  <connection type="[table]" uuid="{d580f0d3-cff7-4160-a4b6-34e547663058}">
    <source node="{911bc49a-a3f5-4811-b45e-ac52bc2fe1fd}" port="{afc42a06-6859-468c-96f2-f086827c2b3e}"/>
    <destination node="{36615ba6-a502-4997-ba87-ce26b00a0d2f}" port="{f868458f-29b5-4733-92c8-da9c856d06f1}"/>
  </connection>
  <connection type="[table]" uuid="{d88a2929-e2c7-44a4-9654-207437ad5c54}">
    <source node="{82c3265c-05c4-491a-b717-1bab59119156}" port="{0b83ffc9-8b49-491a-aa53-00125851411e}"/>
    <destination node="{b82d0acc-78f6-478b-b5f1-d24201c0c8b4}" port="{a4f75449-8f59-4f5c-a1aa-c4aeae315bc3}"/>
  </connection>
  <connection type="[table]" uuid="{f5d498c5-090a-4ea7-b3ee-7a913fde0bf6}">
    <source node="{17ca11d5-1320-4e9c-972b-a25a73a1c866}" port="{7e16abda-3da6-4b49-9560-6ae95e403687}"/>
    <destination node="{5df33b17-8f1f-4082-a306-c322ffa359bf}" port="{9e6512fb-102b-42e7-bc28-6aac77a22605}"/>
  </connection>
  <connection type="[table]" uuid="{fb21ab86-d3cb-4541-9e8a-3b405ea40317}">
    <source node="{f2f5cec8-246c-4537-9b05-bd55beb29bb5}" port="{fea5b1bb-962c-4a85-927b-f68c56f02aad}"/>
    <destination node="{6bd03762-d65a-4988-9076-1a11023a787c}" port="{7d2b9019-2da0-4c60-a1c6-b47a75bfad5a}"/>
  </connection>
</flow>
