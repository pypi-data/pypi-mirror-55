<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" uuid="{d407a4e6-3074-49c7-ab16-a88a57af9709}" width="50.0" x="0.0" y="0.0">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <icon/>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <parameters type="json">{}</parameters>
  <ports/>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{00ce69a6-16d8-4f37-9e53-b2b237d5a5c5}" x="1840.5" y="1848.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: len(x[0]) != 3", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": [], "editor": {"include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[[table]]" type_base="&lt;a&gt;" uuid="{3e40b2d0-0721-455c-b9dd-8402238a4559}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[[table]]" type_base="&lt;a&gt;" uuid="{28d678af-0dd1-47cd-b754-1fd3cb676734}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{05362ddc-0fd0-45c5-94ed-cdd513bf2ea6}" x="1840.5" y="1773.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: len(x[0]) != 2", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": [], "editor": {"include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[[table]]" type_base="&lt;a&gt;" uuid="{77a30e25-2961-40c4-976c-e8629876cc1e}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[[table]]" type_base="&lt;a&gt;" uuid="{077db3a9-220f-4214-83c4-f4bfbbf61d0d}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{0888a15a-625e-42b5-8e0c-9a500efdd75f}" x="1840.5" y="1573.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: len(x) != 3", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": [], "editor": {"include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[[table]]" type_base="&lt;a&gt;" uuid="{1a0b63ed-9c12-4f1a-b6ac-57ce498c0556}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[[table]]" type_base="&lt;a&gt;" uuid="{d0898c83-fdda-4b60-98e0-54a9cb6a0749}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtables" uuid="{27b43a0e-1cc2-409b-96cd-da9b8e9ddf11}" x="1440.5" y="1573.0">
    <label>Random Tables</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_entries": {"description": "The number of columns in the generated table.", "label": "Columns:", "order": 0, "type": "integer", "value": 5, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The number of rows in the generated table.", "label": "Rows:", "order": 1, "type": "integer", "value": 5, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "If checked each value has a 50% chance to be masked.", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}, "length": {"description": "The number of tables to be generated.", "label": "List length", "order": 3, "type": "integer", "value": 5, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{b3b15167-b225-493f-8cf9-495a9bf9bf9c}">
        <label>Tables with random numbers. The specifications of the Tables are declared in the configuration.</label>
        <description>Tables with random numbers. The specifications of the Tables are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{4580bea1-3d42-405b-9588-d5fa8848e05b}" x="1840.5" y="2048.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: len(x) != 2", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": [], "editor": {"include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[[table]]" type_base="&lt;a&gt;" uuid="{414d751d-76cc-4634-a788-9680f298024c}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[[table]]" type_base="&lt;a&gt;" uuid="{a8983839-5ef0-46f2-9d20-63f2d3aaab23}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.chunklist" uuid="{4bf3fc4d-7b0b-436d-8a17-0b95eccf2ec1}" x="1675.0" y="1925.0">
    <label>Chunk List</label>
    <description>Split a list into several chunks of at most the specified length or a specified number of chunks</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "length": {"description": "Length of chunk list, depending on mode (0 =&gt; length of list.", "editor": null, "label": "Length", "order": 0, "type": "integer", "value": 3}, "mode": {"description": "", "label": "Length specifies", "order": 1, "type": "string", "value": "Length of chunk list", "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": ["Length of each chunk", "Length of chunk list"]}}, "minimum": {"description": "Minimum chunk size (0 =&gt; no minimum).", "editor": null, "label": "Minimum chunk size", "order": 2, "type": "integer", "value": 3}}</parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{36ba5d4c-d3b6-451a-9fc5-31e8d31a64db}">
        <label>List</label>
        <description>List</description>
      </input>
      <output key="chunks" scheme="hdf5" type="[[table]]" type_base="[[&lt;a&gt;]]" uuid="{ea90875f-5159-484b-9364-6d0a8eb05d28}">
        <label>Chunk List</label>
        <description>Chunk List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{516fc616-b341-41bf-a181-3b45def9e90a}" x="1840.5" y="1948.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: len(x[1]) != 2", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": [], "editor": {"include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[[table]]" type_base="&lt;a&gt;" uuid="{bb53dd19-6469-4ad1-b66b-3ff11c497d75}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[[table]]" type_base="&lt;a&gt;" uuid="{567046b5-5869-4f2a-aa8e-d609139ac273}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.chunklist" uuid="{6afdecb8-ce86-464a-b24e-d9d85e860679}" x="1665.5" y="1748.0">
    <label>Chunk List</label>
    <description>Split a list into several chunks of at most the specified length or a specified number of chunks</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "length": {"description": "", "editor": null, "label": "Length", "order": 0, "type": "integer", "value": 3}}</parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{480e7a7c-3787-4f6e-99b0-e2120808c32c}">
        <label>List</label>
        <description>List</description>
      </input>
      <output key="chunks" scheme="hdf5" type="[[table]]" type_base="[[&lt;a&gt;]]" uuid="{e1ea92a4-7ab9-4021-8825-2efc9ef45df7}">
        <label>Chunk List</label>
        <description>Chunk List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{a37dbd6e-9842-4efc-a202-0479e2efc36a}" x="1840.5" y="1673.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: len(x[0]) != 2", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": [], "editor": {"include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[[table]]" type_base="&lt;a&gt;" uuid="{2c819013-ab42-4a8c-9320-7cd0cfccf66d}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[[table]]" type_base="&lt;a&gt;" uuid="{9c56f2fb-3db6-4884-af2f-95ea4bece68c}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.chunklist" uuid="{a6668218-ce4d-4ec6-a6da-3e7020c46b56}" x="1665.5" y="1573.0">
    <label>Chunk List</label>
    <description>Split a list into several chunks of at most the specified length or a specified number of chunks</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "length": {"description": "", "editor": null, "label": "Length", "order": 0, "type": "integer", "value": 2}}</parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{865ad023-464b-40a5-8016-45f1a885f426}">
        <label>List</label>
        <description>List</description>
      </input>
      <output key="chunks" scheme="hdf5" type="[[table]]" type_base="[[&lt;a&gt;]]" uuid="{5158a039-2757-40f2-927d-387000415326}">
        <label>Chunk List</label>
        <description>Chunk List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{f8e76b9f-61b1-4324-9c09-a9b184bd0b29}" x="1850.0" y="2175.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda x: len(x) != 2", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[[table]]" type_base="&lt;a&gt;" uuid="{e8607f3b-ff67-4b35-9b94-4afc22c82e92}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[[table]]" type_base="&lt;a&gt;" uuid="{f7e6e87d-6031-4797-a1ef-1273076972c6}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <connection type="[[table]]" uuid="{31b0bbc1-12bf-4f9b-821c-626e75b2fc7d}">
    <source node="{6afdecb8-ce86-464a-b24e-d9d85e860679}" port="{e1ea92a4-7ab9-4021-8825-2efc9ef45df7}"/>
    <destination node="{00ce69a6-16d8-4f37-9e53-b2b237d5a5c5}" port="{3e40b2d0-0721-455c-b9dd-8402238a4559}"/>
  </connection>
  <connection type="[[table]]" uuid="{38e4b5e1-311f-44a7-a755-cc1f46e13371}">
    <source node="{6afdecb8-ce86-464a-b24e-d9d85e860679}" port="{e1ea92a4-7ab9-4021-8825-2efc9ef45df7}"/>
    <destination node="{4580bea1-3d42-405b-9588-d5fa8848e05b}" port="{414d751d-76cc-4634-a788-9680f298024c}"/>
  </connection>
  <connection type="[table]" uuid="{3bbf5024-a075-48b5-a9c8-e31b95c06b38}">
    <source node="{27b43a0e-1cc2-409b-96cd-da9b8e9ddf11}" port="{b3b15167-b225-493f-8cf9-495a9bf9bf9c}"/>
    <destination node="{a6668218-ce4d-4ec6-a6da-3e7020c46b56}" port="{865ad023-464b-40a5-8016-45f1a885f426}"/>
  </connection>
  <connection type="[[table]]" uuid="{3e449b3d-5d82-4b34-a04e-bb2af3126417}">
    <source node="{4bf3fc4d-7b0b-436d-8a17-0b95eccf2ec1}" port="{ea90875f-5159-484b-9364-6d0a8eb05d28}"/>
    <destination node="{f8e76b9f-61b1-4324-9c09-a9b184bd0b29}" port="{e8607f3b-ff67-4b35-9b94-4afc22c82e92}"/>
  </connection>
  <connection type="[[table]]" uuid="{3e834a54-85c4-4914-8a4e-dec60b34e9c4}">
    <source node="{6afdecb8-ce86-464a-b24e-d9d85e860679}" port="{e1ea92a4-7ab9-4021-8825-2efc9ef45df7}"/>
    <destination node="{516fc616-b341-41bf-a181-3b45def9e90a}" port="{bb53dd19-6469-4ad1-b66b-3ff11c497d75}"/>
  </connection>
  <connection type="[table]" uuid="{5bf50db8-85e1-40cb-a11f-5eb915a73099}">
    <source node="{27b43a0e-1cc2-409b-96cd-da9b8e9ddf11}" port="{b3b15167-b225-493f-8cf9-495a9bf9bf9c}"/>
    <destination node="{4bf3fc4d-7b0b-436d-8a17-0b95eccf2ec1}" port="{36ba5d4c-d3b6-451a-9fc5-31e8d31a64db}"/>
  </connection>
  <connection type="[[table]]" uuid="{701145fd-80b7-47d6-90df-99b3d3af41f9}">
    <source node="{a6668218-ce4d-4ec6-a6da-3e7020c46b56}" port="{5158a039-2757-40f2-927d-387000415326}"/>
    <destination node="{05362ddc-0fd0-45c5-94ed-cdd513bf2ea6}" port="{77a30e25-2961-40c4-976c-e8629876cc1e}"/>
  </connection>
  <connection type="[[table]]" uuid="{7e845323-791c-409e-841f-e60c5ea76314}">
    <source node="{a6668218-ce4d-4ec6-a6da-3e7020c46b56}" port="{5158a039-2757-40f2-927d-387000415326}"/>
    <destination node="{a37dbd6e-9842-4efc-a202-0479e2efc36a}" port="{2c819013-ab42-4a8c-9320-7cd0cfccf66d}"/>
  </connection>
  <connection type="[table]" uuid="{90347fb4-a389-4db7-b5c3-447a215e3297}">
    <source node="{27b43a0e-1cc2-409b-96cd-da9b8e9ddf11}" port="{b3b15167-b225-493f-8cf9-495a9bf9bf9c}"/>
    <destination node="{6afdecb8-ce86-464a-b24e-d9d85e860679}" port="{480e7a7c-3787-4f6e-99b0-e2120808c32c}"/>
  </connection>
  <connection type="[[table]]" uuid="{a5460691-5e95-4a24-8941-79d95e3aeb96}">
    <source node="{a6668218-ce4d-4ec6-a6da-3e7020c46b56}" port="{5158a039-2757-40f2-927d-387000415326}"/>
    <destination node="{0888a15a-625e-42b5-8e0c-9a500efdd75f}" port="{1a0b63ed-9c12-4f1a-b6ac-57ce498c0556}"/>
  </connection>
</flow>
