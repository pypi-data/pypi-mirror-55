<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" uuid="{743724b1-222a-436c-b17e-b120e6bfee3b}" width="50.0" x="0.0" y="0.0" id="">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <icon/>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <parameters type="json">{}</parameters>
  <ports/>
  <flow cls="Flow" height="50.0" uuid="{25f061f9-112f-4ea3-be67-1db9a8fad9f4}" width="50.0" x="1375.0" y="1800.0" id="">
    <label>Test Error strategy</label>
    <description></description>
    <author></author>
    <copyright></copyright>
    <version></version>
    <min_version></min_version>
    <icon/>
    <aggregation type="json">null</aggregation>
    <libraries type="json">[]</libraries>
    <pythonpaths type="json">[]</pythonpaths>
    <parameters type="json">{}</parameters>
    <ports>
      <input index="0" key="Port" optional="False" parent="True" scheme="hdf5" type="[table]" uuid="{cf9f38fa-ce02-47fb-ba12-22c4879b3663}" x="1250.0" y="1825.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <input index="1" key="Port" optional="False" parent="True" scheme="hdf5" type="[table]" uuid="{daeca6f0-49fd-418f-9f3d-b697e3c011c1}" x="1250.0" y="1900.0">
        <label>Port</label>
        <description>Port</description>
      </input>
      <input index="2" key="Port" optional="False" parent="True" scheme="hdf5" type="[table]" uuid="{e8e27168-e631-455f-a1b8-f250a20cd823}" x="1250.0" y="1975.0">
        <label>Port</label>
        <description>Port</description>
      </input>
    </ports>
    <flow cls="Lambda" height="50.0" uuid="{9a60e5c9-8034-4f26-91fb-ee4b9eccfaef}" width="50.0" x="1550.0" y="1800.0" id="">
      <label>New Lambda 0</label>
      <description></description>
      <author></author>
      <copyright></copyright>
      <version></version>
      <min_version></min_version>
      <icon/>
      <aggregation type="json">null</aggregation>
      <libraries type="json">[]</libraries>
      <pythonpaths type="json">[]</pythonpaths>
      <parameters type="json">{}</parameters>
      <ports>
        <input index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="([table], [table], [table])" uuid="{05d87636-9d32-4cdc-92fe-7e9f282387ea}" x="1550.0" y="2000.0">
          <label>Port</label>
          <description>Port</description>
        </input>
        <output index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="[(table, table, table)]" uuid="{02865567-4008-4295-8c52-3510c36d9bab}" x="2225.0" y="2000.0">
          <label>Port</label>
          <description>Port</description>
        </output>
      </ports>
      <basic_ports>
        <output key="Function" scheme="hdf5" type="([table], [table], [table]) -&gt; [(table, table, table)]" type_base="&lt;a&gt;" uuid="{466dd317-f129-4a62-a381-7d68f79dd99f}">
          <label>Lambda function</label>
          <description>Lambda function</description>
        </output>
      </basic_ports>
      <node id="org.sysess.sympathy.tuple.untuple2" port_format="1.1" uuid="{42bbe417-663a-4314-a9b0-9cfda1d33584}" x="1750.0" y="2000.0">
        <label>Untuple</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2017 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group"}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="([table], [table], [table])" type_base="(&lt;a&gt;, &lt;b&gt;, &lt;c&gt;)" uuid="{74449d04-06d5-4b0d-9cfa-934c71990ce4}">
            <label>Input</label>
            <description>Input</description>
          </input>
          <output key="output" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{2769b3ae-f409-450a-823a-9b7a050101cd}">
            <label>Output</label>
            <description>Output</description>
          </output>
          <output key="output" scheme="hdf5" type="[table]" type_base="&lt;b&gt;" uuid="{682261aa-1675-4f87-9642-18a9556bb1d6}">
            <label>Output</label>
            <description>Output</description>
          </output>
          <output key="output" scheme="hdf5" type="[table]" type_base="&lt;c&gt;" uuid="{9a420e68-c9fb-407c-a68d-3e44c5ae283a}">
            <label>Output</label>
            <description>Output</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{9babefd2-7804-4b07-aafc-bb98ec10e8bd}" x="1925.0" y="2000.0">
        <label>Zip Tuple (error)</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2017 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "len_strategy": {"description": "How should the node handle the situation when the input lists are of different lengths?", "label": "Strategy for different length lists:", "order": 0, "type": "string", "value": "error", "editor": {"edit": false, "filter": false, "include_empty": false, "type": "combobox", "display": ["Use shortest list length", "Use longest list length", "Error"], "options": ["shortest", "longest", "error"]}}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{c9a84153-efab-4df8-9c2f-edcdc05338ee}">
            <label>Input</label>
            <description>Input</description>
          </input>
          <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{26658e88-ab5a-47c7-8e11-29d73feea9d1}">
            <label>Input</label>
            <description>Input</description>
          </input>
          <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;c&gt;]" uuid="{ae980e9d-37e1-4d37-8186-e3352c7bb2fc}">
            <label>Input</label>
            <description>Input</description>
          </input>
          <output key="output" scheme="hdf5" type="[(table, table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;, &lt;c&gt;)]" uuid="{bcef5cdb-cd20-4128-b95c-0f139d68c61a}">
            <label>Output</label>
            <description>Output</description>
          </output>
        </ports>
      </node>
      <connection type="[table]" uuid="{074675ec-a316-41d2-810b-16241e00d88b}">
        <source node="{42bbe417-663a-4314-a9b0-9cfda1d33584}" port="{2769b3ae-f409-450a-823a-9b7a050101cd}"/>
        <destination node="{9babefd2-7804-4b07-aafc-bb98ec10e8bd}" port="{c9a84153-efab-4df8-9c2f-edcdc05338ee}"/>
      </connection>
      <connection type="[table]" uuid="{46c9937c-d524-4142-962e-4656af24d6b0}">
        <source node="{42bbe417-663a-4314-a9b0-9cfda1d33584}" port="{682261aa-1675-4f87-9642-18a9556bb1d6}"/>
        <destination node="{9babefd2-7804-4b07-aafc-bb98ec10e8bd}" port="{26658e88-ab5a-47c7-8e11-29d73feea9d1}"/>
      </connection>
      <connection type="[table]" uuid="{76d90eba-62da-41fe-8180-b725a0af4706}">
        <source node="{42bbe417-663a-4314-a9b0-9cfda1d33584}" port="{9a420e68-c9fb-407c-a68d-3e44c5ae283a}"/>
        <destination node="{9babefd2-7804-4b07-aafc-bb98ec10e8bd}" port="{ae980e9d-37e1-4d37-8186-e3352c7bb2fc}"/>
      </connection>
      <connection type="[(table, table, table)]" uuid="{ca050277-3f67-48f7-90fa-68f06717022c}">
        <source node="{9babefd2-7804-4b07-aafc-bb98ec10e8bd}" port="{bcef5cdb-cd20-4128-b95c-0f139d68c61a}"/>
        <destination node="{9a60e5c9-8034-4f26-91fb-ee4b9eccfaef}" port="{02865567-4008-4295-8c52-3510c36d9bab}"/>
      </connection>
      <connection type="([table], [table], [table])" uuid="{f9b31397-13fe-4b8c-b5c1-49011ab46467}">
        <source node="{9a60e5c9-8034-4f26-91fb-ee4b9eccfaef}" port="{05d87636-9d32-4cdc-92fe-7e9f282387ea}"/>
        <destination node="{42bbe417-663a-4314-a9b0-9cfda1d33584}" port="{74449d04-06d5-4b0d-9cfa-934c71990ce4}"/>
      </connection>
    </flow>
    <node id="org.sysess.sympathy.list.itemtolist" uuid="{05040b04-feeb-4a2d-b7b1-4d75fcbe054f}" x="1550.0" y="1900.0">
      <label>Item to List</label>
      <description></description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group", "n": {"description": "Choose number of times to repeat items.", "editor": null, "label": "Repeat number of times", "order": 0, "type": "integer", "value": 1}}</parameters>
      <ports>
        <input key="item" scheme="hdf5" type="([table], [table], [table])" type_base="&lt;a&gt;" uuid="{33de7bdb-156e-4ba4-a29e-3203a357a111}">
          <label>Input Item</label>
          <description>Input Item</description>
        </input>
        <output key="list" scheme="hdf5" type="[([table], [table], [table])]" type_base="[&lt;a&gt;]" uuid="{0f9e3e92-95db-44fd-ae20-c940299d535e}">
          <label>Item as List</label>
          <description>Item as List</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.builtin.map" port_format="1.1" uuid="{53e5e168-e078-4166-81ca-040b6dbbad35}" x="1750.0" y="1875.0">
      <label>Map</label>
      <description>Map Lambda function over each element in argument list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group", "fail_strategy": {"description": "Decide how failure to process an item should be handled.", "label": "Action on exception", "mode": "selected", "order": 0, "type": "list", "list": ["Error", "Create Empty Item", "Skip Item"], "value": [2], "value_names": ["Skip Item"], "editor": {"display": null, "edit": false, "filter": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="([table], [table], [table]) -&gt; [(table, table, table)]" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{5bd0cc20-c9cb-4065-8d44-133729da8576}">
          <label>Lambda Function to Map</label>
          <description>Lambda Function to Map</description>
        </input>
        <input key="List" scheme="hdf5" type="[([table], [table], [table])]" type_base="[&lt;a&gt;]" uuid="{11be4ac2-c12e-47e8-b645-deb2d777ffb5}">
          <label>Argument List</label>
          <description>Argument List</description>
        </input>
        <output key="List" scheme="hdf5" type="[[(table, table, table)]]" type_base="[&lt;b&gt;]" uuid="{fce75fc2-06c3-431c-862b-af276899ef0f}">
          <label>Output List</label>
          <description>Output List</description>
        </output>
        <output key="__sy_out__" scheme="hdf5" type="text" type_base="text" uuid="{0adf3acf-108c-4e05-aeae-aed0a9a46c44}">
          <label>Output Text</label>
          <description>Output Text</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.tuple.tuple2" port_format="1.1" uuid="{56243f0c-14ee-44dc-bb91-e9ca8fbc18b9}" x="1375.0" y="1900.0">
      <label>Tuple</label>
      <description></description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2017 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="[table]" type_base="&lt;a&gt;" uuid="{85c76159-8f83-44c5-a027-ed9fa45e4361}">
          <label>Input</label>
          <description>Input</description>
        </input>
        <input key="input" scheme="hdf5" type="[table]" type_base="&lt;b&gt;" uuid="{20b41ba8-486c-47a4-a742-a6758c4a81dd}">
          <label>Input</label>
          <description>Input</description>
        </input>
        <input key="input" scheme="hdf5" type="[table]" type_base="&lt;c&gt;" uuid="{fdf204de-6cf8-4db3-b9f4-a0ca7f2cd2b3}">
          <label>Input</label>
          <description>Input</description>
        </input>
        <output key="output" scheme="hdf5" type="([table], [table], [table])" type_base="(&lt;a&gt;, &lt;b&gt;, &lt;c&gt;)" uuid="{72709f45-a687-4932-9595-bd1650446dab}">
          <label>Output</label>
          <description>Output</description>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{89ab5e30-23ed-4dc7-b0a7-2535ab6acead}" x="1925.0" y="1875.0">
      <label>Conditional error/warning</label>
      <description>Raise an error if a predicate is True.</description>
      <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
      <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: len(arg)", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Resulting list should be empty!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "filter": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
      <ports>
        <input key="in" scheme="hdf5" type="[[(table, table, table)]]" type_base="&lt;a&gt;" uuid="{bedd8970-2d9a-40c6-867b-d584b937ffa8}">
          <label>Input</label>
          <description>Input</description>
        </input>
        <output key="out" scheme="hdf5" type="[[(table, table, table)]]" type_base="&lt;a&gt;" uuid="{beff7a66-1823-406d-831d-9272b86a1e0e}">
          <label>Output</label>
          <description>Output</description>
        </output>
      </ports>
    </node>
    <connection type="[table]" uuid="{398ce57c-d0ff-4cd7-8398-65b2b6a67424}">
      <source node="{25f061f9-112f-4ea3-be67-1db9a8fad9f4}" port="{daeca6f0-49fd-418f-9f3d-b697e3c011c1}"/>
      <destination node="{56243f0c-14ee-44dc-bb91-e9ca8fbc18b9}" port="{20b41ba8-486c-47a4-a742-a6758c4a81dd}"/>
    </connection>
    <connection type="([table], [table], [table]) -&gt; [(table, table, table)]" uuid="{3ee83953-5c99-444a-b1b7-c8102c9270b9}">
      <source node="{9a60e5c9-8034-4f26-91fb-ee4b9eccfaef}" port="{466dd317-f129-4a62-a381-7d68f79dd99f}"/>
      <destination node="{53e5e168-e078-4166-81ca-040b6dbbad35}" port="{5bd0cc20-c9cb-4065-8d44-133729da8576}"/>
    </connection>
    <connection type="[table]" uuid="{612e3d9c-7b04-4343-9d92-55b91842979e}">
      <source node="{25f061f9-112f-4ea3-be67-1db9a8fad9f4}" port="{e8e27168-e631-455f-a1b8-f250a20cd823}"/>
      <destination node="{56243f0c-14ee-44dc-bb91-e9ca8fbc18b9}" port="{fdf204de-6cf8-4db3-b9f4-a0ca7f2cd2b3}"/>
    </connection>
    <connection type="[[(table, table, table)]]" uuid="{6cab98b5-0bfc-4832-af58-c605780ae0ea}">
      <source node="{53e5e168-e078-4166-81ca-040b6dbbad35}" port="{fce75fc2-06c3-431c-862b-af276899ef0f}"/>
      <destination node="{89ab5e30-23ed-4dc7-b0a7-2535ab6acead}" port="{bedd8970-2d9a-40c6-867b-d584b937ffa8}"/>
    </connection>
    <connection type="[([table], [table], [table])]" uuid="{7c9a618f-956e-4fb9-812a-a021d5eba691}">
      <source node="{05040b04-feeb-4a2d-b7b1-4d75fcbe054f}" port="{0f9e3e92-95db-44fd-ae20-c940299d535e}"/>
      <destination node="{53e5e168-e078-4166-81ca-040b6dbbad35}" port="{11be4ac2-c12e-47e8-b645-deb2d777ffb5}"/>
    </connection>
    <connection type="([table], [table], [table])" uuid="{8e38e565-a035-4111-a6f9-fe1e27cd2f36}">
      <source node="{56243f0c-14ee-44dc-bb91-e9ca8fbc18b9}" port="{72709f45-a687-4932-9595-bd1650446dab}"/>
      <destination node="{05040b04-feeb-4a2d-b7b1-4d75fcbe054f}" port="{33de7bdb-156e-4ba4-a29e-3203a357a111}"/>
    </connection>
    <connection type="[table]" uuid="{91ce5699-a7e7-4206-bed2-f585e744961a}">
      <source node="{25f061f9-112f-4ea3-be67-1db9a8fad9f4}" port="{cf9f38fa-ce02-47fb-ba12-22c4879b3663}"/>
      <destination node="{56243f0c-14ee-44dc-bb91-e9ca8fbc18b9}" port="{85c76159-8f83-44c5-a027-ed9fa45e4361}"/>
    </connection>
    <text color="Red" height="100.0" uuid="{1afd71cf-4254-4cbe-a714-bc6f947b4b63}" width="325.0" x="1425.0" y="1625.0">**TODO:** Replace this when we can add error output ports on nodes!</text>
  </flow>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{01f7ebd8-17a8-4744-9cd3-bac71c41c1bc}" x="1575.0" y="1250.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: len(arg) != 1", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Wrong resulting list length!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "filter": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[(table, table, table)]" type_base="&lt;a&gt;" uuid="{5bc85cf3-d2d4-4c29-b492-f3a54aea08a9}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[(table, table, table)]" type_base="&lt;a&gt;" uuid="{9473fa88-52c0-4d92-8271-77acbecfabd0}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtables" uuid="{11fd71e0-c2d3-4988-bc84-45631d927fdb}" x="1175.0" y="1650.0">
    <label>2 Tables</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_entries": {"description": "The number of columns in the generated table.", "label": "Columns:", "order": 0, "type": "integer", "value": 5, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The number of rows in the generated table.", "label": "Rows:", "order": 1, "type": "integer", "value": 5, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "If checked each value has a 50% chance to be masked.", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}, "length": {"description": "The number of tables to be generated.", "label": "List length", "order": 3, "type": "integer", "value": 2, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{3d69ca9c-7145-40c2-8215-bd5bc98bffd3}">
        <label>Tables with random numbers. The specifications of the Tables are declared in the configuration.</label>
        <description>Tables with random numbers. The specifications of the Tables are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{1a0ce444-f278-40a2-a746-fc15e175bfa1}" x="1575.0" y="1700.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: len(arg) != 3", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Wrong resulting list length!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "filter": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[(table, table, table)]" type_base="&lt;a&gt;" uuid="{7f245918-1f77-4d2e-a37d-b93e0af93bbf}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[(table, table, table)]" type_base="&lt;a&gt;" uuid="{9bb12902-21be-47ca-a219-172ee3ecdc17}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{2d70502e-bfa9-4947-9bd3-11bde4494b4a}" x="1375.0" y="1050.0">
    <label>Old Zip Tuple</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{4875a032-5fa0-49bf-82c4-9778e8e4fadb}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{fecda934-e429-4736-b5cb-3ac9b7e36f65}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;c&gt;]" uuid="{94750011-601f-4d32-9158-fd4027bb592f}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="output" scheme="hdf5" type="[(table, table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;, &lt;c&gt;)]" uuid="{491ec650-0cf7-4de1-9fb6-853386e30760}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{38d89108-0df3-492d-9bb5-3c311ea2a785}" x="1575.0" y="1050.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: len(arg) != 1", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Wrong resulting list length!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "filter": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[(table, table, table)]" type_base="&lt;a&gt;" uuid="{94ec4b6f-e77b-4156-ab86-253b17739f48}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[(table, table, table)]" type_base="&lt;a&gt;" uuid="{cab9dbdb-d491-45c4-bca8-091270b6735a}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtables" uuid="{51fbd744-87b3-4bf6-84c1-b71b5445face}" x="1175.0" y="1775.0">
    <label>3 Tables</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_entries": {"description": "The number of columns in the generated table.", "label": "Columns:", "order": 0, "type": "integer", "value": 5, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The number of rows in the generated table.", "label": "Rows:", "order": 1, "type": "integer", "value": 5, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "If checked each value has a 50% chance to be masked.", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}, "length": {"description": "The number of tables to be generated.", "label": "List length", "order": 3, "type": "integer", "value": 3, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{4ffd734a-5920-44b7-ad9b-490740d71a0b}">
        <label>Tables with random numbers. The specifications of the Tables are declared in the configuration.</label>
        <description>Tables with random numbers. The specifications of the Tables are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{6d9375c3-b716-4af3-8562-a20f5a4176f5}" x="1375.0" y="1350.0">
    <label>Zip Tuple (error)</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "len_strategy": {"description": "How should the node handle the situation when the input lists are of different lengths?", "label": "Strategy for different length lists:", "order": 0, "type": "string", "value": "error", "editor": {"edit": false, "filter": false, "include_empty": false, "type": "combobox", "display": ["Use shortest list length", "Use longest list length", "Error"], "options": ["shortest", "longest", "error"]}}}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{1596da4b-0587-4ad3-a6f7-675a3d6fb97d}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{c20553d7-f54d-4dd8-ab6f-4cfd5093c128}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;c&gt;]" uuid="{0befcd80-58fc-45c8-8b79-ff55dc7daca4}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="output" scheme="hdf5" type="[(table, table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;, &lt;c&gt;)]" uuid="{0236d5ee-2e60-4753-8b01-1fd1b66ec5c9}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtables" uuid="{b14feb93-2b22-4640-8dd7-5d505fb7ed55}" x="1175.0" y="1525.0">
    <label>1 Tables</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_entries": {"description": "The number of columns in the generated table.", "label": "Columns:", "order": 0, "type": "integer", "value": 5, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The number of rows in the generated table.", "label": "Rows:", "order": 1, "type": "integer", "value": 5, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "If checked each value has a 50% chance to be masked.", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}, "length": {"description": "The number of tables to be generated.", "label": "List length", "order": 3, "type": "integer", "value": 1, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{ba1eee8d-459d-4c4a-9574-89c7b842ffd3}">
        <label>Tables with random numbers. The specifications of the Tables are declared in the configuration.</label>
        <description>Tables with random numbers. The specifications of the Tables are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{b299d4c6-0808-4b47-8423-7ac48f2b65aa}" x="1375.0" y="1500.0">
    <label>Old Zip Tuple</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{5243f149-7a23-4dea-a5e5-6945a2967b4e}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{7742c508-3799-46f3-997f-7de1d2d39d22}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;c&gt;]" uuid="{9fff2b2e-c576-4530-967b-adc0983642e7}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="output" scheme="hdf5" type="[(table, table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;, &lt;c&gt;)]" uuid="{b91e89d9-3097-4a8f-8230-bd6d92e19ae0}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{b65429b9-4b24-4efe-abec-740a2a264740}" x="1575.0" y="1600.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: len(arg) != 1", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Wrong resulting list length!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "filter": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[(table, table, table)]" type_base="&lt;a&gt;" uuid="{44f38890-12e6-44e7-a2c8-a87f44286595}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[(table, table, table)]" type_base="&lt;a&gt;" uuid="{2fab66cd-ca10-4a79-9fe4-a72272a395a1}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{bb9d4076-b494-44ff-88fd-f67e64dc1582}" x="1375.0" y="1700.0">
    <label>Zip Tuple (longest)</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "len_strategy": {"description": "How should the node handle the situation when the input lists are of different lengths?", "label": "Strategy for different length lists:", "order": 0, "type": "string", "value": "longest", "editor": {"edit": false, "filter": false, "include_empty": false, "type": "combobox", "display": ["Use shortest list length", "Use longest list length", "Error"], "options": ["shortest", "longest", "error"]}}}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{ebb0d7e1-b510-4fa5-a512-75c2b3018947}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{16c1c648-7cfb-4105-a7bb-679ae3cda9f3}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;c&gt;]" uuid="{6f9a17be-0774-464a-baa9-da3f7b0a8e95}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="output" scheme="hdf5" type="[(table, table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;, &lt;c&gt;)]" uuid="{44e033ec-12e5-4495-9977-c5cd8e0e6d2b}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{bc202569-ac09-44ca-a195-68f0c315796e}" x="1575.0" y="1500.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: len(arg) != 1", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Wrong resulting list length!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "filter": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[(table, table, table)]" type_base="&lt;a&gt;" uuid="{bf86f2b3-8260-4b49-89bd-d53fc7d8448f}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[(table, table, table)]" type_base="&lt;a&gt;" uuid="{57f24cb4-6671-4419-b6e7-d2e70e36a768}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{c9b3b130-69b9-4ce3-ba69-519b1b29ff41}" x="1375.0" y="1250.0">
    <label>Zip Tuple (longest)</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "len_strategy": {"description": "How should the node handle the situation when the input lists are of different lengths?", "label": "Strategy for different length lists:", "order": 0, "type": "string", "value": "longest", "editor": {"edit": false, "filter": false, "include_empty": false, "type": "combobox", "display": ["Use shortest list length", "Use longest list length", "Error"], "options": ["shortest", "longest", "error"]}}}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{2dc2e7e5-20b7-4d9c-a0bd-092f11b1afab}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{edf5ce1d-29d7-46c4-b622-443900a48ad4}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;c&gt;]" uuid="{efbe273d-52a3-4638-a935-4640dea73c9d}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="output" scheme="hdf5" type="[(table, table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;, &lt;c&gt;)]" uuid="{c84fe6ff-3fdb-4898-852f-c21445803a43}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{dada562b-b6b9-4bdf-8906-43feef9651b0}" x="1575.0" y="1150.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: len(arg) != 1", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Wrong resulting list length!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "filter": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[(table, table, table)]" type_base="&lt;a&gt;" uuid="{ea97ac2f-ff37-49dd-9b2a-471a2f4e9497}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[(table, table, table)]" type_base="&lt;a&gt;" uuid="{693aa1a4-06ea-48b2-92da-f7195b53fe10}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{dd1d689e-1d08-415a-a268-3298b9b4982b}" x="1375.0" y="1600.0">
    <label>Zip Tuple (shortest)</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "len_strategy": {"description": "How should the node handle the situation when the input lists are of different lengths?", "label": "Strategy for different length lists:", "order": 0, "type": "string", "value": "shortest", "editor": {"edit": false, "filter": false, "include_empty": false, "type": "combobox", "display": ["Use shortest list length", "Use longest list length", "Error"], "options": ["shortest", "longest", "error"]}}}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{f4bf4911-29ef-4c48-b278-d2e814ea5d2e}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{ac1a9f2e-7ed9-4908-9992-3d5f11d829d4}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;c&gt;]" uuid="{16d57021-06d6-4b4c-b6da-9670f15dffb9}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="output" scheme="hdf5" type="[(table, table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;, &lt;c&gt;)]" uuid="{06a5b5a4-d91d-44ca-9930-03a2f8e3dc0d}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{dd925af2-95fa-4363-b125-e943661790b3}" x="1375.0" y="1150.0">
    <label>Zip Tuple (shortest)</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "len_strategy": {"description": "How should the node handle the situation when the input lists are of different lengths?", "label": "Strategy for different length lists:", "order": 0, "type": "string", "value": "shortest", "editor": {"edit": false, "filter": false, "include_empty": false, "type": "combobox", "display": ["Use shortest list length", "Use longest list length", "Error"], "options": ["shortest", "longest", "error"]}}}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{c842af42-ebd3-4173-9cf6-8f4a20df4971}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{0aae5752-07e2-4bcc-83bb-a547a400ae22}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;c&gt;]" uuid="{eb720332-410f-4cc7-a8c1-9918ea97eeb9}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="output" scheme="hdf5" type="[(table, table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;, &lt;c&gt;)]" uuid="{ca848442-cba3-476d-9461-646916329109}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{ee1c8ba8-e7a5-47c7-9e77-8724876a3724}" x="1575.0" y="1350.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: len(arg) != 1", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Wrong resulting list length!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "filter": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="[(table, table, table)]" type_base="&lt;a&gt;" uuid="{1a61ab64-a42d-443e-8ff6-aae9a7b32603}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="[(table, table, table)]" type_base="&lt;a&gt;" uuid="{730b5a39-de14-4664-a99a-96dc607ceb2a}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <connection type="[table]" uuid="{00b76c92-a734-418c-9d8a-9c06127f928e}">
    <source node="{11fd71e0-c2d3-4988-bc84-45631d927fdb}" port="{3d69ca9c-7145-40c2-8215-bd5bc98bffd3}"/>
    <destination node="{b299d4c6-0808-4b47-8423-7ac48f2b65aa}" port="{7742c508-3799-46f3-997f-7de1d2d39d22}"/>
  </connection>
  <connection type="[table]" uuid="{00ef03c6-4696-4a0f-8751-3f52c87acf9d}">
    <source node="{b14feb93-2b22-4640-8dd7-5d505fb7ed55}" port="{ba1eee8d-459d-4c4a-9574-89c7b842ffd3}"/>
    <destination node="{c9b3b130-69b9-4ce3-ba69-519b1b29ff41}" port="{efbe273d-52a3-4638-a935-4640dea73c9d}"/>
  </connection>
  <connection type="[table]" uuid="{00f13c50-f4af-4e44-9960-8000d0b666c8}">
    <source node="{b14feb93-2b22-4640-8dd7-5d505fb7ed55}" port="{ba1eee8d-459d-4c4a-9574-89c7b842ffd3}"/>
    <destination node="{dd925af2-95fa-4363-b125-e943661790b3}" port="{0aae5752-07e2-4bcc-83bb-a547a400ae22}"/>
  </connection>
  <connection type="[table]" uuid="{02b5c1ca-7312-4f70-a7c5-2b8796b13b46}">
    <source node="{51fbd744-87b3-4bf6-84c1-b71b5445face}" port="{4ffd734a-5920-44b7-ad9b-490740d71a0b}"/>
    <destination node="{bb9d4076-b494-44ff-88fd-f67e64dc1582}" port="{6f9a17be-0774-464a-baa9-da3f7b0a8e95}"/>
  </connection>
  <connection type="[table]" uuid="{038f47cc-3436-4e1f-82fc-b09065a25787}">
    <source node="{b14feb93-2b22-4640-8dd7-5d505fb7ed55}" port="{ba1eee8d-459d-4c4a-9574-89c7b842ffd3}"/>
    <destination node="{2d70502e-bfa9-4947-9bd3-11bde4494b4a}" port="{fecda934-e429-4736-b5cb-3ac9b7e36f65}"/>
  </connection>
  <connection type="[table]" uuid="{03ae7d51-df42-4d19-8a9e-6eec37aa862d}">
    <source node="{b14feb93-2b22-4640-8dd7-5d505fb7ed55}" port="{ba1eee8d-459d-4c4a-9574-89c7b842ffd3}"/>
    <destination node="{c9b3b130-69b9-4ce3-ba69-519b1b29ff41}" port="{2dc2e7e5-20b7-4d9c-a0bd-092f11b1afab}"/>
  </connection>
  <connection type="[table]" uuid="{065bafe8-e3cd-4811-a64b-0562f9429151}">
    <source node="{b14feb93-2b22-4640-8dd7-5d505fb7ed55}" port="{ba1eee8d-459d-4c4a-9574-89c7b842ffd3}"/>
    <destination node="{6d9375c3-b716-4af3-8562-a20f5a4176f5}" port="{0befcd80-58fc-45c8-8b79-ff55dc7daca4}"/>
  </connection>
  <connection type="[table]" uuid="{158d39bc-c25d-4970-9fc1-b764fc9982e5}">
    <source node="{b14feb93-2b22-4640-8dd7-5d505fb7ed55}" port="{ba1eee8d-459d-4c4a-9574-89c7b842ffd3}"/>
    <destination node="{bb9d4076-b494-44ff-88fd-f67e64dc1582}" port="{ebb0d7e1-b510-4fa5-a512-75c2b3018947}"/>
  </connection>
  <connection type="[table]" uuid="{33db32fc-4acf-4a1a-a813-abd86afaec95}">
    <source node="{b14feb93-2b22-4640-8dd7-5d505fb7ed55}" port="{ba1eee8d-459d-4c4a-9574-89c7b842ffd3}"/>
    <destination node="{c9b3b130-69b9-4ce3-ba69-519b1b29ff41}" port="{edf5ce1d-29d7-46c4-b622-443900a48ad4}"/>
  </connection>
  <connection type="[table]" uuid="{38790bba-de7a-40f9-9bbc-5369d03ee15e}">
    <source node="{51fbd744-87b3-4bf6-84c1-b71b5445face}" port="{4ffd734a-5920-44b7-ad9b-490740d71a0b}"/>
    <destination node="{dd1d689e-1d08-415a-a268-3298b9b4982b}" port="{16d57021-06d6-4b4c-b6da-9670f15dffb9}"/>
  </connection>
  <connection type="[table]" uuid="{4219f92a-9128-4b7d-8537-ffdc65b61dc5}">
    <source node="{51fbd744-87b3-4bf6-84c1-b71b5445face}" port="{4ffd734a-5920-44b7-ad9b-490740d71a0b}"/>
    <destination node="{25f061f9-112f-4ea3-be67-1db9a8fad9f4}" port="{e8e27168-e631-455f-a1b8-f250a20cd823}"/>
  </connection>
  <connection type="[(table, table, table)]" uuid="{49bdcb90-ee45-49bd-908f-11b4e179becf}">
    <source node="{b299d4c6-0808-4b47-8423-7ac48f2b65aa}" port="{b91e89d9-3097-4a8f-8230-bd6d92e19ae0}"/>
    <destination node="{bc202569-ac09-44ca-a195-68f0c315796e}" port="{bf86f2b3-8260-4b49-89bd-d53fc7d8448f}"/>
  </connection>
  <connection type="[table]" uuid="{4b7cfc96-a75d-4eb9-83c5-4d471e09e676}">
    <source node="{11fd71e0-c2d3-4988-bc84-45631d927fdb}" port="{3d69ca9c-7145-40c2-8215-bd5bc98bffd3}"/>
    <destination node="{25f061f9-112f-4ea3-be67-1db9a8fad9f4}" port="{daeca6f0-49fd-418f-9f3d-b697e3c011c1}"/>
  </connection>
  <connection type="[(table, table, table)]" uuid="{4ff265e5-a7a5-424f-bfa4-53f91ab478fd}">
    <source node="{c9b3b130-69b9-4ce3-ba69-519b1b29ff41}" port="{c84fe6ff-3fdb-4898-852f-c21445803a43}"/>
    <destination node="{01f7ebd8-17a8-4744-9cd3-bac71c41c1bc}" port="{5bc85cf3-d2d4-4c29-b492-f3a54aea08a9}"/>
  </connection>
  <connection type="[table]" uuid="{5fbed708-227c-4f7e-974f-6da25194ea12}">
    <source node="{b14feb93-2b22-4640-8dd7-5d505fb7ed55}" port="{ba1eee8d-459d-4c4a-9574-89c7b842ffd3}"/>
    <destination node="{25f061f9-112f-4ea3-be67-1db9a8fad9f4}" port="{cf9f38fa-ce02-47fb-ba12-22c4879b3663}"/>
  </connection>
  <connection type="[table]" uuid="{5fcc045e-4c22-4d62-bc03-f4849d647c25}">
    <source node="{b14feb93-2b22-4640-8dd7-5d505fb7ed55}" port="{ba1eee8d-459d-4c4a-9574-89c7b842ffd3}"/>
    <destination node="{6d9375c3-b716-4af3-8562-a20f5a4176f5}" port="{1596da4b-0587-4ad3-a6f7-675a3d6fb97d}"/>
  </connection>
  <connection type="[(table, table, table)]" uuid="{6195038f-b551-4a23-a241-57dac3b113c4}">
    <source node="{dd925af2-95fa-4363-b125-e943661790b3}" port="{ca848442-cba3-476d-9461-646916329109}"/>
    <destination node="{dada562b-b6b9-4bdf-8906-43feef9651b0}" port="{ea97ac2f-ff37-49dd-9b2a-471a2f4e9497}"/>
  </connection>
  <connection type="[(table, table, table)]" uuid="{697c895f-a990-4aa0-a861-9e0308d752e0}">
    <source node="{dd1d689e-1d08-415a-a268-3298b9b4982b}" port="{06a5b5a4-d91d-44ca-9930-03a2f8e3dc0d}"/>
    <destination node="{b65429b9-4b24-4efe-abec-740a2a264740}" port="{44f38890-12e6-44e7-a2c8-a87f44286595}"/>
  </connection>
  <connection type="[table]" uuid="{79842246-c8a8-4a42-9322-b14aab0d1fb6}">
    <source node="{11fd71e0-c2d3-4988-bc84-45631d927fdb}" port="{3d69ca9c-7145-40c2-8215-bd5bc98bffd3}"/>
    <destination node="{dd1d689e-1d08-415a-a268-3298b9b4982b}" port="{ac1a9f2e-7ed9-4908-9992-3d5f11d829d4}"/>
  </connection>
  <connection type="[table]" uuid="{aefef37b-a77a-4286-8874-75cb937e89e4}">
    <source node="{b14feb93-2b22-4640-8dd7-5d505fb7ed55}" port="{ba1eee8d-459d-4c4a-9574-89c7b842ffd3}"/>
    <destination node="{2d70502e-bfa9-4947-9bd3-11bde4494b4a}" port="{4875a032-5fa0-49bf-82c4-9778e8e4fadb}"/>
  </connection>
  <connection type="[(table, table, table)]" uuid="{b2682cc5-bfb1-4f3c-a608-7ec5b2a5fa61}">
    <source node="{6d9375c3-b716-4af3-8562-a20f5a4176f5}" port="{0236d5ee-2e60-4753-8b01-1fd1b66ec5c9}"/>
    <destination node="{ee1c8ba8-e7a5-47c7-9e77-8724876a3724}" port="{1a61ab64-a42d-443e-8ff6-aae9a7b32603}"/>
  </connection>
  <connection type="[table]" uuid="{b39a4a3d-722e-4469-ab61-3a51297fe9ea}">
    <source node="{b14feb93-2b22-4640-8dd7-5d505fb7ed55}" port="{ba1eee8d-459d-4c4a-9574-89c7b842ffd3}"/>
    <destination node="{2d70502e-bfa9-4947-9bd3-11bde4494b4a}" port="{94750011-601f-4d32-9158-fd4027bb592f}"/>
  </connection>
  <connection type="[table]" uuid="{b70c5af4-ae2e-496d-b41a-4509044a719f}">
    <source node="{11fd71e0-c2d3-4988-bc84-45631d927fdb}" port="{3d69ca9c-7145-40c2-8215-bd5bc98bffd3}"/>
    <destination node="{bb9d4076-b494-44ff-88fd-f67e64dc1582}" port="{16c1c648-7cfb-4105-a7bb-679ae3cda9f3}"/>
  </connection>
  <connection type="[(table, table, table)]" uuid="{b9168027-3a26-4370-a9fd-86dcaffff335}">
    <source node="{2d70502e-bfa9-4947-9bd3-11bde4494b4a}" port="{491ec650-0cf7-4de1-9fb6-853386e30760}"/>
    <destination node="{38d89108-0df3-492d-9bb5-3c311ea2a785}" port="{94ec4b6f-e77b-4156-ab86-253b17739f48}"/>
  </connection>
  <connection type="[table]" uuid="{b95af0ce-e4f8-434d-be28-0801bb831f41}">
    <source node="{b14feb93-2b22-4640-8dd7-5d505fb7ed55}" port="{ba1eee8d-459d-4c4a-9574-89c7b842ffd3}"/>
    <destination node="{dd925af2-95fa-4363-b125-e943661790b3}" port="{c842af42-ebd3-4173-9cf6-8f4a20df4971}"/>
  </connection>
  <connection type="[(table, table, table)]" uuid="{c1459ff4-b044-4b7b-838a-d983428a30bd}">
    <source node="{bb9d4076-b494-44ff-88fd-f67e64dc1582}" port="{44e033ec-12e5-4495-9977-c5cd8e0e6d2b}"/>
    <destination node="{1a0ce444-f278-40a2-a746-fc15e175bfa1}" port="{7f245918-1f77-4d2e-a37d-b93e0af93bbf}"/>
  </connection>
  <connection type="[table]" uuid="{d4979f63-c0ac-4da8-bbf3-4ea174a82d28}">
    <source node="{51fbd744-87b3-4bf6-84c1-b71b5445face}" port="{4ffd734a-5920-44b7-ad9b-490740d71a0b}"/>
    <destination node="{b299d4c6-0808-4b47-8423-7ac48f2b65aa}" port="{9fff2b2e-c576-4530-967b-adc0983642e7}"/>
  </connection>
  <connection type="[table]" uuid="{e067c974-f92d-4184-af07-ff35fd4e2003}">
    <source node="{b14feb93-2b22-4640-8dd7-5d505fb7ed55}" port="{ba1eee8d-459d-4c4a-9574-89c7b842ffd3}"/>
    <destination node="{dd1d689e-1d08-415a-a268-3298b9b4982b}" port="{f4bf4911-29ef-4c48-b278-d2e814ea5d2e}"/>
  </connection>
  <connection type="[table]" uuid="{e1f88054-290b-41c9-9278-2efcdcd31ba9}">
    <source node="{b14feb93-2b22-4640-8dd7-5d505fb7ed55}" port="{ba1eee8d-459d-4c4a-9574-89c7b842ffd3}"/>
    <destination node="{6d9375c3-b716-4af3-8562-a20f5a4176f5}" port="{c20553d7-f54d-4dd8-ab6f-4cfd5093c128}"/>
  </connection>
  <connection type="[table]" uuid="{e8d2b85c-1421-4fba-a002-a0da4dd8a139}">
    <source node="{b14feb93-2b22-4640-8dd7-5d505fb7ed55}" port="{ba1eee8d-459d-4c4a-9574-89c7b842ffd3}"/>
    <destination node="{b299d4c6-0808-4b47-8423-7ac48f2b65aa}" port="{5243f149-7a23-4dea-a5e5-6945a2967b4e}"/>
  </connection>
  <connection type="[table]" uuid="{ef0f3fc6-f048-47fd-a1b4-09b2adbe45d6}">
    <source node="{b14feb93-2b22-4640-8dd7-5d505fb7ed55}" port="{ba1eee8d-459d-4c4a-9574-89c7b842ffd3}"/>
    <destination node="{dd925af2-95fa-4363-b125-e943661790b3}" port="{eb720332-410f-4cc7-a8c1-9918ea97eeb9}"/>
  </connection>
</flow>
