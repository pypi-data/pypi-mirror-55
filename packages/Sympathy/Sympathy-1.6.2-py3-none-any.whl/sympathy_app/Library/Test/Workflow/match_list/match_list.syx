<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{2879c627-8c6e-40b7-a6bd-310a7a40fa2f}" width="50.0" x="0.0" y="0.0">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <icon_filename/>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <overrides type="json">{}</overrides>
  <environment type="json">{}</environment>
  <parameters type="json">{"environment": {}}</parameters>
  <ports/>
  <node id="org.sysess.builtin.empty" uuid="{15610b79-da62-49e5-8dca-9aa80a65b77d}" x="1450.0" y="1900.0">
    <label>Empty</label>
    <description>Generate empty data of inferred or defined datatype</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "datatype": {"description": "Define the datatype of the output port.", "editor": null, "label": "Datatype", "order": 0, "type": "string", "value": "[table]"}}</parameters>
    <ports>
      <output key="" scheme="hdf5" type="[table]" type_base="[table]" uuid="{029e0272-7771-461e-a8a1-a2d28fce55f6}">
        <label>Output port containing empty data (must be connected or defined)</label>
        <description>Output port containing empty data (must be connected or defined)</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.padlist" uuid="{1c3fa738-8693-4149-bdd3-1c5abee9b624}" x="1675.0" y="2000.0">
    <label>Pad List
Match Tables list lengths fill empty</label>
    <description>Pad a list to match the length of template</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "strategy": {"description": "Specify strategy to use when padding.", "label": "Pad values", "order": 0, "passthrough": false, "type": "list", "list": ["Repeat last item", "Empty item"], "value": [1], "value_names": ["Empty item"], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="template" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{d932d45a-adb7-44d2-8180-64936e52e382}">
        <label>List with deciding length</label>
        <description>List with deciding length</description>
      </input>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{871962cb-838f-4bc2-a3a4-9dd4fb598bd6}">
        <label>List that will be padded</label>
        <description>List that will be padded</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{f88a5f7b-beed-4cdf-8836-5be0b1c2e8b2}">
        <label>Padded List</label>
        <description>Padded List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.empty" uuid="{2e1eea4c-ae56-4c9c-93e2-ae16ae546914}" x="1450.0" y="2275.0">
    <label>Empty</label>
    <description>Generate empty data of inferred or defined datatype</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "datatype": {"description": "Define the datatype of the output port.", "editor": null, "label": "Datatype", "order": 0, "type": "string", "value": "[adaf]"}}</parameters>
    <ports>
      <output key="" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{45c54c80-66b5-4fcc-bd3e-86affd9c672e}">
        <label>Output port containing empty data (must be connected or defined)</label>
        <description>Output port containing empty data (must be connected or defined)</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.padlist" uuid="{31776230-e14d-4765-9894-7ee4911a2dcb}" x="1675.0" y="2325.0">
    <label>Pad List
Match ADAF list lengths</label>
    <description>Pad a list to match the length of template</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "strategy": {"description": "Specify strategy to use when padding.", "label": "Pad values", "order": 0, "passthrough": false, "type": "list", "list": ["Repeat last item", "Empty item"], "value": [1], "value_names": ["Empty item"], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="template" scheme="hdf5" type="[adaf]" type_base="[&lt;a&gt;]" uuid="{aaeffc04-9456-48dc-8f05-bf5757829dc0}">
        <label>List with deciding length</label>
        <description>List with deciding length</description>
      </input>
      <input key="list" scheme="hdf5" type="[adaf]" type_base="[&lt;b&gt;]" uuid="{904cb931-8708-4655-89a5-e6951b3c8f38}">
        <label>List that will be padded</label>
        <description>List that will be padded</description>
      </input>
      <output key="list" scheme="hdf5" type="[adaf]" type_base="[&lt;b&gt;]" uuid="{9db52570-41fe-4676-865b-6161932c285f}">
        <label>Padded List</label>
        <description>Padded List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtables" uuid="{3b897eda-c41c-435f-969d-dcb1817f6d3b}" x="1450.0" y="2100.0">
    <label>Random Tables 1</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_entries": {"description": "The number of columns in the generated table.", "label": "Columns:", "order": 0, "type": "integer", "value": 10, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The number of rows in the generated table.", "label": "Rows:", "order": 1, "type": "integer", "value": 10, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "If checked each value has a 50% chance to be masked.", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}, "length": {"description": "The number of tables to be generated.", "label": "List length", "order": 3, "type": "integer", "value": 1, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{596ba305-891e-4f1d-aafd-da3a0b5ef6f5}">
        <label>Tables with random numbers. The specifications of the Tables are declared in the configuration.</label>
        <description>Tables with random numbers. The specifications of the Tables are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.empty" uuid="{42e43328-4e36-4cab-bbdd-5bcc1a2b7136}" x="1450.0" y="1800.0">
    <label>Empty</label>
    <description>Generate empty data of inferred or defined datatype</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "datatype": {"description": "Define the datatype of the output port.", "editor": null, "label": "Datatype", "order": 0, "type": "string", "value": "[table]"}}</parameters>
    <ports>
      <output key="" scheme="hdf5" type="[table]" type_base="[table]" uuid="{cbb815e6-479f-40f9-8bea-faca768ab9ad}">
        <label>Output port containing empty data (must be connected or defined)</label>
        <description>Output port containing empty data (must be connected or defined)</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.padlist" uuid="{4d5a0fdd-c85f-469f-9d5e-df2a07d3d847}" x="1675.0" y="2100.0">
    <label>Pad List
Match Tables list lengths fill last</label>
    <description>Pad a list to match the length of template</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "strategy": {"description": "Specify strategy to use when padding.", "label": "Pad values", "order": 0, "passthrough": false, "type": "list", "list": ["Repeat last item", "Empty item"], "value": [0], "value_names": ["Repeat last item"], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="template" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{8b3dde76-cf04-45c0-a44d-7b75b7531ade}">
        <label>List with deciding length</label>
        <description>List with deciding length</description>
      </input>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{64595693-74f5-446c-a6b3-046183eb1b12}">
        <label>List that will be padded</label>
        <description>List that will be padded</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{41b8160e-a019-42ed-b4c0-4c32ffc960c8}">
        <label>Padded List</label>
        <description>Padded List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.padlist" uuid="{4f808889-4f5d-490e-bbb0-81f8008058ab}" x="1675.0" y="1550.0">
    <label>Pad List
Match ADAFs list lengths fill empty</label>
    <description>Pad a list to match the length of template</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "strategy": {"description": "Specify strategy to use when padding.", "label": "Pad values", "order": 0, "passthrough": false, "type": "list", "list": ["Repeat last item", "Empty item"], "value": [1], "value_names": ["Empty item"], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="template" scheme="hdf5" type="[adaf]" type_base="[&lt;a&gt;]" uuid="{81717400-ef1e-4c10-b1ac-d6188dc5de24}">
        <label>List with deciding length</label>
        <description>List with deciding length</description>
      </input>
      <input key="list" scheme="hdf5" type="[adaf]" type_base="[&lt;b&gt;]" uuid="{ca481d20-630f-4f0b-b45e-cc289e291a6b}">
        <label>List that will be padded</label>
        <description>List that will be padded</description>
      </input>
      <output key="list" scheme="hdf5" type="[adaf]" type_base="[&lt;b&gt;]" uuid="{c9ebb9ab-9dcc-48da-967d-1ab8b5f01b63}">
        <label>Padded List</label>
        <description>Padded List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.padlist" uuid="{5090903a-eb15-49cc-8990-16e22bc038c7}" x="1675.0" y="2200.0">
    <label>Pad List
Match Tables list lengths drop</label>
    <description>Pad a list to match the length of template</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "strategy": {"description": "Specify strategy to use when padding.", "label": "Pad values", "order": 0, "passthrough": false, "type": "list", "list": ["Repeat last item", "Empty item"], "value": [1], "value_names": ["Empty item"], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="template" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{975526f4-bd3b-4fa5-a0ff-ac042e610569}">
        <label>List with deciding length</label>
        <description>List with deciding length</description>
      </input>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{1f647406-c340-470a-8cb1-fe85e7f1e442}">
        <label>List that will be padded</label>
        <description>List that will be padded</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{a71f84e0-5ae0-45da-8a97-dee1ca80a980}">
        <label>Padded List</label>
        <description>Padded List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.padlist" uuid="{50912077-2323-4eaa-83ff-211c701d99ca}" x="1675.0" y="1650.0">
    <label>Pad List
Match ADAFs list lengths fill last</label>
    <description>Pad a list to match the length of template</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "strategy": {"description": "Specify strategy to use when padding.", "label": "Pad values", "order": 0, "passthrough": false, "type": "list", "list": ["Repeat last item", "Empty item"], "value": [0], "value_names": ["Repeat last item"], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="template" scheme="hdf5" type="[adaf]" type_base="[&lt;a&gt;]" uuid="{1b81d68d-a6d6-417f-9f49-3c684d9ad320}">
        <label>List with deciding length</label>
        <description>List with deciding length</description>
      </input>
      <input key="list" scheme="hdf5" type="[adaf]" type_base="[&lt;b&gt;]" uuid="{f1906435-dfe5-4ae1-83a0-eee36138918f}">
        <label>List that will be padded</label>
        <description>List that will be padded</description>
      </input>
      <output key="list" scheme="hdf5" type="[adaf]" type_base="[&lt;b&gt;]" uuid="{f88d7aea-1ed0-40f4-8e52-538b902db394}">
        <label>Padded List</label>
        <description>Padded List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.empty" uuid="{52172029-366e-448a-8472-3da50f4280fd}" x="1450.0" y="2375.0">
    <label>Empty</label>
    <description>Generate empty data of inferred or defined datatype</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "datatype": {"description": "Define the datatype of the output port.", "editor": null, "label": "Datatype", "order": 0, "type": "string", "value": "[adaf]"}}</parameters>
    <ports>
      <output key="" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{213c4f4a-6513-4650-b19b-23805199c0fb}">
        <label>Output port containing empty data (must be connected or defined)</label>
        <description>Output port containing empty data (must be connected or defined)</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.padlist" uuid="{535f6f45-ca5c-4799-b8ad-cb974493fcf2}" x="1675.0" y="2425.0">
    <label>Pad List
Match ADAF list lengths</label>
    <description>Pad a list to match the length of template</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "strategy": {"description": "Specify strategy to use when padding.", "label": "Pad values", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["Repeat last item", "Empty item"], "value": [0], "value_names": ["Repeat last item"], "editor": {"include_empty": false, "options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="template" scheme="hdf5" type="[adaf]" type_base="[&lt;a&gt;]" uuid="{a18b4cc0-e00b-41ee-8db0-48b13c9d825b}">
        <label>List with deciding length</label>
        <description>List with deciding length</description>
      </input>
      <input key="list" scheme="hdf5" type="[adaf]" type_base="[&lt;b&gt;]" uuid="{c3547055-fc14-4e4c-982f-f8f569a08f33}">
        <label>List that will be padded</label>
        <description>List that will be padded</description>
      </input>
      <output key="list" scheme="hdf5" type="[adaf]" type_base="[&lt;b&gt;]" uuid="{8f76bf17-0890-48cf-9207-ddec4848416d}">
        <label>Padded List</label>
        <description>Padded List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.padlist" uuid="{89adf171-dc9f-48ef-a896-487bc12da99a}" x="1675.0" y="1900.0">
    <label>Pad List
Repeat last item</label>
    <description>Pad a list to match the length of template</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "strategy": {"description": "Specify strategy to use when padding.", "label": "Pad values", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["Repeat last item", "Empty item"], "value": [0], "value_names": ["Repeat last item"], "editor": {"include_empty": false, "options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="template" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{f43c05ff-b416-41ed-a68a-148ac703ad17}">
        <label>List with deciding length</label>
        <description>List with deciding length</description>
      </input>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{2ac94c9b-d1ef-4d7e-a74f-8f1b98d50bea}">
        <label>List that will be padded</label>
        <description>List that will be padded</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{f30d3310-1ee8-46bc-b34c-de9796c8d3b7}">
        <label>Padded List</label>
        <description>Padded List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.padlist" uuid="{94d4e448-0242-48ac-98f3-bc1ee473148c}" x="1675.0" y="1825.0">
    <label>Pad List
Match Table list lengths</label>
    <description>Pad a list to match the length of template</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "strategy": {"description": "Specify strategy to use when padding.", "label": "Pad values", "order": 0, "passthrough": false, "type": "list", "list": ["Repeat last item", "Empty item"], "value": [1], "value_names": ["Empty item"], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="template" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{abe95305-fe69-4793-93cf-e59e11d76097}">
        <label>List with deciding length</label>
        <description>List with deciding length</description>
      </input>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{e91f220d-71c4-4a01-ab1e-ddf164270429}">
        <label>List that will be padded</label>
        <description>List that will be padded</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{979cc6a9-b211-425d-a548-17939639623f}">
        <label>Padded List</label>
        <description>Padded List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomadafs" uuid="{aa25b1bd-dba9-4901-abf6-4a1ea7639f9a}" x="1450.0" y="1550.0">
    <label>Random ADAFs 2</label>
    <description>Random ADAFs generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "meta_entries": {"description": "The number of meta entries to be generated.", "label": "Meta columns:", "order": 0, "type": "integer", "value": 1, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "meta_attributes": {"description": "The number of meta attributes to be generated.", "label": "Meta attributes:", "order": 1, "type": "integer", "value": 1, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}, "res_entries": {"description": "The number of res entries to be generated.", "label": "Res columns:", "order": 2, "type": "integer", "value": 1, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "res_attributes": {"description": "The number of res attributes to be generated.", "label": "Res attributes:", "order": 3, "type": "integer", "value": 1, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}, "systems": {"description": "The number of systems to be generated.", "label": "Systems", "order": 4, "type": "integer", "value": 2, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "rasters": {"description": "The number of rasters to be generated.", "label": "Rasters per system", "order": 5, "type": "integer", "value": 2, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "signal_entries": {"description": "The number of signal entries to be generated.", "label": "Signals per raster", "order": 6, "type": "integer", "value": 10, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "signal_attributes": {"description": "The number of signal attributes to be generated.", "label": "Signal attributes", "order": 7, "type": "integer", "value": 1, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "signal_length": {"description": "The length of signals to be generated.", "label": "Signal length", "order": 8, "type": "integer", "value": 10, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "length": {"description": "The number of adafs to be generated.", "label": "List length", "order": 9, "type": "integer", "value": 2, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{bd2e6161-323a-44eb-b511-7ca7ad3c6be1}">
        <label>ADAFs with random numbers. The specifications of the ADAFs are declared in the configuration.</label>
        <description>ADAFs with random numbers. The specifications of the ADAFs are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtables" uuid="{d7bed752-3d4c-451f-adc4-35761537a418}" x="1450.0" y="2000.0">
    <label>Random Tables 2</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_entries": {"description": "The number of columns in the generated table.", "label": "Columns:", "order": 0, "type": "integer", "value": 10, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_length": {"description": "The number of rows in the generated table.", "label": "Rows:", "order": 1, "type": "integer", "value": 10, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "mask_values": {"description": "If checked each value has a 50% chance to be masked.", "editor": null, "label": "Randomly mask values", "order": 2, "type": "boolean", "value": false}, "length": {"description": "The number of tables to be generated.", "label": "List length", "order": 3, "type": "integer", "value": 2, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{94a58e35-d662-4966-a16a-a58bc55e0b32}">
        <label>Tables with random numbers. The specifications of the Tables are declared in the configuration.</label>
        <description>Tables with random numbers. The specifications of the Tables are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomadafs" uuid="{d8cd9acf-8e58-46bc-87e4-0ace42b69f0d}" x="1450.0" y="1650.0">
    <label>Random ADAFs 1</label>
    <description>Random ADAFs generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "meta_entries": {"description": "The number of meta entries to be generated.", "label": "Meta columns:", "order": 0, "type": "integer", "value": 1, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "meta_attributes": {"description": "The number of meta attributes to be generated.", "label": "Meta attributes:", "order": 1, "type": "integer", "value": 1, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}, "res_entries": {"description": "The number of res entries to be generated.", "label": "Res columns:", "order": 2, "type": "integer", "value": 1, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "res_attributes": {"description": "The number of res attributes to be generated.", "label": "Res attributes:", "order": 3, "type": "integer", "value": 1, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}, "systems": {"description": "The number of systems to be generated.", "label": "Systems", "order": 4, "type": "integer", "value": 2, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "rasters": {"description": "The number of rasters to be generated.", "label": "Rasters per system", "order": 5, "type": "integer", "value": 2, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "signal_entries": {"description": "The number of signal entries to be generated.", "label": "Signals per raster", "order": 6, "type": "integer", "value": 10, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "signal_attributes": {"description": "The number of signal attributes to be generated.", "label": "Signal attributes", "order": 7, "type": "integer", "value": 1, "editor": {"max": 100, "min": 0, "step": 1, "type": "spinbox"}}, "signal_length": {"description": "The length of signals to be generated.", "label": "Signal length", "order": 8, "type": "integer", "value": 10, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "length": {"description": "The number of adafs to be generated.", "label": "List length", "order": 9, "type": "integer", "value": 1, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{2b9cd8be-c28f-4d23-a1ba-0a1f5ba59adf}">
        <label>ADAFs with random numbers. The specifications of the ADAFs are declared in the configuration.</label>
        <description>ADAFs with random numbers. The specifications of the ADAFs are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.padlist" uuid="{fc95c242-44ce-46e7-a185-196e665b3543}" x="1675.0" y="1750.0">
    <label>Pad List</label>
    <description>Pad a list to match the length of template</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "strategy": {"description": "Specify strategy to use when padding.", "label": "Pad values", "order": 0, "passthrough": false, "type": "list", "list": ["Repeat last item", "Empty item"], "value": [1], "value_names": ["Empty item"], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="template" scheme="hdf5" type="[adaf]" type_base="[&lt;a&gt;]" uuid="{277c621f-e87b-4644-8fa5-02c2e56e794a}">
        <label>List with deciding length</label>
        <description>List with deciding length</description>
      </input>
      <input key="list" scheme="hdf5" type="[adaf]" type_base="[&lt;b&gt;]" uuid="{b46ab7f0-005e-441f-a344-15963bf6900c}">
        <label>List that will be padded</label>
        <description>List that will be padded</description>
      </input>
      <output key="list" scheme="hdf5" type="[adaf]" type_base="[&lt;b&gt;]" uuid="{cc29865e-ec4f-41d9-85d8-e7e7128006de}">
        <label>Padded List</label>
        <description>Padded List</description>
      </output>
    </ports>
  </node>
  <connection type="[table]" uuid="{11a3f872-3309-4bd7-b63a-0a580bc010e4}">
    <source node="{d7bed752-3d4c-451f-adc4-35761537a418}" port="{94a58e35-d662-4966-a16a-a58bc55e0b32}"/>
    <destination node="{4d5a0fdd-c85f-469f-9d5e-df2a07d3d847}" port="{8b3dde76-cf04-45c0-a44d-7b75b7531ade}"/>
  </connection>
  <connection type="[table]" uuid="{2808907d-dee6-4f06-b71a-dcd1cb1fc79e}">
    <source node="{d7bed752-3d4c-451f-adc4-35761537a418}" port="{94a58e35-d662-4966-a16a-a58bc55e0b32}"/>
    <destination node="{1c3fa738-8693-4149-bdd3-1c5abee9b624}" port="{d932d45a-adb7-44d2-8180-64936e52e382}"/>
  </connection>
  <connection type="[table]" uuid="{2e39af4c-0a42-4a11-b373-748662c5b531}">
    <source node="{15610b79-da62-49e5-8dca-9aa80a65b77d}" port="{029e0272-7771-461e-a8a1-a2d28fce55f6}"/>
    <destination node="{89adf171-dc9f-48ef-a896-487bc12da99a}" port="{2ac94c9b-d1ef-4d7e-a74f-8f1b98d50bea}"/>
  </connection>
  <connection type="[table]" uuid="{366d8dff-ef53-4af5-9149-286383b00476}">
    <source node="{3b897eda-c41c-435f-969d-dcb1817f6d3b}" port="{596ba305-891e-4f1d-aafd-da3a0b5ef6f5}"/>
    <destination node="{4d5a0fdd-c85f-469f-9d5e-df2a07d3d847}" port="{64595693-74f5-446c-a6b3-046183eb1b12}"/>
  </connection>
  <connection type="[adaf]" uuid="{3f6d8e7c-48d7-4d65-9f0b-9f5e8c20eaff}">
    <source node="{d8cd9acf-8e58-46bc-87e4-0ace42b69f0d}" port="{2b9cd8be-c28f-4d23-a1ba-0a1f5ba59adf}"/>
    <destination node="{4f808889-4f5d-490e-bbb0-81f8008058ab}" port="{ca481d20-630f-4f0b-b45e-cc289e291a6b}"/>
  </connection>
  <connection type="[table]" uuid="{5ee41177-ee7e-4aa9-89a1-ff07f799daee}">
    <source node="{15610b79-da62-49e5-8dca-9aa80a65b77d}" port="{029e0272-7771-461e-a8a1-a2d28fce55f6}"/>
    <destination node="{94d4e448-0242-48ac-98f3-bc1ee473148c}" port="{e91f220d-71c4-4a01-ab1e-ddf164270429}"/>
  </connection>
  <connection type="[adaf]" uuid="{6fe28598-b9d8-4dba-a2eb-a45127f0cab7}">
    <source node="{2e1eea4c-ae56-4c9c-93e2-ae16ae546914}" port="{45c54c80-66b5-4fcc-bd3e-86affd9c672e}"/>
    <destination node="{31776230-e14d-4765-9894-7ee4911a2dcb}" port="{aaeffc04-9456-48dc-8f05-bf5757829dc0}"/>
  </connection>
  <connection type="[adaf]" uuid="{72785b6b-8495-432b-8134-3d01f8433e73}">
    <source node="{d8cd9acf-8e58-46bc-87e4-0ace42b69f0d}" port="{2b9cd8be-c28f-4d23-a1ba-0a1f5ba59adf}"/>
    <destination node="{fc95c242-44ce-46e7-a185-196e665b3543}" port="{277c621f-e87b-4644-8fa5-02c2e56e794a}"/>
  </connection>
  <connection type="[table]" uuid="{a121e2bf-c5fd-4a0d-94b0-e9459dcf7722}">
    <source node="{3b897eda-c41c-435f-969d-dcb1817f6d3b}" port="{596ba305-891e-4f1d-aafd-da3a0b5ef6f5}"/>
    <destination node="{5090903a-eb15-49cc-8990-16e22bc038c7}" port="{975526f4-bd3b-4fa5-a0ff-ac042e610569}"/>
  </connection>
  <connection type="[table]" uuid="{adacd271-9364-4f18-9c71-17eff0471a52}">
    <source node="{42e43328-4e36-4cab-bbdd-5bcc1a2b7136}" port="{cbb815e6-479f-40f9-8bea-faca768ab9ad}"/>
    <destination node="{89adf171-dc9f-48ef-a896-487bc12da99a}" port="{f43c05ff-b416-41ed-a68a-148ac703ad17}"/>
  </connection>
  <connection type="[adaf]" uuid="{b083e46e-b72b-4bac-ab52-b45713642706}">
    <source node="{52172029-366e-448a-8472-3da50f4280fd}" port="{213c4f4a-6513-4650-b19b-23805199c0fb}"/>
    <destination node="{31776230-e14d-4765-9894-7ee4911a2dcb}" port="{904cb931-8708-4655-89a5-e6951b3c8f38}"/>
  </connection>
  <connection type="[adaf]" uuid="{b2e4c17a-270f-4157-a2d8-d0fadd536c00}">
    <source node="{aa25b1bd-dba9-4901-abf6-4a1ea7639f9a}" port="{bd2e6161-323a-44eb-b511-7ca7ad3c6be1}"/>
    <destination node="{4f808889-4f5d-490e-bbb0-81f8008058ab}" port="{81717400-ef1e-4c10-b1ac-d6188dc5de24}"/>
  </connection>
  <connection type="[adaf]" uuid="{bc3be7a7-4dcc-4f58-8c0e-1063bad6b01f}">
    <source node="{2e1eea4c-ae56-4c9c-93e2-ae16ae546914}" port="{45c54c80-66b5-4fcc-bd3e-86affd9c672e}"/>
    <destination node="{535f6f45-ca5c-4799-b8ad-cb974493fcf2}" port="{a18b4cc0-e00b-41ee-8db0-48b13c9d825b}"/>
  </connection>
  <connection type="[table]" uuid="{bc589905-4772-4d9a-ba6c-845416f01874}">
    <source node="{d7bed752-3d4c-451f-adc4-35761537a418}" port="{94a58e35-d662-4966-a16a-a58bc55e0b32}"/>
    <destination node="{5090903a-eb15-49cc-8990-16e22bc038c7}" port="{1f647406-c340-470a-8cb1-fe85e7f1e442}"/>
  </connection>
  <connection type="[adaf]" uuid="{c951b14b-83a5-46d4-b8f6-7e216e014399}">
    <source node="{aa25b1bd-dba9-4901-abf6-4a1ea7639f9a}" port="{bd2e6161-323a-44eb-b511-7ca7ad3c6be1}"/>
    <destination node="{fc95c242-44ce-46e7-a185-196e665b3543}" port="{b46ab7f0-005e-441f-a344-15963bf6900c}"/>
  </connection>
  <connection type="[table]" uuid="{cbb0d11f-cefb-4c7e-ad70-0adb234fd45e}">
    <source node="{42e43328-4e36-4cab-bbdd-5bcc1a2b7136}" port="{cbb815e6-479f-40f9-8bea-faca768ab9ad}"/>
    <destination node="{94d4e448-0242-48ac-98f3-bc1ee473148c}" port="{abe95305-fe69-4793-93cf-e59e11d76097}"/>
  </connection>
  <connection type="[adaf]" uuid="{d720e683-9458-42ce-a371-ec1e328a0662}">
    <source node="{d8cd9acf-8e58-46bc-87e4-0ace42b69f0d}" port="{2b9cd8be-c28f-4d23-a1ba-0a1f5ba59adf}"/>
    <destination node="{50912077-2323-4eaa-83ff-211c701d99ca}" port="{f1906435-dfe5-4ae1-83a0-eee36138918f}"/>
  </connection>
  <connection type="[adaf]" uuid="{e054f38d-0c9a-48df-b2a9-4c800af85afc}">
    <source node="{52172029-366e-448a-8472-3da50f4280fd}" port="{213c4f4a-6513-4650-b19b-23805199c0fb}"/>
    <destination node="{535f6f45-ca5c-4799-b8ad-cb974493fcf2}" port="{c3547055-fc14-4e4c-982f-f8f569a08f33}"/>
  </connection>
  <connection type="[table]" uuid="{e17f3078-b2e3-4ce2-89cb-ad9875447e88}">
    <source node="{3b897eda-c41c-435f-969d-dcb1817f6d3b}" port="{596ba305-891e-4f1d-aafd-da3a0b5ef6f5}"/>
    <destination node="{1c3fa738-8693-4149-bdd3-1c5abee9b624}" port="{871962cb-838f-4bc2-a3a4-9dd4fb598bd6}"/>
  </connection>
  <connection type="[adaf]" uuid="{f714543d-a2a8-491e-ba0f-2347b3dd3a25}">
    <source node="{aa25b1bd-dba9-4901-abf6-4a1ea7639f9a}" port="{bd2e6161-323a-44eb-b511-7ca7ad3c6be1}"/>
    <destination node="{50912077-2323-4eaa-83ff-211c701d99ca}" port="{1b81d68d-a6d6-417f-9f49-3c684d9ad320}"/>
  </connection>
</flow>
