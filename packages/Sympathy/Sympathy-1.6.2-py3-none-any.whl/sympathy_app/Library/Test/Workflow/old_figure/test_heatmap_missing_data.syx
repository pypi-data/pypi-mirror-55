<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{bafda40e-ae6d-41ea-af6a-b78dc014603d}" width="50.0" x="0.0" y="0.0">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <icon/>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <environment type="json">{}</environment>
  <parameters type="json">{"environment": {}}</parameters>
  <ports/>
  <flow cls="Flow" height="50.0" id="" is_locked="True" uuid="{1c42f9b2-1a8c-47b9-a477-62ccaef6cf42}" width="50.0" x="1800.0" y="1825.0">
    <label>Linear scale</label>
    <description></description>
    <author></author>
    <copyright></copyright>
    <version></version>
    <min_version></min_version>
    <icon/>
    <aggregation type="json">null</aggregation>
    <libraries type="json">[]</libraries>
    <pythonpaths type="json">[]</pythonpaths>
    <environment type="json">{}</environment>
    <parameters type="json">{"environment": {}}</parameters>
    <ports>
      <input index="0" key="Port" optional="False" parent="True" scheme="hdf5" type="table" uuid="{09134ea9-ff4b-4d22-9650-b1038372fe82}" x="1750.0" y="1875.0">
        <label>Port</label>
        <description>Port</description>
      </input>
    </ports>
    <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{25103bb4-a108-4c62-8c30-5db85edd2866}" width="50.0" x="1900.0" y="1975.0">
      <label>Diverging colormap</label>
      <description></description>
      <author></author>
      <copyright></copyright>
      <version></version>
      <min_version></min_version>
      <icon/>
      <aggregation type="json">null</aggregation>
      <libraries type="json">[]</libraries>
      <pythonpaths type="json">[]</pythonpaths>
      <environment type="json">{}</environment>
      <parameters type="json">{"environment": {}}</parameters>
      <ports>
        <input index="0" key="Port" optional="False" parent="True" scheme="hdf5" type="table" uuid="{64186a66-3f4c-4d65-a114-3a73b2a130a6}" x="1675.0" y="1775.0">
          <label>Port</label>
          <description>Port</description>
        </input>
      </ports>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{246b61eb-23a9-4b5d-8843-6d92f8a3d531}" x="2150.0" y="1775.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.colormap\", \"red - blue (diverging)\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{0a1f5e0f-5764-414c-b063-3f832ada9ee8}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{175c89ad-8d83-4e19-b0fc-433386acf8fb}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{e077d4ea-9fd0-4554-8498-c1854ea51269}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{26d19b0d-8db9-47ae-9254-f5b0f8e16f7a}" x="2150.0" y="2375.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.colormap\", \"red - blue (diverging)\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{c1297a8a-d9c2-4649-90f0-c97ae84a4364}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{8f78f173-0a1e-4db2-8426-974f7f3bb572}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{8e52daa4-68ec-4b15-88bc-ad70594d03bd}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{3912437a-53e3-47d3-9ceb-28cc72384d09}" x="2150.0" y="2275.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.colormap\", \"red - blue (diverging)\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{e5e5eb88-687d-4842-a056-6eb7b9df3ce1}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{499bb02c-7d78-4989-838b-d41505ca4765}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{881c1c2d-c2d1-4d7c-9f10-db7ab76aa1c3}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{49b54e63-c21d-4f68-a0dd-182c877fe285}" x="2150.0" y="2175.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.colormap\", \"red - blue (diverging)\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{a3d39d48-568b-4a33-a4f3-9ee0057d9c3c}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{9ef402fd-1dfe-4f29-ab55-97dca1984b45}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{d8d3645d-0106-44b0-9251-4fafff4646bc}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{826142e4-fd09-4c37-8a1b-35e203fab2f7}" x="2150.0" y="2475.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.colormap\", \"red - blue (diverging)\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{387d79a6-d108-40af-a49c-a0311d92d02d}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{4bee766d-fffd-4e65-a333-f2c248a6c0f7}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{cac5f24b-3738-4299-8a00-568756b25e06}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{8dfe3363-bf45-4f26-89f6-1a0ccd7a27c9}" x="2000.0" y="2075.0">
        <label>Slice 0 positive values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[20:]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{17959384-0f3f-422c-9fd9-8dcb2616c245}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{b5315edb-955d-4c07-8f97-7952aa71bd0a}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{98521365-ce25-4325-8300-fc4a8f8d3712}" x="2000.0" y="1875.0">
        <label>Slice 2 positive finite values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[:10]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{a0208625-f8d3-43e4-868e-f94f9e27e865}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{c6c5e251-1dc7-4b97-b804-5e3a340114e3}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{9e532984-c79d-4adf-a9a5-37ab0454bf1b}" x="2150.0" y="1975.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.colormap\", \"red - blue (diverging)\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{72480e51-9632-44cd-998a-5aa0e388d887}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{ce27e87e-46d8-40f4-957d-e42778f48042}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{a6082592-7a48-46d5-aa2d-573b13920020}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{a214ec1a-36cc-4ee3-9d6e-06e50afcd2b8}" x="2150.0" y="2075.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.colormap\", \"red - blue (diverging)\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{8f3556e6-4532-4029-bfef-3175f19f39fb}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{2b00b31b-da52-42b4-b5c7-abd9b849df5b}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{b685f97d-e33d-468e-b181-69ad90d76a6f}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{bf652565-ed5b-4457-83af-16724d68c42e}" x="2000.0" y="2275.0">
        <label>Slice 2 positive finite values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[:10]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{34fddd31-dbc6-4678-bc40-bd05f574d526}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{e27a602d-9280-4180-b264-6521986da339}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{d6eb0748-0d61-4135-b4d2-0f5b85b9a4f9}" x="2000.0" y="1975.0">
        <label>Slice 1 positive value</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[10:20]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{b6231eca-db80-4751-9d8b-124b3ce34620}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{6a967dbe-090e-435a-96f1-b0a61910f785}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{db80df3c-d0d1-4f82-aa57-bae1eb1127f5}" x="2000.0" y="2475.0">
        <label>Slice 0 positive values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[20:]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{b80d0744-b6e2-4431-b905-6081f938dcb5}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{a913ccc4-6686-41f6-8ac7-08a388506447}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{db8a6099-dd4c-464b-828f-52d3d43834b5}" x="2000.0" y="2375.0">
        <label>Slice 1 positive value</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[10:20]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{e3f5a9fa-10c7-4629-a0e7-199088119da4}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{ca85f455-72e6-4353-ba9c-abc993e6d455}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.data.table.calculatorgeneric" uuid="{e3afccc2-1e38-4de5-b381-fa32eb3012bc}" x="1800.0" y="2175.0">
        <label>Masked -&gt; NaN</label>
        <description>Performs user-defined python calculations</description>
        <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>3.0</version>
        <parameters type="json">{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["Bin values = np.ma.where(~arg.col('Bin values').data.mask, arg.col('Bin values').data, np.nan) #ENABLED:1"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming data into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}, "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the calculations. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Copy input", "order": 2, "type": "boolean", "value": true}, "fail_strategy": {"description": "Decide how a failed calculation should be handled", "label": "Action on calculation failure", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["Exception", "Skip calculation"], "value": [0], "value_names": [], "editor": {"include_empty": false, "type": "combobox", "options": []}}}</parameters>
        <ports>
          <input key="port0" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{6f1cb1d4-36d6-4b16-afe1-482413f90b4c}">
            <label>Generic Input</label>
            <description>Generic Input</description>
          </input>
          <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{c2817310-17e4-4539-9b34-3f6b120059a5}">
            <label>Table with results from the calculations.</label>
            <description>Table with results from the calculations.</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{fc812d8d-4f18-4b17-a0e0-b61fc082a23d}" x="2150.0" y="1875.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.colormap\", \"red - blue (diverging)\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{7424e007-dc94-4922-a5df-80f7c8dea3e6}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{44ba1f2b-3345-4348-b42d-b55faaa5848f}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{6270ae3b-0303-494a-867b-09a0a73e9ba0}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <connection type="table" uuid="{016c9a91-ab8e-4a9c-8cd4-6d9898ac7b8a}">
        <source node="{e3afccc2-1e38-4de5-b381-fa32eb3012bc}" port="{c2817310-17e4-4539-9b34-3f6b120059a5}"/>
        <destination node="{db8a6099-dd4c-464b-828f-52d3d43834b5}" port="{e3f5a9fa-10c7-4629-a0e7-199088119da4}"/>
      </connection>
      <connection type="table" uuid="{20555b74-c89d-4b0a-934c-1cc4488d281f}">
        <source node="{bf652565-ed5b-4457-83af-16724d68c42e}" port="{e27a602d-9280-4180-b264-6521986da339}"/>
        <destination node="{3912437a-53e3-47d3-9ceb-28cc72384d09}" port="{e5e5eb88-687d-4842-a056-6eb7b9df3ce1}"/>
      </connection>
      <connection type="table" uuid="{225839ed-d5ed-4aae-9de9-335375d25c9b}">
        <source node="{25103bb4-a108-4c62-8c30-5db85edd2866}" port="{64186a66-3f4c-4d65-a114-3a73b2a130a6}"/>
        <destination node="{e3afccc2-1e38-4de5-b381-fa32eb3012bc}" port="{6f1cb1d4-36d6-4b16-afe1-482413f90b4c}"/>
      </connection>
      <connection type="table" uuid="{267cdf3e-e0f7-4c6c-bace-c9ab67c99af0}">
        <source node="{25103bb4-a108-4c62-8c30-5db85edd2866}" port="{64186a66-3f4c-4d65-a114-3a73b2a130a6}"/>
        <destination node="{98521365-ce25-4325-8300-fc4a8f8d3712}" port="{a0208625-f8d3-43e4-868e-f94f9e27e865}"/>
      </connection>
      <connection type="table" uuid="{28887095-eca7-4881-a9cd-e34b6e1d062a}">
        <source node="{25103bb4-a108-4c62-8c30-5db85edd2866}" port="{64186a66-3f4c-4d65-a114-3a73b2a130a6}"/>
        <destination node="{8dfe3363-bf45-4f26-89f6-1a0ccd7a27c9}" port="{17959384-0f3f-422c-9fd9-8dcb2616c245}"/>
      </connection>
      <connection type="table" uuid="{3e2ca924-28b7-4e5f-b1ee-102049a96954}">
        <source node="{25103bb4-a108-4c62-8c30-5db85edd2866}" port="{64186a66-3f4c-4d65-a114-3a73b2a130a6}"/>
        <destination node="{246b61eb-23a9-4b5d-8843-6d92f8a3d531}" port="{0a1f5e0f-5764-414c-b063-3f832ada9ee8}"/>
      </connection>
      <connection type="table" uuid="{4430aee7-0151-4673-8622-d83e2b4b7fe4}">
        <source node="{98521365-ce25-4325-8300-fc4a8f8d3712}" port="{c6c5e251-1dc7-4b97-b804-5e3a340114e3}"/>
        <destination node="{fc812d8d-4f18-4b17-a0e0-b61fc082a23d}" port="{7424e007-dc94-4922-a5df-80f7c8dea3e6}"/>
      </connection>
      <connection type="table" uuid="{63f0b4df-4089-4933-9383-75732842fe79}">
        <source node="{e3afccc2-1e38-4de5-b381-fa32eb3012bc}" port="{c2817310-17e4-4539-9b34-3f6b120059a5}"/>
        <destination node="{bf652565-ed5b-4457-83af-16724d68c42e}" port="{34fddd31-dbc6-4678-bc40-bd05f574d526}"/>
      </connection>
      <connection type="table" uuid="{6f27d558-3559-487b-8386-a943f61aaad5}">
        <source node="{db80df3c-d0d1-4f82-aa57-bae1eb1127f5}" port="{a913ccc4-6686-41f6-8ac7-08a388506447}"/>
        <destination node="{826142e4-fd09-4c37-8a1b-35e203fab2f7}" port="{387d79a6-d108-40af-a49c-a0311d92d02d}"/>
      </connection>
      <connection type="table" uuid="{910c7353-6593-4376-bef4-8d4950f38f64}">
        <source node="{d6eb0748-0d61-4135-b4d2-0f5b85b9a4f9}" port="{6a967dbe-090e-435a-96f1-b0a61910f785}"/>
        <destination node="{9e532984-c79d-4adf-a9a5-37ab0454bf1b}" port="{72480e51-9632-44cd-998a-5aa0e388d887}"/>
      </connection>
      <connection type="table" uuid="{a4e49892-d696-4a7f-9deb-55b8bb3071d6}">
        <source node="{8dfe3363-bf45-4f26-89f6-1a0ccd7a27c9}" port="{b5315edb-955d-4c07-8f97-7952aa71bd0a}"/>
        <destination node="{a214ec1a-36cc-4ee3-9d6e-06e50afcd2b8}" port="{8f3556e6-4532-4029-bfef-3175f19f39fb}"/>
      </connection>
      <connection type="table" uuid="{dc9380bd-1313-4803-9ecd-d1281faf0b43}">
        <source node="{25103bb4-a108-4c62-8c30-5db85edd2866}" port="{64186a66-3f4c-4d65-a114-3a73b2a130a6}"/>
        <destination node="{d6eb0748-0d61-4135-b4d2-0f5b85b9a4f9}" port="{b6231eca-db80-4751-9d8b-124b3ce34620}"/>
      </connection>
      <connection type="table" uuid="{dfcd2957-866f-4a2e-8c34-79fff8b1746c}">
        <source node="{e3afccc2-1e38-4de5-b381-fa32eb3012bc}" port="{c2817310-17e4-4539-9b34-3f6b120059a5}"/>
        <destination node="{db80df3c-d0d1-4f82-aa57-bae1eb1127f5}" port="{b80d0744-b6e2-4431-b905-6081f938dcb5}"/>
      </connection>
      <connection type="table" uuid="{f36ce03b-a891-4348-b2e4-deb7db0b76b1}">
        <source node="{e3afccc2-1e38-4de5-b381-fa32eb3012bc}" port="{c2817310-17e4-4539-9b34-3f6b120059a5}"/>
        <destination node="{49b54e63-c21d-4f68-a0dd-182c877fe285}" port="{a3d39d48-568b-4a33-a4f3-9ee0057d9c3c}"/>
      </connection>
      <connection type="table" uuid="{faf42ef6-3dce-421f-a83a-b504e8571744}">
        <source node="{db8a6099-dd4c-464b-828f-52d3d43834b5}" port="{ca85f455-72e6-4353-ba9c-abc993e6d455}"/>
        <destination node="{26d19b0d-8db9-47ae-9254-f5b0f8e16f7a}" port="{c1297a8a-d9c2-4649-90f0-c97ae84a4364}"/>
      </connection>
    </flow>
    <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{c5fe1567-aa60-4c0f-bfee-8c6b9878e43f}" width="50.0" x="1900.0" y="1875.0">
      <label>Normal colormap</label>
      <description></description>
      <author></author>
      <copyright></copyright>
      <version></version>
      <min_version></min_version>
      <icon/>
      <aggregation type="json">null</aggregation>
      <libraries type="json">[]</libraries>
      <pythonpaths type="json">[]</pythonpaths>
      <environment type="json">{}</environment>
      <parameters type="json">{"environment": {}}</parameters>
      <ports>
        <input index="0" key="Port" optional="False" parent="True" scheme="hdf5" type="table" uuid="{561b660a-ce3a-48b3-86a7-c00c313a12fc}" x="1675.0" y="1775.0">
          <label>Port</label>
          <description>Port</description>
        </input>
      </ports>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{27a6ae95-f098-4249-99ff-fcc42ecd56f1}" x="2150.0" y="1975.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.colormap\", \"magma\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{82ebaeef-28a1-429c-9170-2765cfe0a8b4}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{eeb0d46a-cf4c-48b2-ad6f-42533ee684e0}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{4219324a-66a7-4293-9fc9-94e8412badb4}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{28d84f25-cf14-4f07-b893-4059adcfcff2}" x="2000.0" y="1975.0">
        <label>Slice 1 positive value</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[10:20]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{4e2cc027-c362-4a90-ac54-8e311c666290}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{56cd64d1-765f-4ecc-bd27-1efd90ddca33}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{2b6b96c7-aab5-4994-9426-a5c22e1cb2b4}" x="2150.0" y="2375.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.colormap\", \"magma\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{89a4b673-3daf-42a0-9f8c-86c27023c41c}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{35a6569f-0370-4370-834c-946aa2d83302}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{f746e02d-1e65-4192-a7c2-8aa88603a370}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{355a0e31-ef6c-43de-9375-65c913629229}" x="2150.0" y="2175.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.colormap\", \"magma\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{6e543302-b469-4128-9efd-96736302902c}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{a4a07235-5b58-47d8-a586-a0b8110ee610}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{00b15bb9-0c47-459a-84cf-ecd6574dfe21}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{637607a9-9811-41c1-ac44-089216f064c3}" x="2000.0" y="2075.0">
        <label>Slice 0 positive values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[20:]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{2a05daf6-d582-49f0-ad1f-61fbb21a569d}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{2fd66223-2671-4811-a412-2d59848bad08}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{7609e354-3fd8-4211-80ac-80d983751970}" x="2150.0" y="1875.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.colormap\", \"magma\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{53b7e929-b041-40ed-8c8e-2f5fc96abb3f}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{42b39b25-8fb7-4c69-9ec7-e976b6c10e57}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{1d82fdff-faa0-43dd-b5e3-2d76aacd4817}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{99b0f475-d8d7-42ee-a49b-51c82ef66bc5}" x="2150.0" y="2275.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.colormap\", \"magma\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{5b79f331-4eb5-4406-be77-46a493edbb3b}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{a247a7a4-e418-464c-a575-8303188689f2}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{1887b2ef-dfa1-4fe5-9ad0-62c1682925f5}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{a71ed9f8-9387-438d-b822-b2f0ea45e3a3}" x="2000.0" y="2375.0">
        <label>Slice 1 positive value</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[10:20]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{94cdb69f-034d-4da7-b9bd-fdbc9679c6e8}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{edfa373d-e4db-42c5-bcee-29351ead240b}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{ab022005-84d9-425a-853c-cf1b8e53d55e}" x="2150.0" y="2075.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.colormap\", \"magma\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{01b3193c-58be-4199-b476-9494abb268f9}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{c4dbfb04-97c5-43d2-8721-40bb3c27d80b}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{6a3624d3-6ec2-4a48-bf74-7c3ea07eb3cf}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{b20a02b2-a9ab-420f-b165-691c552d605c}" x="2150.0" y="1775.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.colormap\", \"magma\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{42aa868b-a932-4f75-8cb4-a5ec5fd1e570}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{47c3ccc4-2608-4bea-86d8-39ba5c0aba75}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{49be3792-2fb1-44cb-8a5f-fd7f5bd46328}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{b9ba464d-8203-4fbe-a57c-5bbc3d8d0f29}" x="2150.0" y="2475.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.colormap\", \"magma\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{edb44461-786d-4842-905e-385c642984c9}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{65faf7cc-8667-445a-9294-72022d80d054}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{6752b7b4-83d8-4f20-a0ad-bd220318ac4b}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{cb2eedc3-32aa-4e72-a1d4-2266ccb7d215}" x="2000.0" y="2275.0">
        <label>Slice 2 positive finite values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[:10]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{782a4be9-2321-497a-af84-0c28bd9e66b1}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{893e6bbc-2abf-493e-bcc4-3afe3bc155fc}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{ccee4d5a-9c4b-4000-86f0-e88b10653d8d}" x="2000.0" y="2475.0">
        <label>Slice 0 positive values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[20:]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{fc2311cb-25cb-4927-bcb0-b8823d1daca5}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{eebd462b-4dfa-4242-812e-1cea4211213f}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.data.table.calculatorgeneric" uuid="{dad62ef2-2c30-4dcc-80cb-ea24723dcc47}" x="1800.0" y="2175.0">
        <label>Masked -&gt; NaN</label>
        <description>Performs user-defined python calculations</description>
        <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>3.0</version>
        <parameters type="json">{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["Bin values = np.ma.where(~arg.col('Bin values').data.mask, arg.col('Bin values').data, np.nan) #ENABLED:1"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming data into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}, "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the calculations. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Copy input", "order": 2, "type": "boolean", "value": true}, "fail_strategy": {"description": "Decide how a failed calculation should be handled", "label": "Action on calculation failure", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["Exception", "Skip calculation"], "value": [0], "value_names": [], "editor": {"include_empty": false, "type": "combobox", "options": []}}}</parameters>
        <ports>
          <input key="port0" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{a25c4b88-45ce-4a8d-8ea5-036003ca2c8a}">
            <label>Generic Input</label>
            <description>Generic Input</description>
          </input>
          <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{d4562813-081a-4f28-88d4-66ec234b049b}">
            <label>Table with results from the calculations.</label>
            <description>Table with results from the calculations.</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{dd6121ec-6084-41b9-9da4-2d8019efed3b}" x="2000.0" y="1875.0">
        <label>Slice 2 positive finite values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[:10]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{2466fd11-185f-41f4-9334-ff5ab9afda5f}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{39405e45-c566-4eb5-b90b-5ff707a5a913}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <connection type="table" uuid="{14131473-d0f8-424a-a4c9-26f6db4b143a}">
        <source node="{dad62ef2-2c30-4dcc-80cb-ea24723dcc47}" port="{d4562813-081a-4f28-88d4-66ec234b049b}"/>
        <destination node="{cb2eedc3-32aa-4e72-a1d4-2266ccb7d215}" port="{782a4be9-2321-497a-af84-0c28bd9e66b1}"/>
      </connection>
      <connection type="table" uuid="{2c050f53-c506-4a5d-bde1-56f6776ed191}">
        <source node="{28d84f25-cf14-4f07-b893-4059adcfcff2}" port="{56cd64d1-765f-4ecc-bd27-1efd90ddca33}"/>
        <destination node="{27a6ae95-f098-4249-99ff-fcc42ecd56f1}" port="{82ebaeef-28a1-429c-9170-2765cfe0a8b4}"/>
      </connection>
      <connection type="table" uuid="{3036a89f-001e-4780-b86c-8e281d645c61}">
        <source node="{c5fe1567-aa60-4c0f-bfee-8c6b9878e43f}" port="{561b660a-ce3a-48b3-86a7-c00c313a12fc}"/>
        <destination node="{dd6121ec-6084-41b9-9da4-2d8019efed3b}" port="{2466fd11-185f-41f4-9334-ff5ab9afda5f}"/>
      </connection>
      <connection type="table" uuid="{3aab4016-f41f-4f73-b425-b37113379fe1}">
        <source node="{c5fe1567-aa60-4c0f-bfee-8c6b9878e43f}" port="{561b660a-ce3a-48b3-86a7-c00c313a12fc}"/>
        <destination node="{28d84f25-cf14-4f07-b893-4059adcfcff2}" port="{4e2cc027-c362-4a90-ac54-8e311c666290}"/>
      </connection>
      <connection type="table" uuid="{4096a2f5-adab-407f-ab32-e1a60bcd2b90}">
        <source node="{637607a9-9811-41c1-ac44-089216f064c3}" port="{2fd66223-2671-4811-a412-2d59848bad08}"/>
        <destination node="{ab022005-84d9-425a-853c-cf1b8e53d55e}" port="{01b3193c-58be-4199-b476-9494abb268f9}"/>
      </connection>
      <connection type="table" uuid="{46a9423e-cade-494e-9815-1aafdaa749b2}">
        <source node="{cb2eedc3-32aa-4e72-a1d4-2266ccb7d215}" port="{893e6bbc-2abf-493e-bcc4-3afe3bc155fc}"/>
        <destination node="{99b0f475-d8d7-42ee-a49b-51c82ef66bc5}" port="{5b79f331-4eb5-4406-be77-46a493edbb3b}"/>
      </connection>
      <connection type="table" uuid="{46d15683-fb4b-4213-8838-c5af861abbea}">
        <source node="{dd6121ec-6084-41b9-9da4-2d8019efed3b}" port="{39405e45-c566-4eb5-b90b-5ff707a5a913}"/>
        <destination node="{7609e354-3fd8-4211-80ac-80d983751970}" port="{53b7e929-b041-40ed-8c8e-2f5fc96abb3f}"/>
      </connection>
      <connection type="table" uuid="{6eea7f34-17ca-4243-849f-08879dff93f3}">
        <source node="{dad62ef2-2c30-4dcc-80cb-ea24723dcc47}" port="{d4562813-081a-4f28-88d4-66ec234b049b}"/>
        <destination node="{355a0e31-ef6c-43de-9375-65c913629229}" port="{6e543302-b469-4128-9efd-96736302902c}"/>
      </connection>
      <connection type="table" uuid="{71fbee39-21e9-4249-9430-165ab7cd3106}">
        <source node="{ccee4d5a-9c4b-4000-86f0-e88b10653d8d}" port="{eebd462b-4dfa-4242-812e-1cea4211213f}"/>
        <destination node="{b9ba464d-8203-4fbe-a57c-5bbc3d8d0f29}" port="{edb44461-786d-4842-905e-385c642984c9}"/>
      </connection>
      <connection type="table" uuid="{8549f1d6-4c41-4752-9713-4de19ca9bdd0}">
        <source node="{c5fe1567-aa60-4c0f-bfee-8c6b9878e43f}" port="{561b660a-ce3a-48b3-86a7-c00c313a12fc}"/>
        <destination node="{b20a02b2-a9ab-420f-b165-691c552d605c}" port="{42aa868b-a932-4f75-8cb4-a5ec5fd1e570}"/>
      </connection>
      <connection type="table" uuid="{9be9e7dc-e5f0-4cab-abe7-a09f0fd2f7a6}">
        <source node="{c5fe1567-aa60-4c0f-bfee-8c6b9878e43f}" port="{561b660a-ce3a-48b3-86a7-c00c313a12fc}"/>
        <destination node="{637607a9-9811-41c1-ac44-089216f064c3}" port="{2a05daf6-d582-49f0-ad1f-61fbb21a569d}"/>
      </connection>
      <connection type="table" uuid="{aac9c37c-19ac-4957-9ee8-e0de89340355}">
        <source node="{dad62ef2-2c30-4dcc-80cb-ea24723dcc47}" port="{d4562813-081a-4f28-88d4-66ec234b049b}"/>
        <destination node="{ccee4d5a-9c4b-4000-86f0-e88b10653d8d}" port="{fc2311cb-25cb-4927-bcb0-b8823d1daca5}"/>
      </connection>
      <connection type="table" uuid="{b664d7e3-ef1c-4ec5-86e6-59f9c6f56297}">
        <source node="{c5fe1567-aa60-4c0f-bfee-8c6b9878e43f}" port="{561b660a-ce3a-48b3-86a7-c00c313a12fc}"/>
        <destination node="{dad62ef2-2c30-4dcc-80cb-ea24723dcc47}" port="{a25c4b88-45ce-4a8d-8ea5-036003ca2c8a}"/>
      </connection>
      <connection type="table" uuid="{e8ba4436-02d7-46fa-8007-83b3af87e2cf}">
        <source node="{dad62ef2-2c30-4dcc-80cb-ea24723dcc47}" port="{d4562813-081a-4f28-88d4-66ec234b049b}"/>
        <destination node="{a71ed9f8-9387-438d-b822-b2f0ea45e3a3}" port="{94cdb69f-034d-4da7-b9bd-fdbc9679c6e8}"/>
      </connection>
      <connection type="table" uuid="{f4dcffb5-601d-4e80-80d4-9987ff8a81b4}">
        <source node="{a71ed9f8-9387-438d-b822-b2f0ea45e3a3}" port="{edfa373d-e4db-42c5-bcee-29351ead240b}"/>
        <destination node="{2b6b96c7-aab5-4994-9426-a5c22e1cb2b4}" port="{89a4b673-3daf-42a0-9f8c-86c27023c41c}"/>
      </connection>
    </flow>
    <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{ebcb1cdd-4771-4b7c-a9b1-a438b8b9e530}" width="50.0" x="1900.0" y="1775.0">
      <label>Auto colormap</label>
      <description></description>
      <author></author>
      <copyright></copyright>
      <version></version>
      <min_version></min_version>
      <icon/>
      <aggregation type="json">null</aggregation>
      <libraries type="json">[]</libraries>
      <pythonpaths type="json">[]</pythonpaths>
      <environment type="json">{}</environment>
      <parameters type="json">{"environment": {}}</parameters>
      <ports>
        <input index="0" key="Port" optional="False" parent="True" scheme="hdf5" type="table" uuid="{c7a50584-c366-4991-be3e-e41b1ecc1687}" x="1675.0" y="1775.0">
          <label>Port</label>
          <description>Port</description>
        </input>
      </ports>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{081d2132-4dc6-4090-9926-ff0fb4076345}" x="2150.0" y="2275.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{0bcf5049-08aa-4c68-95fa-7f3a0afb7873}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{ae5a2c2b-b750-4e97-8061-512f3b75c3a5}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{41bfac02-3756-47c3-ab5f-0fbc4f96c613}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{315058ab-cb55-4c7d-a531-cafbeb8c5692}" x="2000.0" y="1875.0">
        <label>Slice 2 positive finite values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[:10]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{4706f3e1-2003-48e4-897f-c764a0cb8759}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{654ccb2a-8b5a-435b-8a0a-b8f8db5ef297}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{4c70b0f7-2f43-44ef-87cb-ca5d95134f9a}" x="2150.0" y="1875.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{62e33a8d-40dd-473a-bcd9-c051aca03d44}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{82b314e2-e305-4fc8-b74f-aad36b144822}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{d661db83-4e50-45ee-8fab-b2bab7a2b8ae}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{52765e21-5ae7-4720-acf2-db63fdf39b53}" x="2150.0" y="2175.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{1eba2b2d-b705-46f4-bc65-36012572cd67}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{55f34d09-d5f8-4e5e-a1c3-c2051123a565}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{885c4a33-234c-4f4b-bed8-79e97df6a6f4}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{6c0a0dbd-a221-4e31-bb6c-f34542db227c}" x="2150.0" y="2475.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{54789538-8a2d-433c-b9c8-25a5ab9c4ff1}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{d1b75296-4aee-4350-a9d4-acadd83a57f6}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{07c4afd8-b124-4271-a9d7-a85ba3e5f34d}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{766f25c5-8488-49c2-b9a0-2e9d2f0c4497}" x="2150.0" y="2075.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{f3599deb-104a-4b51-838e-f73b3076e644}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{aadcd1ad-81ce-44bf-97ca-b2af694a2394}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{20928494-a96b-47ff-b425-b5bb09aac6df}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{88fed8ad-f3c8-486d-a7cc-19a99181a107}" x="2000.0" y="2375.0">
        <label>Slice 1 positive value</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[10:20]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{c495cecf-1d36-41fd-ad7f-2a99c7ccd074}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{db94140e-147b-4fff-bc38-112bce34394d}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{8e0b2d9a-dec6-40c6-b375-257111b20f77}" x="2000.0" y="2475.0">
        <label>Slice 0 positive values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[20:]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{3634b94c-c6fd-4ce3-9da9-e2946b6ccbe0}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{3d549513-990c-4cea-9577-790ac5087a83}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.data.table.calculatorgeneric" uuid="{977a728e-e836-4e1b-af7d-83444d142a94}" x="1800.0" y="2175.0">
        <label>Masked -&gt; NaN</label>
        <description>Performs user-defined python calculations</description>
        <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>3.0</version>
        <parameters type="json">{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["Bin values = np.ma.where(~arg.col('Bin values').data.mask, arg.col('Bin values').data, np.nan) #ENABLED:1"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming data into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}, "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the calculations. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Copy input", "order": 2, "type": "boolean", "value": true}, "fail_strategy": {"description": "Decide how a failed calculation should be handled", "label": "Action on calculation failure", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["Exception", "Skip calculation"], "value": [0], "value_names": [], "editor": {"include_empty": false, "type": "combobox", "options": []}}}</parameters>
        <ports>
          <input key="port0" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{058a27fa-7443-42d9-ad35-cdfec83158a7}">
            <label>Generic Input</label>
            <description>Generic Input</description>
          </input>
          <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{5420bf32-530a-4b41-9b6f-f77081c972ad}">
            <label>Table with results from the calculations.</label>
            <description>Table with results from the calculations.</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{a2c94e5f-183f-42fd-a195-8eec5bcbd2f9}" x="2000.0" y="2275.0">
        <label>Slice 2 positive finite values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[:10]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{3ac3955a-6dcc-4729-b280-5614f24522f6}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{cefd6579-9e6e-4af2-affd-8116f6750cf8}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{c0747169-f3ca-42ec-bdfc-c790642f0f3a}" x="2150.0" y="1775.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{cbfa4c35-8b20-4bc4-a76b-7e82a54c846e}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{70248fb9-bfef-4d8d-820d-7b643e130316}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{2dff56e6-9c19-4a67-8f9d-695b23d23fa6}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{c879b579-26f1-4cdc-b2be-d3fd6fdc45de}" x="2000.0" y="2075.0">
        <label>Slice 0 positive values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[20:]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{fe94aac1-6dd9-4ec3-84c8-ac83a36c0711}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{6e4cda77-7901-4c5c-bd99-64c488060e56}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{e215f07a-8256-4415-841a-b486096f52f0}" x="2150.0" y="2375.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{5767de8e-ae14-43d9-981f-750ec46880f9}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{513cd2df-046e-4ba8-9cf8-bc1ac17ee9cb}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{09e8bda3-f987-4fa4-a6cc-e4d473a176cf}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{e4e53e2f-57fe-4e13-b9ff-97fc45b6719c}" x="2000.0" y="1975.0">
        <label>Slice 1 positive value</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[10:20]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{58ad52ce-bb62-4eed-95dd-3e237d7885eb}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{81071af3-74f3-4acf-b27f-03586bb5c993}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{e78d94a7-bc2d-4dff-be1f-8405e67660f4}" x="2150.0" y="1975.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"linear\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{3380ae7f-24ff-468b-a34e-33e039802fcc}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{292ce433-e5a1-4ff9-af22-2acd5d874949}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{a34ff1db-62fb-4b96-82b9-94ba6e6f953b}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <connection type="table" uuid="{1b0f5f54-6963-40e7-8a26-3a4cf0ce0c83}">
        <source node="{c879b579-26f1-4cdc-b2be-d3fd6fdc45de}" port="{6e4cda77-7901-4c5c-bd99-64c488060e56}"/>
        <destination node="{766f25c5-8488-49c2-b9a0-2e9d2f0c4497}" port="{f3599deb-104a-4b51-838e-f73b3076e644}"/>
      </connection>
      <connection type="table" uuid="{4bb1eb9d-dfae-462b-a3d5-e2c07275ebc3}">
        <source node="{88fed8ad-f3c8-486d-a7cc-19a99181a107}" port="{db94140e-147b-4fff-bc38-112bce34394d}"/>
        <destination node="{e215f07a-8256-4415-841a-b486096f52f0}" port="{5767de8e-ae14-43d9-981f-750ec46880f9}"/>
      </connection>
      <connection type="table" uuid="{52dbc25e-46de-4ffd-b448-70484374302c}">
        <source node="{ebcb1cdd-4771-4b7c-a9b1-a438b8b9e530}" port="{c7a50584-c366-4991-be3e-e41b1ecc1687}"/>
        <destination node="{977a728e-e836-4e1b-af7d-83444d142a94}" port="{058a27fa-7443-42d9-ad35-cdfec83158a7}"/>
      </connection>
      <connection type="table" uuid="{58e08ae0-22ab-4f60-802d-29166cb705da}">
        <source node="{ebcb1cdd-4771-4b7c-a9b1-a438b8b9e530}" port="{c7a50584-c366-4991-be3e-e41b1ecc1687}"/>
        <destination node="{e4e53e2f-57fe-4e13-b9ff-97fc45b6719c}" port="{58ad52ce-bb62-4eed-95dd-3e237d7885eb}"/>
      </connection>
      <connection type="table" uuid="{651bf7f8-61ff-4907-b2c2-f3c8954cd51d}">
        <source node="{315058ab-cb55-4c7d-a531-cafbeb8c5692}" port="{654ccb2a-8b5a-435b-8a0a-b8f8db5ef297}"/>
        <destination node="{4c70b0f7-2f43-44ef-87cb-ca5d95134f9a}" port="{62e33a8d-40dd-473a-bcd9-c051aca03d44}"/>
      </connection>
      <connection type="table" uuid="{6d4336cf-1a87-4214-a01b-ccd8c05fa7bc}">
        <source node="{977a728e-e836-4e1b-af7d-83444d142a94}" port="{5420bf32-530a-4b41-9b6f-f77081c972ad}"/>
        <destination node="{88fed8ad-f3c8-486d-a7cc-19a99181a107}" port="{c495cecf-1d36-41fd-ad7f-2a99c7ccd074}"/>
      </connection>
      <connection type="table" uuid="{790b2c38-7d72-4e50-8a4b-f9fa3e7d346d}">
        <source node="{977a728e-e836-4e1b-af7d-83444d142a94}" port="{5420bf32-530a-4b41-9b6f-f77081c972ad}"/>
        <destination node="{a2c94e5f-183f-42fd-a195-8eec5bcbd2f9}" port="{3ac3955a-6dcc-4729-b280-5614f24522f6}"/>
      </connection>
      <connection type="table" uuid="{7f899d0e-5c97-45aa-8bed-878fa59a1e37}">
        <source node="{977a728e-e836-4e1b-af7d-83444d142a94}" port="{5420bf32-530a-4b41-9b6f-f77081c972ad}"/>
        <destination node="{8e0b2d9a-dec6-40c6-b375-257111b20f77}" port="{3634b94c-c6fd-4ce3-9da9-e2946b6ccbe0}"/>
      </connection>
      <connection type="table" uuid="{8b97c171-f4e4-4fc7-b06d-177ff5a345a8}">
        <source node="{a2c94e5f-183f-42fd-a195-8eec5bcbd2f9}" port="{cefd6579-9e6e-4af2-affd-8116f6750cf8}"/>
        <destination node="{081d2132-4dc6-4090-9926-ff0fb4076345}" port="{0bcf5049-08aa-4c68-95fa-7f3a0afb7873}"/>
      </connection>
      <connection type="table" uuid="{aad998b9-853e-45e8-aa1f-87f9c88e307a}">
        <source node="{e4e53e2f-57fe-4e13-b9ff-97fc45b6719c}" port="{81071af3-74f3-4acf-b27f-03586bb5c993}"/>
        <destination node="{e78d94a7-bc2d-4dff-be1f-8405e67660f4}" port="{3380ae7f-24ff-468b-a34e-33e039802fcc}"/>
      </connection>
      <connection type="table" uuid="{b7dd9469-4f6d-4c2e-96bf-8e3c6451dba4}">
        <source node="{8e0b2d9a-dec6-40c6-b375-257111b20f77}" port="{3d549513-990c-4cea-9577-790ac5087a83}"/>
        <destination node="{6c0a0dbd-a221-4e31-bb6c-f34542db227c}" port="{54789538-8a2d-433c-b9c8-25a5ab9c4ff1}"/>
      </connection>
      <connection type="table" uuid="{e44ec580-82b7-49a7-a061-86602623ace8}">
        <source node="{ebcb1cdd-4771-4b7c-a9b1-a438b8b9e530}" port="{c7a50584-c366-4991-be3e-e41b1ecc1687}"/>
        <destination node="{c0747169-f3ca-42ec-bdfc-c790642f0f3a}" port="{cbfa4c35-8b20-4bc4-a76b-7e82a54c846e}"/>
      </connection>
      <connection type="table" uuid="{e53e30a0-6926-4d67-a1d8-80726efac6db}">
        <source node="{ebcb1cdd-4771-4b7c-a9b1-a438b8b9e530}" port="{c7a50584-c366-4991-be3e-e41b1ecc1687}"/>
        <destination node="{315058ab-cb55-4c7d-a531-cafbeb8c5692}" port="{4706f3e1-2003-48e4-897f-c764a0cb8759}"/>
      </connection>
      <connection type="table" uuid="{e6d79649-d778-497c-b6dc-c2fae35ff420}">
        <source node="{977a728e-e836-4e1b-af7d-83444d142a94}" port="{5420bf32-530a-4b41-9b6f-f77081c972ad}"/>
        <destination node="{52765e21-5ae7-4720-acf2-db63fdf39b53}" port="{1eba2b2d-b705-46f4-bc65-36012572cd67}"/>
      </connection>
      <connection type="table" uuid="{ede6ed9a-c8fc-45ee-850d-38c53d69bd31}">
        <source node="{ebcb1cdd-4771-4b7c-a9b1-a438b8b9e530}" port="{c7a50584-c366-4991-be3e-e41b1ecc1687}"/>
        <destination node="{c879b579-26f1-4cdc-b2be-d3fd6fdc45de}" port="{fe94aac1-6dd9-4ec3-84c8-ac83a36c0711}"/>
      </connection>
    </flow>
    <connection type="table" uuid="{201b952d-04c8-444b-bfb7-ec1544580732}">
      <source node="{1c42f9b2-1a8c-47b9-a477-62ccaef6cf42}" port="{09134ea9-ff4b-4d22-9650-b1038372fe82}"/>
      <destination node="{c5fe1567-aa60-4c0f-bfee-8c6b9878e43f}" port="{561b660a-ce3a-48b3-86a7-c00c313a12fc}"/>
    </connection>
    <connection type="table" uuid="{cf3efccd-6c52-4753-af2a-77ea4dab1d26}">
      <source node="{1c42f9b2-1a8c-47b9-a477-62ccaef6cf42}" port="{09134ea9-ff4b-4d22-9650-b1038372fe82}"/>
      <destination node="{25103bb4-a108-4c62-8c30-5db85edd2866}" port="{64186a66-3f4c-4d65-a114-3a73b2a130a6}"/>
    </connection>
    <connection type="table" uuid="{db621b81-51d6-4e4a-96a0-2f18d14410da}">
      <source node="{1c42f9b2-1a8c-47b9-a477-62ccaef6cf42}" port="{09134ea9-ff4b-4d22-9650-b1038372fe82}"/>
      <destination node="{ebcb1cdd-4771-4b7c-a9b1-a438b8b9e530}" port="{c7a50584-c366-4991-be3e-e41b1ecc1687}"/>
    </connection>
  </flow>
  <flow cls="Flow" height="50.0" id="" is_locked="True" uuid="{43727575-9c14-4a2c-b94e-a750bd8f3398}" width="50.0" x="1800.0" y="1725.0">
    <label>Log scale</label>
    <description></description>
    <author></author>
    <copyright></copyright>
    <version></version>
    <min_version></min_version>
    <icon/>
    <aggregation type="json">null</aggregation>
    <libraries type="json">[]</libraries>
    <pythonpaths type="json">[]</pythonpaths>
    <environment type="json">{}</environment>
    <parameters type="json">{"environment": {}}</parameters>
    <ports>
      <input index="0" key="Port" optional="False" parent="True" scheme="hdf5" type="table" uuid="{c7454aec-2bd4-431e-a1f0-39bf993552fa}" x="1750.0" y="1875.0">
        <label>Port</label>
        <description>Port</description>
      </input>
    </ports>
    <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{542e9958-f802-40d9-b016-a07cd5a4ae3d}" width="50.0" x="1875.0" y="1775.0">
      <label>Auto colormap</label>
      <description></description>
      <author></author>
      <copyright></copyright>
      <version></version>
      <min_version></min_version>
      <icon/>
      <aggregation type="json">null</aggregation>
      <libraries type="json">[]</libraries>
      <pythonpaths type="json">[]</pythonpaths>
      <environment type="json">{}</environment>
      <parameters type="json">{"environment": {}}</parameters>
      <ports>
        <input index="0" key="Port" optional="False" parent="True" scheme="hdf5" type="table" uuid="{7969be60-2030-46f6-9599-b351d8164490}" x="1675.0" y="1775.0">
          <label>Port</label>
          <description>Port</description>
        </input>
      </ports>
      <node id="org.sysess.sympathy.data.table.calculatorgeneric" uuid="{2513bb26-af49-4413-a4fc-e60e3a27a062}" x="1800.0" y="2175.0">
        <label>Masked -&gt; NaN</label>
        <description>Performs user-defined python calculations</description>
        <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>3.0</version>
        <parameters type="json">{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["Bin values = np.ma.where(~arg.col('Bin values').data.mask, arg.col('Bin values').data, np.nan) #ENABLED:1"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming data into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}, "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the calculations. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Copy input", "order": 2, "type": "boolean", "value": true}, "fail_strategy": {"description": "Decide how a failed calculation should be handled", "label": "Action on calculation failure", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["Exception", "Skip calculation"], "value": [0], "value_names": [], "editor": {"include_empty": false, "type": "combobox", "options": []}}}</parameters>
        <ports>
          <input key="port0" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{04384fe7-9ba6-4005-a937-7d40602220bb}">
            <label>Generic Input</label>
            <description>Generic Input</description>
          </input>
          <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{0239d74d-5d07-41f0-8235-6c2caa83d471}">
            <label>Table with results from the calculations.</label>
            <description>Table with results from the calculations.</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{2701619d-9d27-4184-a323-efb0245faac2}" x="2000.0" y="2275.0">
        <label>Slice 2 positive finite values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[:10]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{05f3596f-e40d-4edf-80f3-dea431b9389b}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{ed9e3530-85d9-4ada-b5ab-5bb64aeeee53}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{3155fb38-60ff-414e-b8be-49574f1dba4b}" x="2150.0" y="1875.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"log\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{ecf2c118-aae9-40d9-881d-1d184bcc60c5}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{2e9916d6-6d10-40b8-9004-13e2f6de3311}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{a3ac3846-7917-42ed-92e9-f994bed23710}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{34ba8b50-019e-48dc-8e5d-ecbe43f497b8}" x="2000.0" y="2475.0">
        <label>Slice 0 positive values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[20:]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{0dbfcd8e-ac7c-4c48-97bd-c35a972498ea}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{941ca4ce-f445-4872-a17f-38f2e2208104}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{55e53d50-42ba-4d8e-bbec-eac0aa7cc771}" x="2000.0" y="1975.0">
        <label>Slice 1 positive value</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[10:20]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{deb2706b-94d6-4225-9c73-5b830cc06cd4}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{3b121469-3064-4252-9953-be13b549c7c2}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{7993c13c-70d8-45fd-810a-792f9f2bde82}" x="2150.0" y="2475.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"log\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{4bc0a2f3-b127-4fbe-a9a5-d70dfd41bfa8}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{057f613b-1a78-4d5f-83f3-9a542e77de33}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{203efc04-c8a7-49b3-ac43-b97da491741a}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{8a60de95-d348-431a-8656-db59602d39a4}" x="2000.0" y="1875.0">
        <label>Slice 2 positive finite values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[:10]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{d1069dc3-ff10-4ae8-9536-20305807596c}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{0e206399-b4bf-46b1-a618-ce3f937c15ce}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" port_format="1.1" uuid="{8cb03882-b918-403c-9c6c-2ccb292392a2}" x="2150.0" y="2175.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"log\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{7ef4ec4a-d6d9-4cc3-9a90-b090ea2e43af}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{ab6417b5-79c7-4d85-bee6-55004c20f366}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{47d572c9-3a7b-44c0-b74a-1c8305ea09b5}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
          <output key="__sy_err__" scheme="hdf5" type="text" type_base="text" uuid="{bfbb274d-55c8-43e4-b568-747a6b728264}">
            <label>Warning Text</label>
            <description>Warning Text</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{8f0b55e8-c468-4284-8406-4a6a9d139726}" x="2150.0" y="2075.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"log\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{0d8bea83-0084-4e04-81bd-946ccfeed694}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{25a919bc-428d-462b-8325-03a0ca5e4179}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{3301b045-b0e7-4705-9160-47f67a5b915c}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" port_format="1.1" uuid="{95111e99-0bc8-4efc-88ea-a04e6b07767f}" x="2150.0" y="2375.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"log\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{ea2460e7-3d1e-4946-b1b3-a9087747805e}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{073e3911-193c-4c81-b258-4d5641fed014}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{2c537244-b2a3-4dc3-bb67-f650157de5f1}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
          <output key="__sy_err__" scheme="hdf5" type="text" type_base="text" uuid="{d325a06f-b375-4e8d-94ed-252937d35bbe}">
            <label>Warning Text</label>
            <description>Warning Text</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{b79a0485-24e8-48fd-9683-06ee7369fd64}" x="2150.0" y="2275.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"log\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{2a2fbd50-f593-4035-b2fc-fbbace505a4d}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{9d2f6373-ef84-4477-a622-95715620ef6a}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{b0dac9d7-524a-43e8-8038-8cb1f1dba15d}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{d01dd720-d366-4f97-9e26-6854745f8401}" x="2000.0" y="2375.0">
        <label>Slice 1 positive value</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[10:20]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{744d3243-67e5-403e-88ee-d07dda444874}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{c2ec4344-a557-4d7f-9ca3-0504c112e46d}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{e38b1b98-b1ef-4848-a2b9-142ed44a6f92}" x="2000.0" y="2075.0">
        <label>Slice 0 positive values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[20:]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{402ebd21-dc8b-426f-bba0-97cac11138d8}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{81271feb-8ad9-473b-8fa5-3e20ab1c443b}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" port_format="1.1" uuid="{e935b0e3-4e6e-459b-9afb-0289675befcd}" x="2150.0" y="1975.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"log\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{f561c694-ad35-4cbf-9373-88dd91d5da2c}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{a87d6cc1-3bda-41c6-a6eb-f8a83a9468c1}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{8130c2d9-fe90-4c92-87c2-4a6357b2e5ac}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
          <output key="__sy_err__" scheme="hdf5" type="text" type_base="text" uuid="{28a8831f-786d-456d-b081-420b2c138d72}">
            <label>Warning Text</label>
            <description>Warning Text</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" port_format="1.1" uuid="{ecc60b65-c945-4523-a22a-10642697fe0c}" x="2150.0" y="1775.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"log\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{1bd99cf7-6d2a-45fe-a59e-08a85c9d51b4}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{23a4e71d-78a2-4a61-a612-79bed9405fbe}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{dbd4e04f-b9a9-47f6-9d31-6badfd2cc406}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
          <output key="__sy_err__" scheme="hdf5" type="text" type_base="text" uuid="{3d642f30-5cda-40e8-a3db-a65f6240c383}">
            <label>Warning Text</label>
            <description>Warning Text</description>
          </output>
        </ports>
      </node>
      <connection type="table" uuid="{0074151b-a906-44c0-899e-57dc9f4bc3bc}">
        <source node="{2513bb26-af49-4413-a4fc-e60e3a27a062}" port="{0239d74d-5d07-41f0-8235-6c2caa83d471}"/>
        <destination node="{8cb03882-b918-403c-9c6c-2ccb292392a2}" port="{7ef4ec4a-d6d9-4cc3-9a90-b090ea2e43af}"/>
      </connection>
      <connection type="table" uuid="{1a6127c2-b1bf-415b-81cd-e051dae6b77d}">
        <source node="{542e9958-f802-40d9-b016-a07cd5a4ae3d}" port="{7969be60-2030-46f6-9599-b351d8164490}"/>
        <destination node="{55e53d50-42ba-4d8e-bbec-eac0aa7cc771}" port="{deb2706b-94d6-4225-9c73-5b830cc06cd4}"/>
      </connection>
      <connection type="table" uuid="{29f1ee17-b1bc-453a-a780-3650753e12d5}">
        <source node="{542e9958-f802-40d9-b016-a07cd5a4ae3d}" port="{7969be60-2030-46f6-9599-b351d8164490}"/>
        <destination node="{ecc60b65-c945-4523-a22a-10642697fe0c}" port="{1bd99cf7-6d2a-45fe-a59e-08a85c9d51b4}"/>
      </connection>
      <connection type="table" uuid="{2c04baa5-ac8f-4395-a12e-997236de584a}">
        <source node="{d01dd720-d366-4f97-9e26-6854745f8401}" port="{c2ec4344-a557-4d7f-9ca3-0504c112e46d}"/>
        <destination node="{95111e99-0bc8-4efc-88ea-a04e6b07767f}" port="{ea2460e7-3d1e-4946-b1b3-a9087747805e}"/>
      </connection>
      <connection type="table" uuid="{327e6d21-2ad9-4048-9915-21c29d26b4ed}">
        <source node="{55e53d50-42ba-4d8e-bbec-eac0aa7cc771}" port="{3b121469-3064-4252-9953-be13b549c7c2}"/>
        <destination node="{e935b0e3-4e6e-459b-9afb-0289675befcd}" port="{f561c694-ad35-4cbf-9373-88dd91d5da2c}"/>
      </connection>
      <connection type="table" uuid="{3d5594ae-0f40-4953-be99-636e2e96553f}">
        <source node="{542e9958-f802-40d9-b016-a07cd5a4ae3d}" port="{7969be60-2030-46f6-9599-b351d8164490}"/>
        <destination node="{2513bb26-af49-4413-a4fc-e60e3a27a062}" port="{04384fe7-9ba6-4005-a937-7d40602220bb}"/>
      </connection>
      <connection type="table" uuid="{4799a3ef-03b0-44d7-a5db-7bcfc7974da3}">
        <source node="{8a60de95-d348-431a-8656-db59602d39a4}" port="{0e206399-b4bf-46b1-a618-ce3f937c15ce}"/>
        <destination node="{3155fb38-60ff-414e-b8be-49574f1dba4b}" port="{ecf2c118-aae9-40d9-881d-1d184bcc60c5}"/>
      </connection>
      <connection type="table" uuid="{6ba10cc0-99e9-4255-92af-e2a322caafd5}">
        <source node="{34ba8b50-019e-48dc-8e5d-ecbe43f497b8}" port="{941ca4ce-f445-4872-a17f-38f2e2208104}"/>
        <destination node="{7993c13c-70d8-45fd-810a-792f9f2bde82}" port="{4bc0a2f3-b127-4fbe-a9a5-d70dfd41bfa8}"/>
      </connection>
      <connection type="table" uuid="{74f7117b-cc1b-4d96-870f-520f3da35a7a}">
        <source node="{2513bb26-af49-4413-a4fc-e60e3a27a062}" port="{0239d74d-5d07-41f0-8235-6c2caa83d471}"/>
        <destination node="{2701619d-9d27-4184-a323-efb0245faac2}" port="{05f3596f-e40d-4edf-80f3-dea431b9389b}"/>
      </connection>
      <connection type="table" uuid="{7e57930d-4745-482e-951e-a18d9751314c}">
        <source node="{2513bb26-af49-4413-a4fc-e60e3a27a062}" port="{0239d74d-5d07-41f0-8235-6c2caa83d471}"/>
        <destination node="{d01dd720-d366-4f97-9e26-6854745f8401}" port="{744d3243-67e5-403e-88ee-d07dda444874}"/>
      </connection>
      <connection type="table" uuid="{ae606b2a-e09c-4590-b72e-ebc4b7f09c85}">
        <source node="{2701619d-9d27-4184-a323-efb0245faac2}" port="{ed9e3530-85d9-4ada-b5ab-5bb64aeeee53}"/>
        <destination node="{b79a0485-24e8-48fd-9683-06ee7369fd64}" port="{2a2fbd50-f593-4035-b2fc-fbbace505a4d}"/>
      </connection>
      <connection type="table" uuid="{af147339-4767-4377-9ad4-7c18c5d7461d}">
        <source node="{542e9958-f802-40d9-b016-a07cd5a4ae3d}" port="{7969be60-2030-46f6-9599-b351d8164490}"/>
        <destination node="{e38b1b98-b1ef-4848-a2b9-142ed44a6f92}" port="{402ebd21-dc8b-426f-bba0-97cac11138d8}"/>
      </connection>
      <connection type="table" uuid="{be64c58b-c266-41ee-b055-771f9c3920d2}">
        <source node="{e38b1b98-b1ef-4848-a2b9-142ed44a6f92}" port="{81271feb-8ad9-473b-8fa5-3e20ab1c443b}"/>
        <destination node="{8f0b55e8-c468-4284-8406-4a6a9d139726}" port="{0d8bea83-0084-4e04-81bd-946ccfeed694}"/>
      </connection>
      <connection type="table" uuid="{ceb812c7-0a2b-4cde-8948-474d404eea23}">
        <source node="{542e9958-f802-40d9-b016-a07cd5a4ae3d}" port="{7969be60-2030-46f6-9599-b351d8164490}"/>
        <destination node="{8a60de95-d348-431a-8656-db59602d39a4}" port="{d1069dc3-ff10-4ae8-9536-20305807596c}"/>
      </connection>
      <connection type="table" uuid="{fecbd67a-d1d3-4aca-82f1-8d791158ddea}">
        <source node="{2513bb26-af49-4413-a4fc-e60e3a27a062}" port="{0239d74d-5d07-41f0-8235-6c2caa83d471}"/>
        <destination node="{34ba8b50-019e-48dc-8e5d-ecbe43f497b8}" port="{0dbfcd8e-ac7c-4c48-97bd-c35a972498ea}"/>
      </connection>
    </flow>
    <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{9cb23e4e-5691-4bab-96f5-4e9bae0bba37}" width="50.0" x="1875.0" y="1875.0">
      <label>Normal colormap</label>
      <description></description>
      <author></author>
      <copyright></copyright>
      <version></version>
      <min_version></min_version>
      <icon/>
      <aggregation type="json">null</aggregation>
      <libraries type="json">[]</libraries>
      <pythonpaths type="json">[]</pythonpaths>
      <environment type="json">{}</environment>
      <parameters type="json">{"environment": {}}</parameters>
      <ports>
        <input index="0" key="Port" optional="False" parent="True" scheme="hdf5" type="table" uuid="{499297ff-a957-43d4-8159-7a94bbeb05fe}" x="1675.0" y="1775.0">
          <label>Port</label>
          <description>Port</description>
        </input>
      </ports>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{19778375-80d7-4671-815e-31527292c616}" x="2150.0" y="2275.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"log\"], [\"heatmap.heatmap-1.colormap\", \"magma\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{0a1f75b3-8f84-4540-9d71-d4e597a57a98}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{839ba50c-b1ea-402f-8edc-aed2223e47e7}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{0ef700e4-7b5c-4b15-a333-828b50d31d2f}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{3288cc36-10f5-481d-961d-62ff94ce23a1}" x="2150.0" y="2075.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"log\"], [\"heatmap.heatmap-1.colormap\", \"magma\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{d3532e4e-1efa-4e64-98a5-a0c113c4d5ea}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{0597f6ff-5a76-4260-a501-558c5a2947d6}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{32c26022-2380-4832-90ad-5caf232ff83e}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{4ecb5e6e-e883-4f2b-b58c-82d2796caa48}" x="2150.0" y="1875.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"log\"], [\"heatmap.heatmap-1.colormap\", \"magma\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{8b8ac716-620a-46e6-b92d-6728c74bb5d8}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{4b9ce7f9-91f5-4dac-9e0b-c268e6e267df}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{61d0fb5e-9080-49e9-8e12-aa4dc8be0b00}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.data.table.calculatorgeneric" uuid="{56fe7360-e7b6-4de4-ad2e-6c2b7db37706}" x="1800.0" y="2175.0">
        <label>Masked -&gt; NaN</label>
        <description>Performs user-defined python calculations</description>
        <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;, Sara Gustafzelius &lt;sara.gustafzelius@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>3.0</version>
        <parameters type="json">{"type": "group", "calc_list": {"description": "List of calculations.", "editor": null, "label": "List of calculations", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["Bin values = np.ma.where(~arg.col('Bin values').data.mask, arg.col('Bin values').data, np.nan) #ENABLED:1"], "value": [0], "value_names": []}, "same_length_res": {"description": "Gather all the results generated from an incoming data into a common output table. This requires that the results all have the same length. An error will be given if the lengths of the outgoing results differ.", "editor": null, "label": "Put results in common outputs.", "order": 1, "type": "boolean", "value": true}, "copy_input": {"description": "If enabled the incoming data will be copied to the output before running the calculations. This requires that the results will all have the same length. An exception will be raised if the lengths of the outgoing results differ.", "editor": null, "label": "Copy input", "order": 2, "type": "boolean", "value": true}, "fail_strategy": {"description": "Decide how a failed calculation should be handled", "label": "Action on calculation failure", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["Exception", "Skip calculation"], "value": [0], "value_names": [], "editor": {"include_empty": false, "type": "combobox", "options": []}}}</parameters>
        <ports>
          <input key="port0" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{4e3e404b-2136-4daf-aae7-6eb437a8862e}">
            <label>Generic Input</label>
            <description>Generic Input</description>
          </input>
          <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{a51efc8a-f739-4e07-a0ff-d497811ac76c}">
            <label>Table with results from the calculations.</label>
            <description>Table with results from the calculations.</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" port_format="1.1" uuid="{5868b103-377a-48c3-bae4-1b52d7a8ec48}" x="2150.0" y="1975.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"log\"], [\"heatmap.heatmap-1.colormap\", \"magma\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{5a39d9f4-ab74-4b76-bc81-7499a2fa3ebb}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{206ead5e-d6ad-4810-a969-b00bf06de3f1}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{8cc4d3a3-8161-4336-9148-47e30e144e60}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
          <output key="__sy_err__" scheme="hdf5" type="text" type_base="text" uuid="{f431a4c3-5acc-4902-a4fd-1fc2dbf11b41}">
            <label>Warning Text</label>
            <description>Warning Text</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{5fc6909e-c7be-4d99-a2eb-65c2d1f5c83c}" x="2000.0" y="2275.0">
        <label>Slice 2 positive finite values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[:10]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{20d661ce-f729-4c4d-a0b9-4a10e7561b1d}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{c7e50f83-2ed9-4928-bb26-3fcbb7ea021f}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{6a085734-3ea9-4474-8f70-eeb007cede68}" x="2000.0" y="2375.0">
        <label>Slice 1 positive value</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[10:20]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{c0b90f5e-75ab-49b9-8735-d43dd8a61432}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{86baa76e-6e68-4fab-99cd-9c725d12861d}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" uuid="{9cd43aa6-d5f5-4d96-a93f-c1a25e0898c5}" x="2150.0" y="2475.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"log\"], [\"heatmap.heatmap-1.colormap\", \"magma\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{28096f81-5606-4f93-883f-578590fd6d73}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{6a056adf-5d61-43c5-ba45-58f4fe9f6c8b}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{fac6b42e-85ac-4bb1-9efe-3d923daa227a}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{b67ccdce-cc7b-4ced-be94-5eab021890e9}" x="2000.0" y="1875.0">
        <label>Slice 2 positive finite values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[:10]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{31c81c32-34fa-4b45-93a1-f1b9ac62c55f}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{deacbcfd-b5f9-4c29-9d1f-7f63a9a788d1}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" port_format="1.1" uuid="{d7fe13bf-5a98-4fcb-a831-2cea95642ff8}" x="2150.0" y="2175.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"log\"], [\"heatmap.heatmap-1.colormap\", \"magma\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{4470e5f9-98dd-4e4d-b4c7-96bc95ac9bf2}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{abc09200-556a-41b5-926f-4ad338df1942}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{5f75b474-5773-4412-923e-ce3af96bc015}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
          <output key="__sy_err__" scheme="hdf5" type="text" type_base="text" uuid="{82824695-7521-4f79-ae52-a1586815c91b}">
            <label>Warning Text</label>
            <description>Warning Text</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{d947bb05-600e-4e2a-a1bf-3ad38bd16cc3}" x="2000.0" y="2075.0">
        <label>Slice 0 positive values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[20:]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{f92df70d-d85f-4c0c-8cfb-e69d582775fb}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{39b71c98-4267-4771-9a7b-e5a38f75c072}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" port_format="1.1" uuid="{dd85aabc-89d7-4d4e-a1ba-8d33cea0e1d2}" x="2150.0" y="2375.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"log\"], [\"heatmap.heatmap-1.colormap\", \"magma\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{b38e89d2-5b39-442f-890d-d5677446bb62}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{3a460c86-f7ae-4a94-995b-c1599829f219}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{06a51a9a-387b-4b3a-8a07-1e0572f057cd}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
          <output key="__sy_err__" scheme="hdf5" type="text" type_base="text" uuid="{18ce179b-ab73-4830-ab59-31dfcc80e656}">
            <label>Warning Text</label>
            <description>Warning Text</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{e0cfba46-711c-4879-927f-70d1a37b9f3c}" x="2000.0" y="2475.0">
        <label>Slice 0 positive values</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[20:]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{654f8dba-bc17-4eb9-bbac-31ae0f8ff789}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{46980b91-1fd8-4ea1-b527-e54d76fe99c4}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.visualize.figuretabletreegui" port_format="1.1" uuid="{e7799592-064d-42f1-8362-85b1ef6b7128}" x="2150.0" y="1775.0">
        <label>Figure from Table</label>
        <description>Create a Figure from a Table using a GUI.</description>
        <author>Benedikt Ziegler &lt;benedikt.ziegler@combine.se</author>
        <copyright>(c) 2016 Combine Control Systems AB</copyright>
        <version>0.2</version>
        <parameters type="json">{"type": "group", "parameters": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"axes.axes-1.xaxis_position\", \"bottom\"], [\"axes.axes-1.yaxis_position\", \"left\"], [\"heatmap.heatmap-1.axes\", \"axes-1\"], [\"heatmap.heatmap-1.xdata\", \"table.col('X bin edges').data\"], [\"heatmap.heatmap-1.ydata\", \"table.col('Y bin edges').data\"], [\"heatmap.heatmap-1.zdata\", \"table.col('Bin values').data\"], [\"heatmap.heatmap-1.normalization\", \"log\"], [\"heatmap.heatmap-1.colormap\", \"magma\"], [\"heatmap.heatmap-1.colorbar.show\", \"True\"]]"}}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{9b4515a6-aaca-4345-b1e4-aaa6c3048910}">
            <label>Input data</label>
            <description>Input data</description>
          </input>
          <output key="figure" scheme="text" type="figure" type_base="figure" uuid="{1e15152f-aac8-4b29-9211-ffdc15515266}">
            <label>Output figure</label>
            <description>Output figure</description>
          </output>
          <output key="config" scheme="hdf5" type="table" type_base="table" uuid="{85bc51f6-d3a3-4fb4-af57-31099b991c66}">
            <label>Configuration</label>
            <description>Configuration</description>
          </output>
          <output key="__sy_err__" scheme="hdf5" type="text" type_base="text" uuid="{af38b3fd-af90-47ad-ba88-e09379ea9114}">
            <label>Warning Text</label>
            <description>Warning Text</description>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{fcfa16c8-55bd-44d1-8a83-d2b0d63dfb45}" x="2000.0" y="1975.0">
        <label>Slice 1 positive value</label>
        <description></description>
        <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
        <copyright>(C) 2013 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[10:20]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{25e25a68-461b-4a93-b883-a179634e3efb}">
            <label>Input Table</label>
            <description>Input Table</description>
          </input>
          <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{4e51f5a1-da01-486d-80c5-f75f116d87ac}">
            <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
            <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
          </output>
        </ports>
      </node>
      <connection type="table" uuid="{1bc95ec9-3c19-42ed-a0b0-eb03909128ba}">
        <source node="{b67ccdce-cc7b-4ced-be94-5eab021890e9}" port="{deacbcfd-b5f9-4c29-9d1f-7f63a9a788d1}"/>
        <destination node="{4ecb5e6e-e883-4f2b-b58c-82d2796caa48}" port="{8b8ac716-620a-46e6-b92d-6728c74bb5d8}"/>
      </connection>
      <connection type="table" uuid="{227835f5-de69-4adb-9be4-ebd506f57afc}">
        <source node="{9cb23e4e-5691-4bab-96f5-4e9bae0bba37}" port="{499297ff-a957-43d4-8159-7a94bbeb05fe}"/>
        <destination node="{56fe7360-e7b6-4de4-ad2e-6c2b7db37706}" port="{4e3e404b-2136-4daf-aae7-6eb437a8862e}"/>
      </connection>
      <connection type="table" uuid="{2adcc059-df2c-4b4a-99fd-983028770ba9}">
        <source node="{9cb23e4e-5691-4bab-96f5-4e9bae0bba37}" port="{499297ff-a957-43d4-8159-7a94bbeb05fe}"/>
        <destination node="{fcfa16c8-55bd-44d1-8a83-d2b0d63dfb45}" port="{25e25a68-461b-4a93-b883-a179634e3efb}"/>
      </connection>
      <connection type="table" uuid="{31509c33-3120-4510-af2f-35f82de11587}">
        <source node="{56fe7360-e7b6-4de4-ad2e-6c2b7db37706}" port="{a51efc8a-f739-4e07-a0ff-d497811ac76c}"/>
        <destination node="{5fc6909e-c7be-4d99-a2eb-65c2d1f5c83c}" port="{20d661ce-f729-4c4d-a0b9-4a10e7561b1d}"/>
      </connection>
      <connection type="table" uuid="{3ba2e5e6-74ef-478c-85f7-ed9e49193310}">
        <source node="{e0cfba46-711c-4879-927f-70d1a37b9f3c}" port="{46980b91-1fd8-4ea1-b527-e54d76fe99c4}"/>
        <destination node="{9cd43aa6-d5f5-4d96-a93f-c1a25e0898c5}" port="{28096f81-5606-4f93-883f-578590fd6d73}"/>
      </connection>
      <connection type="table" uuid="{481be150-f472-4152-a262-c9e9208c1fa1}">
        <source node="{5fc6909e-c7be-4d99-a2eb-65c2d1f5c83c}" port="{c7e50f83-2ed9-4928-bb26-3fcbb7ea021f}"/>
        <destination node="{19778375-80d7-4671-815e-31527292c616}" port="{0a1f75b3-8f84-4540-9d71-d4e597a57a98}"/>
      </connection>
      <connection type="table" uuid="{49ec434f-162c-4480-b4f9-d5468d8cd0c2}">
        <source node="{6a085734-3ea9-4474-8f70-eeb007cede68}" port="{86baa76e-6e68-4fab-99cd-9c725d12861d}"/>
        <destination node="{dd85aabc-89d7-4d4e-a1ba-8d33cea0e1d2}" port="{b38e89d2-5b39-442f-890d-d5677446bb62}"/>
      </connection>
      <connection type="table" uuid="{539116cb-00f1-40e3-bee9-3e1eaab6e8a9}">
        <source node="{56fe7360-e7b6-4de4-ad2e-6c2b7db37706}" port="{a51efc8a-f739-4e07-a0ff-d497811ac76c}"/>
        <destination node="{d7fe13bf-5a98-4fcb-a831-2cea95642ff8}" port="{4470e5f9-98dd-4e4d-b4c7-96bc95ac9bf2}"/>
      </connection>
      <connection type="table" uuid="{5eadf639-9143-45e5-93a4-2c84bebcdd3e}">
        <source node="{56fe7360-e7b6-4de4-ad2e-6c2b7db37706}" port="{a51efc8a-f739-4e07-a0ff-d497811ac76c}"/>
        <destination node="{6a085734-3ea9-4474-8f70-eeb007cede68}" port="{c0b90f5e-75ab-49b9-8735-d43dd8a61432}"/>
      </connection>
      <connection type="table" uuid="{5f461450-76ca-42bd-ba0a-70b1c4d1b11c}">
        <source node="{9cb23e4e-5691-4bab-96f5-4e9bae0bba37}" port="{499297ff-a957-43d4-8159-7a94bbeb05fe}"/>
        <destination node="{d947bb05-600e-4e2a-a1bf-3ad38bd16cc3}" port="{f92df70d-d85f-4c0c-8cfb-e69d582775fb}"/>
      </connection>
      <connection type="table" uuid="{6587808d-75ac-485d-8f9e-96ea0e823b54}">
        <source node="{9cb23e4e-5691-4bab-96f5-4e9bae0bba37}" port="{499297ff-a957-43d4-8159-7a94bbeb05fe}"/>
        <destination node="{e7799592-064d-42f1-8362-85b1ef6b7128}" port="{9b4515a6-aaca-4345-b1e4-aaa6c3048910}"/>
      </connection>
      <connection type="table" uuid="{975ca386-5fb5-4cc6-8530-ed79b8e1ac66}">
        <source node="{d947bb05-600e-4e2a-a1bf-3ad38bd16cc3}" port="{39b71c98-4267-4771-9a7b-e5a38f75c072}"/>
        <destination node="{3288cc36-10f5-481d-961d-62ff94ce23a1}" port="{d3532e4e-1efa-4e64-98a5-a0c113c4d5ea}"/>
      </connection>
      <connection type="table" uuid="{af1266e9-7831-4a9e-8e75-7bb02189cc46}">
        <source node="{fcfa16c8-55bd-44d1-8a83-d2b0d63dfb45}" port="{4e51f5a1-da01-486d-80c5-f75f116d87ac}"/>
        <destination node="{5868b103-377a-48c3-bae4-1b52d7a8ec48}" port="{5a39d9f4-ab74-4b76-bc81-7499a2fa3ebb}"/>
      </connection>
      <connection type="table" uuid="{dca2cb63-dbda-419b-bc8b-ff7375bcf002}">
        <source node="{9cb23e4e-5691-4bab-96f5-4e9bae0bba37}" port="{499297ff-a957-43d4-8159-7a94bbeb05fe}"/>
        <destination node="{b67ccdce-cc7b-4ced-be94-5eab021890e9}" port="{31c81c32-34fa-4b45-93a1-f1b9ac62c55f}"/>
      </connection>
      <connection type="table" uuid="{e40b67c9-78c6-478e-91de-3de69ca1085d}">
        <source node="{56fe7360-e7b6-4de4-ad2e-6c2b7db37706}" port="{a51efc8a-f739-4e07-a0ff-d497811ac76c}"/>
        <destination node="{e0cfba46-711c-4879-927f-70d1a37b9f3c}" port="{654f8dba-bc17-4eb9-bbac-31ae0f8ff789}"/>
      </connection>
    </flow>
    <connection type="table" uuid="{2745324f-58d9-42d8-a862-18e2e2ae303e}">
      <source node="{43727575-9c14-4a2c-b94e-a750bd8f3398}" port="{c7454aec-2bd4-431e-a1f0-39bf993552fa}"/>
      <destination node="{9cb23e4e-5691-4bab-96f5-4e9bae0bba37}" port="{499297ff-a957-43d4-8159-7a94bbeb05fe}"/>
    </connection>
    <connection type="table" uuid="{946aee3c-fc99-447b-bc0e-b1adff4c1220}">
      <source node="{43727575-9c14-4a2c-b94e-a750bd8f3398}" port="{c7454aec-2bd4-431e-a1f0-39bf993552fa}"/>
      <destination node="{542e9958-f802-40d9-b016-a07cd5a4ae3d}" port="{7969be60-2030-46f6-9599-b351d8164490}"/>
    </connection>
  </flow>
  <node id="org.sysess.sympathy.create.createtable" uuid="{011b9b6a-c298-4039-a91e-2945ef3027dc}" x="1475.0" y="1775.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "json_table": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"x\", \"f\", [0.55, 1.55, 2.55, 3.55]], [\"y\", \"f\", [0.55, 1.55, 2.55, 3.55]], [\"z\", \"f\", [1.0, 2.0, 3.0, -4.0]]]"}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{e5b566cf-1e8b-4ffe-bbfa-8c27b2166a9c}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.dataanalysis.heatmapcalc" uuid="{b229773f-fb58-4d57-92f1-247ec1083e51}" x="1650.0" y="1775.0">
    <label>Heatmap calculation</label>
    <description>Calculate a 2d histogram or other heatmap of a givensignal.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "x_data_column": {"description": "Select X axis data", "label": "X data column:", "order": 0, "type": "string", "value": "x", "editor": {"include_empty": false, "type": "combobox", "options": ["x", "y", "z"]}}, "y_data_column": {"description": "Select Y axis data", "label": "Y data column:", "order": 1, "type": "string", "value": "y", "editor": {"include_empty": false, "type": "combobox", "options": ["x", "y", "z"]}}, "z_data_column": {"description": "The data points of the z data are placed in bins according to the cooresponding values of x and y. They are then reduced to a single bin value using the selected reduction function. For \"Count (histogram)\" no z data column is needed.", "label": "Z data column:", "order": 2, "type": "string", "value": "z", "editor": {"include_empty": false, "type": "combobox", "options": ["x", "y", "z"]}}, "reduction": {"description": "A function used on all the z data points in a bin. For \"Count (histogram)\" no z data column is needed.", "label": "Reduction function:", "order": 3, "type": "string", "value": "Min", "editor": {"include_empty": false, "type": "combobox", "options": ["Count (histogram)", "Sum", "Min", "Max", "Mean", "Median"]}}, "x_bins": {"description": "Number of bins on the x axis", "editor": null, "label": "X Bins:", "order": 4, "type": "integer", "value": 5}, "y_bins": {"description": "Number of bins on the y axis", "editor": null, "label": "Y Bins:", "order": 5, "type": "integer", "value": 5}, "auto_range": {"description": "When checked, use data range as histogram range", "editor": null, "label": "Auto range", "order": 6, "type": "boolean", "value": false}, "x_min": {"description": "Set minimum X value", "editor": null, "label": "X min:", "order": 7, "type": "float", "value": 0.0}, "x_max": {"description": "Set maximum X value", "editor": null, "label": "X max:", "order": 8, "type": "float", "value": 5.0}, "y_min": {"description": "Set minimum Y value", "editor": null, "label": "Y min:", "order": 9, "type": "float", "value": 0.0}, "y_max": {"description": "Set maximum Y value", "editor": null, "label": "Y max:", "order": 10, "type": "float", "value": 5.0}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="table" type_base="table" uuid="{a24f256d-d4ca-40fa-a5b9-167df170d27b}">
        <label>Input data</label>
        <description>Input data</description>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{74cdcbf2-459d-415b-98c2-93c2bce7b429}">
        <label>Heatmap data</label>
        <description>Heatmap data</description>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{471686ff-c34d-4903-b1d3-1f0044886b01}">
    <source node="{b229773f-fb58-4d57-92f1-247ec1083e51}" port="{74cdcbf2-459d-415b-98c2-93c2bce7b429}"/>
    <destination node="{1c42f9b2-1a8c-47b9-a477-62ccaef6cf42}" port="{09134ea9-ff4b-4d22-9650-b1038372fe82}"/>
  </connection>
  <connection type="table" uuid="{74a72026-67b4-4cfb-81f7-2c996ffd960f}">
    <source node="{b229773f-fb58-4d57-92f1-247ec1083e51}" port="{74cdcbf2-459d-415b-98c2-93c2bce7b429}"/>
    <destination node="{43727575-9c14-4a2c-b94e-a750bd8f3398}" port="{c7454aec-2bd4-431e-a1f0-39bf993552fa}"/>
  </connection>
  <connection type="table" uuid="{86616f71-d1d4-427d-b69c-ffbb83e09b35}">
    <source node="{011b9b6a-c298-4039-a91e-2945ef3027dc}" port="{e5b566cf-1e8b-4ffe-bbfa-8c27b2166a9c}"/>
    <destination node="{b229773f-fb58-4d57-92f1-247ec1083e51}" port="{a24f256d-d4ca-40fa-a5b9-167df170d27b}"/>
  </connection>
</flow>
