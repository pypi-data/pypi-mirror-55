<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{a8eaee75-dbcd-4d07-b147-ce63260edfde}" width="50.0" x="0.0" y="0.0">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <overrides type="json">{}</overrides>
  <environment type="json">{}</environment>
  <parameters type="json">{"environment": {}}</parameters>
  <ports/>
  <node id="org.sysess.sympathy.files.deletefile" uuid="{01a5a116-7a4f-49f8-8af2-2b286080abcf}" x="2550.0" y="2125.0">
    <label>Delete file</label>
    <description>Delete a file</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;Andreas T&#229;gerud&lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(C) 2016-2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="datasource" type_base="datasource" uuid="{906f2ffc-a225-41a8-a3fe-469087049351}">
        <label>File to delete</label>
        <description>File to delete</description>
      </input>
      <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{03668bef-6103-4c79-b028-2ec892c5512c}">
        <label>Path to deleted file</label>
        <description>Path to deleted file</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.createtable" uuid="{0231e02f-3ac6-4192-933a-266272def84d}" x="1975.0" y="3325.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "json_table": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"text\", \"U\", [null, \"b\"]], [\"float\", \"f\", [1.1, null]]]"}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{f865d370-88eb-49e5-b25f-2dcb5d1db8b0}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generic.propagatefirst" uuid="{0390b1e2-877e-4947-9fd9-4ebafba61665}" x="2425.0" y="3075.0">
    <label>Propagate First Input</label>
    <description>Propagate first input to output</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item1" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{af663a98-3c1b-41d3-afc4-d49150a4a824}">
        <label>The Item to be propagated</label>
        <description>The Item to be propagated</description>
      </input>
      <input key="item2" scheme="text" type="[datasource]" type_base="&lt;b&gt;" uuid="{a77f15d4-03b8-4236-87d7-cb5b0c6956b5}">
        <label>Item that will not be propagated</label>
        <description>Item that will not be propagated</description>
      </input>
      <output key="item" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{11beac2e-b3bc-4eb5-b351-4f0a27afa7d6}">
        <label>Propagated Item</label>
        <description>Propagated Item</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.importtable" uuid="{03c60038-7db8-42df-a199-de134381047d}" x="1650.0" y="2600.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "SQL"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"label": "", "type": "group", "data_end_row": {"description": "The data rows.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 2, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "delimiter": {"description": "", "editor": null, "label": "", "type": "string", "value": ";"}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "editor": null, "label": "Remove double quotations", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "editor": null, "label": "", "type": "string", "value": ""}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "source_coding": {"description": "", "editor": null, "label": "", "type": "string", "value": "iso8859_1"}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input data", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "path_list": {"description": "The paths selected to import data from.", "label": "Selected paths", "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"options": null, "type": "combobox"}}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "custom_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "join_column_selection": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_tables": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "lineedit_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "preview_query": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "query_str": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "table_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "table_names": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test"], "value": [0], "value_names": []}, "table_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": true}, "use_odbc": {"description": "Use only ODBC connection string and ignore the SQLAlchemy engine URL that is configured in the datasource", "editor": null, "label": "Use only ODBC connection string", "type": "boolean", "value": false}, "where_add_comparison": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_column_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "where_comparison_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["=", "&lt;", "&gt;", "&gt;=", "&lt;=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "value_names": []}, "where_condition": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_condition_list": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}}, "Table": {"label": "", "type": "group"}, "XLS": {"label": "", "type": "group", "data_end_row": {"description": "The last data row.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 2, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "label": "Select worksheet", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}}, "fail_strategy": {"description": "", "label": "Action on import failure", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="datasource" type_base="datasource" uuid="{19051d85-1764-4183-a619-456b3808caf1}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{47146731-d821-4835-a6a8-bbdec902710f}">
        <label>Imported Table</label>
        <description>Imported Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.importtable" uuid="{06b7aab2-fe80-47e1-90de-03fa6993a7bc}" x="1775.0" y="2300.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "SQL"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "custom_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "join_column_selection": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test.0", "test.1", "test.10", "test.11", "test.12", "test.13", "test.14", "test.15", "test.16", "test.17", "test.18", "test.19", "test.2", "test.20", "test.21", "test.22", "test.23", "test.24", "test.25", "test.26", "test.27", "test.28", "test.29", "test.3", "test.30", "test.31", "test.32", "test.33", "test.34", "test.35", "test.36", "test.37", "test.38", "test.39", "test.4", "test.40", "test.41", "test.42", "test.43", "test.44", "test.45", "test.46", "test.47", "test.48", "test.49", "test.5", "test.50", "test.51", "test.52", "test.53", "test.54", "test.55", "test.56", "test.57", "test.58", "test.59", "test.6", "test.60", "test.61", "test.62", "test.63", "test.64", "test.65", "test.66", "test.67", "test.68", "test.69", "test.7", "test.70", "test.71", "test.72", "test.73", "test.74", "test.75", "test.76", "test.77", "test.78", "test.79", "test.8", "test.80", "test.81", "test.82", "test.83", "test.84", "test.85", "test.86", "test.87", "test.88", "test.89", "test.9", "test.90", "test.91", "test.92", "test.93", "test.94", "test.95", "test.96", "test.97", "test.98", "test.99"], "value": [0], "value_names": []}, "join_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_tables": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test"], "value": [0], "value_names": []}, "lineedit_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "preview_query": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "query_str": {"description": "", "editor": null, "label": "", "type": "string", "value": "select * from test"}, "table_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test.10"], "value": [0], "value_names": []}, "table_names": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test"], "value": [0], "value_names": ["test"]}, "table_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": true}, "use_odbc": {"description": "Use only ODBC connection string and ignore the SQLAlchemy engine URL that is configured in the datasource", "editor": null, "label": "Use only ODBC connection string", "type": "boolean", "value": false}, "where_add_comparison": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_column_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test.0", "test.1", "test.10", "test.11", "test.12", "test.13", "test.14", "test.15", "test.16", "test.17", "test.18", "test.19", "test.2", "test.20", "test.21", "test.22", "test.23", "test.24", "test.25", "test.26", "test.27", "test.28", "test.29", "test.3", "test.30", "test.31", "test.32", "test.33", "test.34", "test.35", "test.36", "test.37", "test.38", "test.39", "test.4", "test.40", "test.41", "test.42", "test.43", "test.44", "test.45", "test.46", "test.47", "test.48", "test.49", "test.5", "test.50", "test.51", "test.52", "test.53", "test.54", "test.55", "test.56", "test.57", "test.58", "test.59", "test.6", "test.60", "test.61", "test.62", "test.63", "test.64", "test.65", "test.66", "test.67", "test.68", "test.69", "test.7", "test.70", "test.71", "test.72", "test.73", "test.74", "test.75", "test.76", "test.77", "test.78", "test.79", "test.8", "test.80", "test.81", "test.82", "test.83", "test.84", "test.85", "test.86", "test.87", "test.88", "test.89", "test.9", "test.90", "test.91", "test.92", "test.93", "test.94", "test.95", "test.96", "test.97", "test.98", "test.99"], "value": [0], "value_names": ["test.0"]}, "where_comparison_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["=", "&lt;", "&gt;", "&gt;=", "&lt;=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "value_names": []}, "where_condition": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_condition_list": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}}}, "fail_strategy": {"description": "", "label": "Action on import failure", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="datasource" type_base="datasource" uuid="{cc032efd-c9e0-4ab8-b44d-e6a700845689}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{85b6305e-1094-44a5-8c1f-bec00ef5f8dc}">
        <label>Imported Table</label>
        <description>Imported Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generic.propagatefirst" uuid="{0a320436-a226-4c48-a4b8-c1efcddf68c5}" x="1650.0" y="2775.0">
    <label>Propagate First Input</label>
    <description>Propagate first input to output</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item1" scheme="text" type="datasource" type_base="&lt;a&gt;" uuid="{534a3cf1-b5fd-4ffc-8816-7a37ee870561}">
        <label>The Item to be propagated</label>
        <description>The Item to be propagated</description>
      </input>
      <input key="item2" scheme="hdf5" type="datasource" type_base="&lt;b&gt;" uuid="{e7d1deb4-1baa-49a9-a2a9-dc8843faf7e5}">
        <label>Item that will not be propagated</label>
        <description>Item that will not be propagated</description>
      </input>
      <output key="item" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{595f1d9f-a61b-4ce5-8661-fad44805469a}">
        <label>Propagated Item</label>
        <description>Propagated Item</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.assertequaltable" uuid="{0d902c05-d828-4ab6-a818-0e200aa99c1b}" x="2100.0" y="2850.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "col_order": {"description": "Differing column order will trigger error", "editor": null, "label": "Compare column order", "order": 0, "type": "boolean", "value": true}, "col_attrs": {"description": "Differing column attributes will trigger error", "editor": null, "label": "Compare column attributes", "order": 1, "type": "boolean", "value": true}, "tbl_names": {"description": "Differing table name will trigger error", "editor": null, "label": "Compare table names", "order": 2, "type": "boolean", "value": true}, "tbl_attrs": {"description": "Differing table attributes will trigger error", "editor": null, "label": "Compare table attributes", "order": 3, "type": "boolean", "value": true}, "inexact_float": {"description": "If any arithemtics is invovled floats should probably be compared approximately.", "editor": null, "label": "Approximate comparison of floats", "order": 4, "type": "boolean", "value": false}, "rel_tol": {"description": "Floats are considered unequal if the relative difference between them is larger than this value.", "editor": null, "label": "Relative tolerance", "order": 5, "type": "float", "value": 1e-05}, "abs_tol": {"description": "Floats are considered unequal if the absolute difference between them is larger than this value.", "editor": null, "label": "Absolute tolerance", "order": 6, "type": "float", "value": 1e-08}}</parameters>
    <ports>
      <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{c40930d4-c008-4920-ab04-507e332487c3}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{4ebd3b5f-48e3-45ee-a4d8-e5c57b55308e}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{b6ebf2ec-4a32-43c5-bdfb-2b7dd705b181}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.export.exporttables" uuid="{1743c14a-4210-48a3-9dc1-593133848e52}" x="1400.0" y="2600.0">
    <label>Export Tables</label>
    <description>Export Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "active_exporter": {"description": "Select data format exporter. Each data format has its own exporter with its own special configuration, see exporter information. The selection of exporter do also suggest filename extension.", "editor": null, "label": "Exporter", "order": 0, "type": "string", "value": "SQLite"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "CSV": {"label": "", "type": "group", "encoding": {"description": "Character encoding determines how different characters are represented when written to disc, sent over a network, etc.", "label": "Character encoding", "mode": "selected", "passthrough": false, "type": "list", "list": ["Western (ASCII)", "Western (ISO 8859-1)", "Western (ISO 8859-15)", "Western (Windows 1252)", "UTF-8"], "value": [4], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "csv"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "sydata"}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "MAT": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "mat"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "connection_string": {"description": "String used by pyodbc to make a connection.", "editor": null, "label": "Connection string", "type": "string", "value": ""}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "type": "string", "value": "ODBC", "editor": {"type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "type": "string", "value": "mssql+pyodbc:///"}, "drop_table": {"description": "Drop table before adding data.", "editor": null, "label": "Drop table", "type": "boolean", "value": false}, "table_name": {"description": "The table name used when exporting.", "editor": null, "label": "Table name", "type": "string", "value": ""}, "use_nvarchar_size": {"description": "Use nvarchar(size) instead of nvarchar(MAX).", "editor": null, "label": "Use nvarchar(size)", "type": "boolean", "value": false}}, "SQLite": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "db"}}, "XLS": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xls"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}}, "XLSX": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xlsx"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}, "to_plot": {"description": "Select if incoming Tables with plot data should be embedded in the output file. If no plots are present, the option is disabled.", "editor": null, "label": "Embed plot in output file(s)", "type": "boolean", "value": false}, "to_sheets": {"description": "Select if incoming Tables are going to to be exported to sheets in a single file or to a single sheet inmultiple files.", "editor": null, "label": "Export data to sheets", "type": "boolean", "value": false}}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "order": 2, "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "order": 3, "type": "string", "value": "test_output_sqlite_mask"}, "plot": {"description": "If there is a plot attribute in the input tables(s), create a separate file with the plot.", "label": "Output separate plot file with the following extension:", "mode": "selected", "order": 4, "passthrough": false, "type": "list", "list": ["-", "eps", "pdf", "svg", "png"], "value": [0], "value_names": [], "editor": {"include_empty": false, "options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{49a54537-cbfb-4ca7-b4e2-9414af2d5fdb}">
        <label>Tables to be exported</label>
        <description>Tables to be exported</description>
      </input>
      <output key="port0" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{b7c160c6-3088-47b5-9b0e-2b55b29afd50}">
        <label>Datasources of exported files</label>
        <description>Datasources of exported files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.vjointablenode" uuid="{1a4aed45-12ab-4013-a222-99268d4453aa}" x="1850.0" y="3175.0">
    <label>VJoin Table</label>
    <description>Vertical join of two Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "fill": {"description": "Select if columns that are not represented in all Tables should be complemented", "editor": null, "label": "Complement missing columns", "order": 0, "type": "boolean", "value": false}, "fill_strategy": {"description": "When \"Complement with nan or empty string\" is selected missing columns will be replaced by columns of nan or empty strings. When \"Mask missing values\" is selected missing columns will be result in masked values", "label": "Complement strategy", "mode": "selected", "order": 1, "passthrough": false, "type": "list", "list": ["Complement with nan or empty string", "Mask missing values"], "value": [0], "value_names": [], "editor": {"include_empty": false, "options": null, "type": "combobox"}}, "output_index": {"description": "Specify name for output index column. If left empty, no index column will be created", "editor": null, "label": "Output index", "order": 2, "type": "string", "value": ""}, "minimum_increment": {"description": "Specify the increment in the outgoing index column for tables with no rows. Either 1 or 0.", "label": "Increment for empty tables", "order": 3, "type": "integer", "value": 1, "editor": {"max": 1, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{b511a910-c9c5-430b-824a-ee152bdfb204}">
        <label>Input Table 1</label>
        <description>Input Table 1</description>
      </input>
      <input key="port2" scheme="hdf5" type="table" type_base="table" uuid="{44978057-944f-42cd-ac49-7f486648e9fb}">
        <label>Input Table 2</label>
        <description>Input Table 2</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{61fff138-f067-4edf-bbb8-67e1d1705417}">
        <label>Joined Table</label>
        <description>Joined Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.datasources.filedatasource" uuid="{1ae8f1ce-bd26-4dd7-8fc1-d45c32af36aa}" x="1525.0" y="2775.0">
    <label>Database SQLAlchemy + sqlite</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 0, "type": "string", "value": "", "editor": {"type": "filename", "filter": ["Any files (*)"]}}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "order": 1, "type": "string", "value": "sqlite:///test_output_sqlite_mask.db"}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "order": 2, "type": "string", "value": "SQLAlchemy", "editor": {"include_empty": false, "type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": [], "editor": {"include_empty": false, "options": null, "type": "combobox"}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 4, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 5, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 6, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 7, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 8, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "mode": "selected", "order": 9, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [1], "value_names": ["Database"]}}</parameters>
    <ports>
      <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{1a0be300-f091-4841-8748-47125a6ffe96}">
        <label>Datasource with path to file</label>
        <description>Datasource with path to file</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" uuid="{1df9c32b-1687-4d0e-ab87-290de59e6f40}" x="2200.0" y="2275.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{ed591d22-f94b-4d4a-9169-85f32f34a523}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{4631aba8-d1e9-416d-863d-8ba036589044}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" uuid="{2491b724-7875-45a3-bd84-1e994664c154}" x="1275.0" y="2600.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{2b64b1e5-9fd9-4cf1-95fe-0d630ebd0edd}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{3b6f3950-40ec-4707-857f-633794ec0b90}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{2b0f3e75-95ff-489a-9835-0c7d3e5fa947}" x="1975.0" y="2275.0">
    <label>Slice data Table</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[2:]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{5994713e-6a75-4db8-9673-0a20f1fc3457}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{3165ec80-e6a9-48a8-9abf-e251301f4aa4}">
        <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
        <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.getitemlist" uuid="{2b22aa86-e94c-40f6-9c85-7b290cb92406}" x="1525.0" y="3075.0">
    <label>Get Item List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "index": {"description": "Choose item index in list.", "label": "Index", "order": 0, "passthrough": false, "type": "list", "list": ["0"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="list" scheme="text" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{a04aad51-8411-4695-beac-1840f4bfc639}">
        <label>Input List</label>
        <description>Input List</description>
      </input>
      <output key="item" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{31229eec-6cb4-43b8-937e-18a087a63191}">
        <label>Output selected Item from List</label>
        <description>Output selected Item from List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.createtable" uuid="{2c01f7f2-e025-4b39-9ed5-4676f0468e30}" x="1175.0" y="2375.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "json_table": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"text\", \"U\", [\"a\", \"b\"]], [\"float\", \"f\", [1.1, 2.2]]]"}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{e640deb3-724d-4af7-bb8d-0ce2271a1b4c}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.export.exporttables" uuid="{2c58bf48-de5b-40cd-a201-eb17bf931b12}" x="2325.0" y="2275.0">
    <label>Export Tables</label>
    <description>Export Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "active_exporter": {"description": "Select data format exporter. Each data format has its own exporter with its own special configuration, see exporter information. The selection of exporter do also suggest filename extension.", "editor": null, "label": "Exporter", "order": 0, "type": "string", "value": "SQL"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "CSV": {"label": "", "type": "group", "encoding": {"description": "Character encoding determines how different characters are represented when written to disc, sent over a network, etc.", "label": "Character encoding", "mode": "selected", "passthrough": false, "type": "list", "list": ["Western (ASCII)", "Western (ISO 8859-1)", "Western (ISO 8859-15)", "Western (Windows 1252)", "UTF-8"], "value": [4], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "csv"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "sydata"}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "MAT": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "mat"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "connection_string": {"description": "String used by pyodbc to make a connection.", "editor": null, "label": "Connection string", "type": "string", "value": ""}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "type": "string", "value": "SQLAlchemy", "editor": {"type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "type": "string", "value": "sqlite:///test_output_sqlite.db"}, "drop_table": {"description": "Drop table before adding data.", "editor": null, "label": "Drop table", "type": "boolean", "value": false}, "table_name": {"description": "The table name used when exporting.", "editor": null, "label": "Table name", "type": "string", "value": "test"}, "use_nvarchar_size": {"description": "Use nvarchar(size) instead of nvarchar(MAX).", "editor": null, "label": "Use nvarchar(size)", "type": "boolean", "value": false}}, "SQLite": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "db"}}, "XLS": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xls"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}}, "XLSX": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xlsx"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}, "to_plot": {"description": "Select if incoming Tables with plot data should be embedded in the output file. If no plots are present, the option is disabled.", "editor": null, "label": "Embed plot in output file(s)", "type": "boolean", "value": false}, "to_sheets": {"description": "Select if incoming Tables are going to to be exported to sheets in a single file or to a single sheet inmultiple files.", "editor": null, "label": "Export data to sheets", "type": "boolean", "value": false}}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "order": 2, "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "order": 3, "type": "string", "value": ""}, "plot": {"description": "If there is a plot attribute in the input tables(s), create a separate file with the plot.", "label": "Output separate plot file with the following extension:", "mode": "selected", "order": 4, "passthrough": false, "type": "list", "list": ["-", "eps", "pdf", "svg", "png"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{609c95ac-5625-4c8f-bf5f-4200d8f8b2e2}">
        <label>Tables to be exported</label>
        <description>Tables to be exported</description>
      </input>
      <output key="port0" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{3e462b9a-fb9f-42ef-bdfc-cbd5603306dd}">
        <label>Datasources of exported files</label>
        <description>Datasources of exported files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" uuid="{37db89fe-9499-4362-86cc-190f5646a332}" x="1275.0" y="3075.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{8da41264-d7ff-450a-966a-14370b554080}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{fec9f461-ff1b-4248-8fed-c1611d0d676c}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generic.propagatefirst" uuid="{4091fd5d-9c5c-4255-9d80-78fc056a7c6e}" x="1650.0" y="2300.0">
    <label>Propagate First Input</label>
    <description>Propagate first input to output</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item1" scheme="text" type="datasource" type_base="&lt;a&gt;" uuid="{d5074dc4-b81c-4be5-86db-5038408f27d9}">
        <label>The Item to be propagated</label>
        <description>The Item to be propagated</description>
      </input>
      <input key="item2" scheme="hdf5" type="datasource" type_base="&lt;b&gt;" uuid="{86a88680-7037-4b7d-b3ec-d1551c1d60dc}">
        <label>Item that will not be propagated</label>
        <description>Item that will not be propagated</description>
      </input>
      <output key="item" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{12460ce2-6ca8-4c21-979a-f100272e5f56}">
        <label>Propagated Item</label>
        <description>Propagated Item</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.createtable" uuid="{41593c0f-5410-492f-814f-9646187b6744}" x="1175.0" y="2850.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "json_table": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"text\", \"U\", [null, \"b\"]], [\"float\", \"f\", [1.1, null]]]"}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{7ac5e588-2aa5-42d6-9955-ef41442a660f}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generic.propagatefirst" uuid="{43dce0d6-85b7-4a44-aa49-cc988b31dfb9}" x="2425.0" y="2125.0">
    <label>Propagate First Input</label>
    <description>Propagate first input to output</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item1" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{fc9a29bf-de44-4c46-bd59-2f439ea5d923}">
        <label>The Item to be propagated</label>
        <description>The Item to be propagated</description>
      </input>
      <input key="item2" scheme="text" type="[datasource]" type_base="&lt;b&gt;" uuid="{c8e88e09-a0a5-4b1e-b023-0e008178e80d}">
        <label>Item that will not be propagated</label>
        <description>Item that will not be propagated</description>
      </input>
      <output key="item" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{b3a6e49b-20ec-403b-827c-40bd5d6f7c0c}">
        <label>Propagated Item</label>
        <description>Propagated Item</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.importtable" uuid="{49db8b25-1773-4c78-bc32-31880befcb46}" x="1775.0" y="2775.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "SQL"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "custom_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "join_column_selection": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test.0", "test.1", "test.10", "test.11", "test.12", "test.13", "test.14", "test.15", "test.16", "test.17", "test.18", "test.19", "test.2", "test.20", "test.21", "test.22", "test.23", "test.24", "test.25", "test.26", "test.27", "test.28", "test.29", "test.3", "test.30", "test.31", "test.32", "test.33", "test.34", "test.35", "test.36", "test.37", "test.38", "test.39", "test.4", "test.40", "test.41", "test.42", "test.43", "test.44", "test.45", "test.46", "test.47", "test.48", "test.49", "test.5", "test.50", "test.51", "test.52", "test.53", "test.54", "test.55", "test.56", "test.57", "test.58", "test.59", "test.6", "test.60", "test.61", "test.62", "test.63", "test.64", "test.65", "test.66", "test.67", "test.68", "test.69", "test.7", "test.70", "test.71", "test.72", "test.73", "test.74", "test.75", "test.76", "test.77", "test.78", "test.79", "test.8", "test.80", "test.81", "test.82", "test.83", "test.84", "test.85", "test.86", "test.87", "test.88", "test.89", "test.9", "test.90", "test.91", "test.92", "test.93", "test.94", "test.95", "test.96", "test.97", "test.98", "test.99"], "value": [0], "value_names": []}, "join_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_tables": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test"], "value": [0], "value_names": []}, "lineedit_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "preview_query": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "query_str": {"description": "", "editor": null, "label": "", "type": "string", "value": "select * from test"}, "table_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test.10"], "value": [0], "value_names": []}, "table_names": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test"], "value": [0], "value_names": ["test"]}, "table_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": true}, "use_odbc": {"description": "Use only ODBC connection string and ignore the SQLAlchemy engine URL that is configured in the datasource", "editor": null, "label": "Use only ODBC connection string", "type": "boolean", "value": false}, "where_add_comparison": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_column_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test.0", "test.1", "test.10", "test.11", "test.12", "test.13", "test.14", "test.15", "test.16", "test.17", "test.18", "test.19", "test.2", "test.20", "test.21", "test.22", "test.23", "test.24", "test.25", "test.26", "test.27", "test.28", "test.29", "test.3", "test.30", "test.31", "test.32", "test.33", "test.34", "test.35", "test.36", "test.37", "test.38", "test.39", "test.4", "test.40", "test.41", "test.42", "test.43", "test.44", "test.45", "test.46", "test.47", "test.48", "test.49", "test.5", "test.50", "test.51", "test.52", "test.53", "test.54", "test.55", "test.56", "test.57", "test.58", "test.59", "test.6", "test.60", "test.61", "test.62", "test.63", "test.64", "test.65", "test.66", "test.67", "test.68", "test.69", "test.7", "test.70", "test.71", "test.72", "test.73", "test.74", "test.75", "test.76", "test.77", "test.78", "test.79", "test.8", "test.80", "test.81", "test.82", "test.83", "test.84", "test.85", "test.86", "test.87", "test.88", "test.89", "test.9", "test.90", "test.91", "test.92", "test.93", "test.94", "test.95", "test.96", "test.97", "test.98", "test.99"], "value": [0], "value_names": ["test.0"]}, "where_comparison_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["=", "&lt;", "&gt;", "&gt;=", "&lt;=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "value_names": []}, "where_condition": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_condition_list": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}}}, "fail_strategy": {"description": "", "label": "Action on import failure", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="datasource" type_base="datasource" uuid="{ebabcf23-d86f-4975-af51-21522e4be42b}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{64c3b17e-999f-4869-af56-dbaceb8ab5cf}">
        <label>Imported Table</label>
        <description>Imported Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.export.exporttables" uuid="{4dba7300-1336-43f5-a89c-a4601475937f}" x="1400.0" y="2125.0">
    <label>Export Tables</label>
    <description>Export Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "active_exporter": {"description": "Select data format exporter. Each data format has its own exporter with its own special configuration, see exporter information. The selection of exporter do also suggest filename extension.", "editor": null, "label": "Exporter", "order": 0, "type": "string", "value": "SQLite"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "CSV": {"label": "", "type": "group", "encoding": {"description": "Character encoding determines how different characters are represented when written to disc, sent over a network, etc.", "label": "Character encoding", "mode": "selected", "passthrough": false, "type": "list", "list": ["Western (ASCII)", "Western (ISO 8859-1)", "Western (ISO 8859-15)", "Western (Windows 1252)", "UTF-8"], "value": [4], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "csv"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "sydata"}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "MAT": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "mat"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "connection_string": {"description": "String used by pyodbc to make a connection.", "editor": null, "label": "Connection string", "type": "string", "value": ""}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "type": "string", "value": "ODBC", "editor": {"type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "type": "string", "value": "mssql+pyodbc:///"}, "drop_table": {"description": "Drop table before adding data.", "editor": null, "label": "Drop table", "type": "boolean", "value": false}, "table_name": {"description": "The table name used when exporting.", "editor": null, "label": "Table name", "type": "string", "value": ""}, "use_nvarchar_size": {"description": "Use nvarchar(size) instead of nvarchar(MAX).", "editor": null, "label": "Use nvarchar(size)", "type": "boolean", "value": false}}, "SQLite": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "db"}}, "XLS": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xls"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}}, "XLSX": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xlsx"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}, "to_plot": {"description": "Select if incoming Tables with plot data should be embedded in the output file. If no plots are present, the option is disabled.", "editor": null, "label": "Embed plot in output file(s)", "type": "boolean", "value": false}, "to_sheets": {"description": "Select if incoming Tables are going to to be exported to sheets in a single file or to a single sheet inmultiple files.", "editor": null, "label": "Export data to sheets", "type": "boolean", "value": false}}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "order": 2, "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "order": 3, "type": "string", "value": "test_output_sqlite"}, "plot": {"description": "If there is a plot attribute in the input tables(s), create a separate file with the plot.", "label": "Output separate plot file with the following extension:", "mode": "selected", "order": 4, "passthrough": false, "type": "list", "list": ["-", "eps", "pdf", "svg", "png"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{5627461a-bbac-4dbb-91e1-073a59d101b4}">
        <label>Tables to be exported</label>
        <description>Tables to be exported</description>
      </input>
      <output key="port0" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{7c6a7130-05b8-41ea-8f85-9c47cf0623fe}">
        <label>Datasources of exported files</label>
        <description>Datasources of exported files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.importtable" uuid="{56013445-978a-4793-96e1-49bf28f32b84}" x="1650.0" y="2125.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "SQL"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"label": "", "type": "group", "data_end_row": {"description": "The data rows.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 2, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "delimiter": {"description": "", "editor": null, "label": "", "type": "string", "value": ";"}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "editor": null, "label": "Remove double quotations", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "editor": null, "label": "", "type": "string", "value": ""}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "source_coding": {"description": "", "editor": null, "label": "", "type": "string", "value": "iso8859_1"}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input data", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "path_list": {"description": "The paths selected to import data from.", "label": "Selected paths", "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"options": null, "type": "combobox"}}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "custom_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "join_column_selection": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_tables": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "lineedit_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "preview_query": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "query_str": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "table_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "table_names": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test"], "value": [0], "value_names": []}, "table_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": true}, "use_odbc": {"description": "Use only ODBC connection string and ignore the SQLAlchemy engine URL that is configured in the datasource", "editor": null, "label": "Use only ODBC connection string", "type": "boolean", "value": false}, "where_add_comparison": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_column_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "where_comparison_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["=", "&lt;", "&gt;", "&gt;=", "&lt;=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "value_names": []}, "where_condition": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_condition_list": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}}, "Table": {"label": "", "type": "group"}, "XLS": {"label": "", "type": "group", "data_end_row": {"description": "The last data row.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 2, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "label": "Select worksheet", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}}, "fail_strategy": {"description": "", "label": "Action on import failure", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="datasource" type_base="datasource" uuid="{ab40c0f2-802c-4cf6-a89f-34f6c8068d2c}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{a900d032-1977-4212-9eac-02c4b6791637}">
        <label>Imported Table</label>
        <description>Imported Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generic.propagatefirst" uuid="{5734556d-b73f-4289-a936-b8609680ecf2}" x="2425.0" y="2600.0">
    <label>Propagate First Input</label>
    <description>Propagate first input to output</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item1" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{c589586d-1b98-4f04-aaba-c5820e8f3258}">
        <label>The Item to be propagated</label>
        <description>The Item to be propagated</description>
      </input>
      <input key="item2" scheme="text" type="[datasource]" type_base="&lt;b&gt;" uuid="{8f080826-aa6d-4491-9986-2a2957b7d5c4}">
        <label>Item that will not be propagated</label>
        <description>Item that will not be propagated</description>
      </input>
      <output key="item" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{443f9ae3-017c-494e-b12d-038f50b7534e}">
        <label>Propagated Item</label>
        <description>Propagated Item</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.importtable" uuid="{5d8b355e-cd6b-4e05-943a-b8baf4168974}" x="1775.0" y="3250.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "SQL"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "custom_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "join_column_selection": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test.0", "test.1", "test.10", "test.11", "test.12", "test.13", "test.14", "test.15", "test.16", "test.17", "test.18", "test.19", "test.2", "test.20", "test.21", "test.22", "test.23", "test.24", "test.25", "test.26", "test.27", "test.28", "test.29", "test.3", "test.30", "test.31", "test.32", "test.33", "test.34", "test.35", "test.36", "test.37", "test.38", "test.39", "test.4", "test.40", "test.41", "test.42", "test.43", "test.44", "test.45", "test.46", "test.47", "test.48", "test.49", "test.5", "test.50", "test.51", "test.52", "test.53", "test.54", "test.55", "test.56", "test.57", "test.58", "test.59", "test.6", "test.60", "test.61", "test.62", "test.63", "test.64", "test.65", "test.66", "test.67", "test.68", "test.69", "test.7", "test.70", "test.71", "test.72", "test.73", "test.74", "test.75", "test.76", "test.77", "test.78", "test.79", "test.8", "test.80", "test.81", "test.82", "test.83", "test.84", "test.85", "test.86", "test.87", "test.88", "test.89", "test.9", "test.90", "test.91", "test.92", "test.93", "test.94", "test.95", "test.96", "test.97", "test.98", "test.99"], "value": [0], "value_names": []}, "join_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_tables": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test"], "value": [0], "value_names": []}, "lineedit_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "preview_query": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "query_str": {"description": "", "editor": null, "label": "", "type": "string", "value": "select * from test"}, "table_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test.10"], "value": [0], "value_names": []}, "table_names": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test"], "value": [0], "value_names": ["test"]}, "table_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": true}, "use_odbc": {"description": "Use only ODBC connection string and ignore the SQLAlchemy engine URL that is configured in the datasource", "editor": null, "label": "Use only ODBC connection string", "type": "boolean", "value": false}, "where_add_comparison": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_column_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test.0", "test.1", "test.10", "test.11", "test.12", "test.13", "test.14", "test.15", "test.16", "test.17", "test.18", "test.19", "test.2", "test.20", "test.21", "test.22", "test.23", "test.24", "test.25", "test.26", "test.27", "test.28", "test.29", "test.3", "test.30", "test.31", "test.32", "test.33", "test.34", "test.35", "test.36", "test.37", "test.38", "test.39", "test.4", "test.40", "test.41", "test.42", "test.43", "test.44", "test.45", "test.46", "test.47", "test.48", "test.49", "test.5", "test.50", "test.51", "test.52", "test.53", "test.54", "test.55", "test.56", "test.57", "test.58", "test.59", "test.6", "test.60", "test.61", "test.62", "test.63", "test.64", "test.65", "test.66", "test.67", "test.68", "test.69", "test.7", "test.70", "test.71", "test.72", "test.73", "test.74", "test.75", "test.76", "test.77", "test.78", "test.79", "test.8", "test.80", "test.81", "test.82", "test.83", "test.84", "test.85", "test.86", "test.87", "test.88", "test.89", "test.9", "test.90", "test.91", "test.92", "test.93", "test.94", "test.95", "test.96", "test.97", "test.98", "test.99"], "value": [0], "value_names": ["test.0"]}, "where_comparison_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["=", "&lt;", "&gt;", "&gt;=", "&lt;=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "value_names": []}, "where_condition": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_condition_list": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}}}, "fail_strategy": {"description": "", "label": "Action on import failure", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="datasource" type_base="datasource" uuid="{5a9eb973-b041-4ba3-ae34-23afe5d0273f}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{56893997-ffd7-4e29-ae57-80eaadb62e83}">
        <label>Imported Table</label>
        <description>Imported Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.vjointablenode" uuid="{625ad54b-d4bb-407a-b2fc-ee4d21968243}" x="1875.0" y="2275.0">
    <label>VJoin Table</label>
    <description>Vertical join of two Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "fill": {"description": "Select if columns that are not represented in all Tables should be complemented", "editor": null, "label": "Complement missing columns", "order": 0, "type": "boolean", "value": false}, "fill_strategy": {"description": "When \"Complement with nan or empty string\" is selected missing columns will be replaced by columns of nan or empty strings. When \"Mask missing values\" is selected missing columns will be result in masked values", "label": "Complement strategy", "mode": "selected", "order": 1, "passthrough": false, "type": "list", "list": ["Complement with nan or empty string", "Mask missing values"], "value": [0], "value_names": [], "editor": {"include_empty": false, "options": null, "type": "combobox"}}, "output_index": {"description": "Specify name for output index column. If left empty, no index column will be created", "editor": null, "label": "Output index", "order": 2, "type": "string", "value": ""}, "minimum_increment": {"description": "Specify the increment in the outgoing index column for tables with no rows. Either 1 or 0.", "label": "Increment for empty tables", "order": 3, "type": "integer", "value": 1, "editor": {"max": 1, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{d373badf-8a9a-49f4-921c-5eb1b90f7320}">
        <label>Input Table 1</label>
        <description>Input Table 1</description>
      </input>
      <input key="port2" scheme="hdf5" type="table" type_base="table" uuid="{7b716439-2271-4cb5-8bd0-840af7d7d377}">
        <label>Input Table 2</label>
        <description>Input Table 2</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{ba75e861-aac0-4f9a-ba7d-b66106dba123}">
        <label>Joined Table</label>
        <description>Joined Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.export.exporttables" uuid="{6dd51ab1-5517-448b-a6ad-407daa2999de}" x="2325.0" y="3225.0">
    <label>Export Tables</label>
    <description>Export Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "active_exporter": {"description": "Select data format exporter. Each data format has its own exporter with its own special configuration, see exporter information. The selection of exporter do also suggest filename extension.", "editor": null, "label": "Exporter", "order": 0, "type": "string", "value": "SQL"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "CSV": {"label": "", "type": "group", "encoding": {"description": "Character encoding determines how different characters are represented when written to disc, sent over a network, etc.", "label": "Character encoding", "mode": "selected", "passthrough": false, "type": "list", "list": ["Western (ASCII)", "Western (ISO 8859-1)", "Western (ISO 8859-15)", "Western (Windows 1252)", "UTF-8"], "value": [4], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "csv"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "sydata"}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "MAT": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "mat"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "connection_string": {"description": "String used by pyodbc to make a connection.", "editor": null, "label": "Connection string", "type": "string", "value": ""}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "type": "string", "value": "SQLAlchemy", "editor": {"type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "type": "string", "value": "sqlite:///test_output_sqlite_mask_cols.db"}, "drop_table": {"description": "Drop table before adding data.", "editor": null, "label": "Drop table", "type": "boolean", "value": false}, "table_name": {"description": "The table name used when exporting.", "editor": null, "label": "Table name", "type": "string", "value": "test"}, "use_nvarchar_size": {"description": "Use nvarchar(size) instead of nvarchar(MAX).", "editor": null, "label": "Use nvarchar(size)", "type": "boolean", "value": false}}, "SQLite": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "db"}}, "XLS": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xls"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}}, "XLSX": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xlsx"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}, "to_plot": {"description": "Select if incoming Tables with plot data should be embedded in the output file. If no plots are present, the option is disabled.", "editor": null, "label": "Embed plot in output file(s)", "type": "boolean", "value": false}, "to_sheets": {"description": "Select if incoming Tables are going to to be exported to sheets in a single file or to a single sheet inmultiple files.", "editor": null, "label": "Export data to sheets", "type": "boolean", "value": false}}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "order": 2, "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "order": 3, "type": "string", "value": ""}, "plot": {"description": "If there is a plot attribute in the input tables(s), create a separate file with the plot.", "label": "Output separate plot file with the following extension:", "mode": "selected", "order": 4, "passthrough": false, "type": "list", "list": ["-", "eps", "pdf", "svg", "png"], "value": [0], "value_names": [], "editor": {"include_empty": false, "options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{d0194cf9-db5b-4665-abb7-2472f4f7c479}">
        <label>Tables to be exported</label>
        <description>Tables to be exported</description>
      </input>
      <output key="port0" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{4fd742b2-3f70-459d-b8c7-e8dab903aa96}">
        <label>Datasources of exported files</label>
        <description>Datasources of exported files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" uuid="{72ff6f20-76ac-4c90-bd54-93383e5d7d57}" x="1275.0" y="2125.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{7787d148-9b53-4b97-97b0-dd90abc0f6e1}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{14f43ab8-44b4-45eb-aa43-fed3fdc99cc5}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{8e0045cb-ebe3-41d1-a1f8-c30c959e0173}" x="1975.0" y="2750.0">
    <label>Slice data Table</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[2:]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{289c19c4-0ecf-4be7-8fcf-e715ec11e336}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{f49b7c19-8263-4097-80fb-89a33a82ccff}">
        <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
        <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.files.deletefile" uuid="{9027143d-ae8c-4a5d-9303-a24de5e6db87}" x="2550.0" y="3075.0">
    <label>Delete file</label>
    <description>Delete a file</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;Andreas T&#229;gerud&lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(C) 2016-2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="datasource" type_base="datasource" uuid="{d1f930a4-9135-46bd-a52d-cde2d4a38696}">
        <label>File to delete</label>
        <description>File to delete</description>
      </input>
      <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{5be6b582-02f9-459f-a0e8-8be652fb30a5}">
        <label>Path to deleted file</label>
        <description>Path to deleted file</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.files.deletefile" uuid="{92f37099-3c98-4e42-8878-1d7255a82012}" x="2550.0" y="2600.0">
    <label>Delete file</label>
    <description>Delete a file</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;Andreas T&#229;gerud&lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(C) 2016-2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="datasource" type_base="datasource" uuid="{964b7eef-b356-4a8f-84c3-f902c16524f8}">
        <label>File to delete</label>
        <description>File to delete</description>
      </input>
      <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{a878fb2f-19e7-4f3a-8ce4-893d8bd02d1d}">
        <label>Path to deleted file</label>
        <description>Path to deleted file</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.assertequaltable" uuid="{a269c76e-71fe-439a-9b47-b2544daebaec}" x="2100.0" y="2375.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "col_order": {"description": "Differing column order will trigger error", "editor": null, "label": "Compare column order", "order": 0, "type": "boolean", "value": true}, "col_attrs": {"description": "Differing column attributes will trigger error", "editor": null, "label": "Compare column attributes", "order": 1, "type": "boolean", "value": true}, "tbl_names": {"description": "Differing table name will trigger error", "editor": null, "label": "Compare table names", "order": 2, "type": "boolean", "value": true}, "tbl_attrs": {"description": "Differing table attributes will trigger error", "editor": null, "label": "Compare table attributes", "order": 3, "type": "boolean", "value": true}, "inexact_float": {"description": "If any arithemtics is invovled floats should probably be compared approximately.", "editor": null, "label": "Approximate comparison of floats", "order": 4, "type": "boolean", "value": false}, "rel_tol": {"description": "Floats are considered unequal if the relative difference between them is larger than this value.", "editor": null, "label": "Relative tolerance", "order": 5, "type": "float", "value": 1e-05}, "abs_tol": {"description": "Floats are considered unequal if the absolute difference between them is larger than this value.", "editor": null, "label": "Absolute tolerance", "order": 6, "type": "float", "value": 1e-08}}</parameters>
    <ports>
      <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{68fe195a-5fcb-4d24-9b31-c0ce2944478c}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{0c9a024a-5685-4fd0-ad87-3db91d9c1c10}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{95d18664-7dc6-4f42-886a-e2151c06f9a7}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.getitemlist" uuid="{afacfd95-aece-4c97-bb40-88b122837267}" x="1525.0" y="2600.0">
    <label>Get Item List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "index": {"description": "Choose item index in list.", "label": "Index", "order": 0, "passthrough": false, "type": "list", "list": ["0"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="list" scheme="text" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{4ac2e236-3cee-4ca6-a983-9e367fe9b8b0}">
        <label>Input List</label>
        <description>Input List</description>
      </input>
      <output key="item" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{fae9a39d-94b0-4855-bb0b-f28fa7f8f44f}">
        <label>Output selected Item from List</label>
        <description>Output selected Item from List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.vjointablenode" uuid="{b77c1655-1869-42c5-9b52-940a78d94ae7}" x="1875.0" y="2750.0">
    <label>VJoin Table</label>
    <description>Vertical join of two Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "fill": {"description": "Select if columns that are not represented in all Tables should be complemented", "editor": null, "label": "Complement missing columns", "order": 0, "type": "boolean", "value": false}, "fill_strategy": {"description": "When \"Complement with nan or empty string\" is selected missing columns will be replaced by columns of nan or empty strings. When \"Mask missing values\" is selected missing columns will be result in masked values", "label": "Complement strategy", "mode": "selected", "order": 1, "passthrough": false, "type": "list", "list": ["Complement with nan or empty string", "Mask missing values"], "value": [0], "value_names": [], "editor": {"include_empty": false, "options": null, "type": "combobox"}}, "output_index": {"description": "Specify name for output index column. If left empty, no index column will be created", "editor": null, "label": "Output index", "order": 2, "type": "string", "value": ""}, "minimum_increment": {"description": "Specify the increment in the outgoing index column for tables with no rows. Either 1 or 0.", "label": "Increment for empty tables", "order": 3, "type": "integer", "value": 1, "editor": {"max": 1, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{07a8d3a9-d19d-42dd-9aee-b49705da5e4a}">
        <label>Input Table 1</label>
        <description>Input Table 1</description>
      </input>
      <input key="port2" scheme="hdf5" type="table" type_base="table" uuid="{194ed837-8bc1-4bb2-a796-1e6c329c5b8d}">
        <label>Input Table 2</label>
        <description>Input Table 2</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{275b5858-321e-42c5-9fc6-acef792b44cb}">
        <label>Joined Table</label>
        <description>Joined Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.generic.propagatefirst" uuid="{c16d3879-b34c-4925-a231-bde6795ab014}" x="1650.0" y="3250.0">
    <label>Propagate First Input</label>
    <description>Propagate first input to output</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item1" scheme="text" type="datasource" type_base="&lt;a&gt;" uuid="{4f1c56cc-b1f8-4d01-80ba-6a2bc8f20767}">
        <label>The Item to be propagated</label>
        <description>The Item to be propagated</description>
      </input>
      <input key="item2" scheme="hdf5" type="datasource" type_base="&lt;b&gt;" uuid="{474e8109-dd41-4821-90f6-0fc9da790a4c}">
        <label>Item that will not be propagated</label>
        <description>Item that will not be propagated</description>
      </input>
      <output key="item" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{ef5d677a-3597-4b66-ae19-bc56d36ead95}">
        <label>Propagated Item</label>
        <description>Propagated Item</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.importtable" uuid="{c2919fbe-64b2-4782-a431-d725d25e2599}" x="1650.0" y="3075.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "SQL"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"label": "", "type": "group", "data_end_row": {"description": "The data rows.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 2, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "delimiter": {"description": "", "editor": null, "label": "", "type": "string", "value": ";"}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "double_quotations": {"description": "Remove double quotations in importation.", "editor": null, "label": "Remove double quotations", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "editor": null, "label": "", "type": "string", "value": ""}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "source_coding": {"description": "", "editor": null, "label": "", "type": "string", "value": "iso8859_1"}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input data", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "path_list": {"description": "The paths selected to import data from.", "label": "Selected paths", "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"options": null, "type": "combobox"}}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "custom_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "join_column_selection": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "join_tables": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "lineedit_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": false}, "preview_query": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "query_str": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "table_columns": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "table_names": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["test"], "value": [0], "value_names": []}, "table_query": {"description": "", "editor": null, "label": "", "type": "boolean", "value": true}, "use_odbc": {"description": "Use only ODBC connection string and ignore the SQLAlchemy engine URL that is configured in the datasource", "editor": null, "label": "Use only ODBC connection string", "type": "boolean", "value": false}, "where_add_comparison": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_column_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}, "where_comparison_combo": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": ["=", "&lt;", "&gt;", "&gt;=", "&lt;=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "value_names": []}, "where_condition": {"description": "", "editor": null, "label": "", "type": "string", "value": ""}, "where_condition_list": {"description": "", "editor": null, "label": "", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": []}}, "Table": {"label": "", "type": "group"}, "XLS": {"label": "", "type": "group", "data_end_row": {"description": "The last data row.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 2, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "description_row": {"description": "The row where the descriptions are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "header_row": {"description": "The row where the headers are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input", "type": "boolean", "value": false}, "unit_row": {"description": "The row where the units are located.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "units": {"description": "File has headers.", "editor": null, "label": "", "type": "boolean", "value": false}, "worksheet_name": {"description": "The worksheet to import from.", "label": "Select worksheet", "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}}, "fail_strategy": {"description": "", "label": "Action on import failure", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="datasource" type_base="datasource" uuid="{6538a704-9500-491a-97b9-9bc493039ea6}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{04c90172-dd4f-4acc-8839-5a8cc7bbf1f3}">
        <label>Imported Table</label>
        <description>Imported Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{d7e8718e-daed-4a83-8459-7f845c72885b}" x="1975.0" y="3225.0">
    <label>Slice data Table</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "slice": {"description": "Use standard Python syntax to define pattern for slice operation, [start:stop:step]", "editor": null, "label": "Slice", "order": 0, "type": "string", "value": "[2:]"}, "limit": {"description": "Specify the maximum number of rows in the preview table", "editor": null, "label": "Limit preview to", "order": 1, "type": "integer", "value": 100}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{5ee104f2-517f-4358-a1a3-91de5d0b20c1}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{71460ca9-f582-4b36-8c9c-f7c99d01ecb6}">
        <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
        <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.getitemlist" uuid="{d929418c-dc21-487e-a236-f85bc21bd37d}" x="1525.0" y="2125.0">
    <label>Get Item List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "index": {"description": "Choose item index in list.", "label": "Index", "order": 0, "passthrough": false, "type": "list", "list": ["0"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="list" scheme="text" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{3a9377d7-225d-465b-b31f-77f978c7745c}">
        <label>Input List</label>
        <description>Input List</description>
      </input>
      <output key="item" scheme="hdf5" type="datasource" type_base="&lt;a&gt;" uuid="{80cc5f12-d61d-4961-afe6-8afd38986ae1}">
        <label>Output selected Item from List</label>
        <description>Output selected Item from List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.createtable" uuid="{db3d8aaf-053e-4b31-a9d4-8f9977420a46}" x="1175.0" y="3325.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "json_table": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"text\", \"U\", [null, \"b\"]], [\"float\", \"f\", [1.1, null]], [\"mask_text\", \"U\", [null, null]], [\"mask_float\", \"f\", [null, null]]]"}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{fd1dc450-03f2-40b6-9cb1-385b8d24129a}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.export.exporttables" uuid="{de1f2dab-e4f2-41c9-9839-d22a359c6a57}" x="1400.0" y="3075.0">
    <label>Export Tables</label>
    <description>Export Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "active_exporter": {"description": "Select data format exporter. Each data format has its own exporter with its own special configuration, see exporter information. The selection of exporter do also suggest filename extension.", "editor": null, "label": "Exporter", "order": 0, "type": "string", "value": "SQLite"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "CSV": {"label": "", "type": "group", "encoding": {"description": "Character encoding determines how different characters are represented when written to disc, sent over a network, etc.", "label": "Character encoding", "mode": "selected", "passthrough": false, "type": "list", "list": ["Western (ASCII)", "Western (ISO 8859-1)", "Western (ISO 8859-15)", "Western (Windows 1252)", "UTF-8"], "value": [4], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "csv"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "sydata"}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "MAT": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "mat"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "connection_string": {"description": "String used by pyodbc to make a connection.", "editor": null, "label": "Connection string", "type": "string", "value": ""}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "type": "string", "value": "ODBC", "editor": {"type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "type": "string", "value": "mssql+pyodbc:///"}, "drop_table": {"description": "Drop table before adding data.", "editor": null, "label": "Drop table", "type": "boolean", "value": false}, "table_name": {"description": "The table name used when exporting.", "editor": null, "label": "Table name", "type": "string", "value": ""}, "use_nvarchar_size": {"description": "Use nvarchar(size) instead of nvarchar(MAX).", "editor": null, "label": "Use nvarchar(size)", "type": "boolean", "value": false}}, "SQLite": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "db"}}, "XLS": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xls"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}}, "XLSX": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xlsx"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}, "to_plot": {"description": "Select if incoming Tables with plot data should be embedded in the output file. If no plots are present, the option is disabled.", "editor": null, "label": "Embed plot in output file(s)", "type": "boolean", "value": false}, "to_sheets": {"description": "Select if incoming Tables are going to to be exported to sheets in a single file or to a single sheet inmultiple files.", "editor": null, "label": "Export data to sheets", "type": "boolean", "value": false}}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "order": 2, "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "order": 3, "type": "string", "value": "test_output_sqlite_mask_cols"}, "plot": {"description": "If there is a plot attribute in the input tables(s), create a separate file with the plot.", "label": "Output separate plot file with the following extension:", "mode": "selected", "order": 4, "passthrough": false, "type": "list", "list": ["-", "eps", "pdf", "svg", "png"], "value": [0], "value_names": [], "editor": {"include_empty": false, "options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{f5570168-a70f-48ad-80f5-2b67420adc44}">
        <label>Tables to be exported</label>
        <description>Tables to be exported</description>
      </input>
      <output key="port0" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{5b208076-0fc6-4f7b-978f-1132a464ffaa}">
        <label>Datasources of exported files</label>
        <description>Datasources of exported files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.export.exporttables" uuid="{ded19092-6e8b-4886-9aae-368ea712baaa}" x="2325.0" y="2750.0">
    <label>Export Tables</label>
    <description>Export Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "active_exporter": {"description": "Select data format exporter. Each data format has its own exporter with its own special configuration, see exporter information. The selection of exporter do also suggest filename extension.", "editor": null, "label": "Exporter", "order": 0, "type": "string", "value": "SQL"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "CSV": {"label": "", "type": "group", "encoding": {"description": "Character encoding determines how different characters are represented when written to disc, sent over a network, etc.", "label": "Character encoding", "mode": "selected", "passthrough": false, "type": "list", "list": ["Western (ASCII)", "Western (ISO 8859-1)", "Western (ISO 8859-15)", "Western (Windows 1252)", "UTF-8"], "value": [4], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "csv"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "HDF5": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "sydata"}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "MAT": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "mat"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "SQL": {"label": "", "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "connection_string": {"description": "String used by pyodbc to make a connection.", "editor": null, "label": "Connection string", "type": "string", "value": ""}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "type": "string", "value": "SQLAlchemy", "editor": {"type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "type": "string", "value": "sqlite:///test_output_sqlite_mask.db"}, "drop_table": {"description": "Drop table before adding data.", "editor": null, "label": "Drop table", "type": "boolean", "value": false}, "table_name": {"description": "The table name used when exporting.", "editor": null, "label": "Table name", "type": "string", "value": "test"}, "use_nvarchar_size": {"description": "Use nvarchar(size) instead of nvarchar(MAX).", "editor": null, "label": "Use nvarchar(size)", "type": "boolean", "value": false}}, "SQLite": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "db"}}, "XLS": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xls"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}}, "XLSX": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "xlsx"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}, "to_plot": {"description": "Select if incoming Tables with plot data should be embedded in the output file. If no plots are present, the option is disabled.", "editor": null, "label": "Embed plot in output file(s)", "type": "boolean", "value": false}, "to_sheets": {"description": "Select if incoming Tables are going to to be exported to sheets in a single file or to a single sheet inmultiple files.", "editor": null, "label": "Export data to sheets", "type": "boolean", "value": false}}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "order": 2, "type": "string", "value": ".", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "order": 3, "type": "string", "value": ""}, "plot": {"description": "If there is a plot attribute in the input tables(s), create a separate file with the plot.", "label": "Output separate plot file with the following extension:", "mode": "selected", "order": 4, "passthrough": false, "type": "list", "list": ["-", "eps", "pdf", "svg", "png"], "value": [0], "value_names": [], "editor": {"include_empty": false, "options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{dd40f400-77b8-4684-ad70-ab76949c2442}">
        <label>Tables to be exported</label>
        <description>Tables to be exported</description>
      </input>
      <output key="port0" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{969fa3ce-d506-4271-bd9e-de2a093528de}">
        <label>Datasources of exported files</label>
        <description>Datasources of exported files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.assertequaltable" uuid="{e3868811-171a-4451-a864-dddc89419a14}" x="2100.0" y="3325.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "col_order": {"description": "Differing column order will trigger error", "editor": null, "label": "Compare column order", "order": 0, "type": "boolean", "value": true}, "col_attrs": {"description": "Differing column attributes will trigger error", "editor": null, "label": "Compare column attributes", "order": 1, "type": "boolean", "value": true}, "tbl_names": {"description": "Differing table name will trigger error", "editor": null, "label": "Compare table names", "order": 2, "type": "boolean", "value": true}, "tbl_attrs": {"description": "Differing table attributes will trigger error", "editor": null, "label": "Compare table attributes", "order": 3, "type": "boolean", "value": true}, "inexact_float": {"description": "If any arithemtics is invovled floats should probably be compared approximately.", "editor": null, "label": "Approximate comparison of floats", "order": 4, "type": "boolean", "value": false}, "rel_tol": {"description": "Floats are considered unequal if the relative difference between them is larger than this value.", "editor": null, "label": "Relative tolerance", "order": 5, "type": "float", "value": 1e-05}, "abs_tol": {"description": "Floats are considered unequal if the absolute difference between them is larger than this value.", "editor": null, "label": "Absolute tolerance", "order": 6, "type": "float", "value": 1e-08}}</parameters>
    <ports>
      <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{d80d76e3-5b68-42b3-9a3b-5004a38e456f}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{aeb5c0b7-6a91-4de3-94f6-5d051edfa75e}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{102adb25-ca71-45bf-9ca4-d56d19ae5665}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" uuid="{e734ea40-07f3-43e8-bed0-4b92784b1ddd}" x="2200.0" y="2750.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{95514038-8755-4793-838a-c7b9adf83324}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{9a3141c0-6752-4c96-8260-502d602b7a13}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.datasources.filedatasource" uuid="{f23b7247-376d-4eca-9854-3ba062b17cca}" x="1525.0" y="3250.0">
    <label>Database SQLAlchemy + sqlite</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 0, "type": "string", "value": "", "editor": {"type": "filename", "filter": ["Any files (*)"]}}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "order": 1, "type": "string", "value": "sqlite:///test_output_sqlite_mask_cols.db"}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "order": 2, "type": "string", "value": "SQLAlchemy", "editor": {"include_empty": false, "type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": [], "editor": {"include_empty": false, "options": null, "type": "combobox"}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 4, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 5, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 6, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 7, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 8, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "mode": "selected", "order": 9, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [1], "value_names": ["Database"]}}</parameters>
    <ports>
      <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{9b4f2a92-db29-4fe8-9ea3-3e025ebf332e}">
        <label>Datasource with path to file</label>
        <description>Datasource with path to file</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.datasources.filedatasource" uuid="{f78480bc-0959-4da0-bbab-7cc414585d5e}" x="1525.0" y="2300.0">
    <label>Database SQLAlchemy + sqlite</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 0, "type": "string", "value": "", "editor": {"type": "filename", "filter": ["Any files (*)"]}}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "order": 1, "type": "string", "value": "sqlite:///test_output_sqlite.db"}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "order": 2, "type": "string", "value": "SQLAlchemy", "editor": {"type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 4, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 5, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 6, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 7, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 8, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "mode": "selected", "order": 9, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [1], "value_names": ["Database"]}}</parameters>
    <ports>
      <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{68da0379-f41a-442e-832a-af9c69db6cce}">
        <label>Datasource with path to file</label>
        <description>Datasource with path to file</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" uuid="{ff602641-59c6-4cdc-aa89-6047a21e4ba2}" x="2200.0" y="3225.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{ee37507d-437f-4f4c-a4a7-cdecdd4e4ae9}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{120f06de-de60-4e32-8099-ad33ea46e3db}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{0792660a-58d0-4e53-b660-b355a6c29a56}">
    <source node="{8e0045cb-ebe3-41d1-a1f8-c30c959e0173}" port="{f49b7c19-8263-4097-80fb-89a33a82ccff}"/>
    <destination node="{0d902c05-d828-4ab6-a818-0e200aa99c1b}" port="{4ebd3b5f-48e3-45ee-a4d8-e5c57b55308e}"/>
  </connection>
  <connection type="table" uuid="{17975755-14e3-40d5-b72b-696040ab6e6e}">
    <source node="{a269c76e-71fe-439a-9b47-b2544daebaec}" port="{95d18664-7dc6-4f42-886a-e2151c06f9a7}"/>
    <destination node="{1df9c32b-1687-4d0e-ab87-290de59e6f40}" port="{ed591d22-f94b-4d4a-9169-85f32f34a523}"/>
  </connection>
  <connection type="datasource" uuid="{222dda6b-cddb-406b-8dc2-7ff20c36f877}">
    <source node="{d929418c-dc21-487e-a236-f85bc21bd37d}" port="{80cc5f12-d61d-4961-afe6-8afd38986ae1}"/>
    <destination node="{56013445-978a-4793-96e1-49bf28f32b84}" port="{ab40c0f2-802c-4cf6-a89f-34f6c8068d2c}"/>
  </connection>
  <connection type="datasource" uuid="{28cdf0c6-9f94-4f17-b441-f543d41fddf2}">
    <source node="{2b22aa86-e94c-40f6-9c85-7b290cb92406}" port="{31229eec-6cb4-43b8-937e-18a087a63191}"/>
    <destination node="{c2919fbe-64b2-4782-a431-d725d25e2599}" port="{6538a704-9500-491a-97b9-9bc493039ea6}"/>
  </connection>
  <connection type="datasource" uuid="{294e50b9-2a26-4312-8a38-030c60a0a434}">
    <source node="{0390b1e2-877e-4947-9fd9-4ebafba61665}" port="{11beac2e-b3bc-4eb5-b351-4f0a27afa7d6}"/>
    <destination node="{9027143d-ae8c-4a5d-9303-a24de5e6db87}" port="{d1f930a4-9135-46bd-a52d-cde2d4a38696}"/>
  </connection>
  <connection type="[datasource]" uuid="{295b8e96-8933-46c1-9b62-96b2cc9a623b}">
    <source node="{de1f2dab-e4f2-41c9-9839-d22a359c6a57}" port="{5b208076-0fc6-4f7b-978f-1132a464ffaa}"/>
    <destination node="{2b22aa86-e94c-40f6-9c85-7b290cb92406}" port="{a04aad51-8411-4695-beac-1840f4bfc639}"/>
  </connection>
  <connection type="datasource" uuid="{333f3153-2675-42f6-8338-e02823565c31}">
    <source node="{5734556d-b73f-4289-a936-b8609680ecf2}" port="{443f9ae3-017c-494e-b12d-038f50b7534e}"/>
    <destination node="{92f37099-3c98-4e42-8878-1d7255a82012}" port="{964b7eef-b356-4a8f-84c3-f902c16524f8}"/>
  </connection>
  <connection type="[datasource]" uuid="{33ffa1f3-a3b3-4013-8a69-9fe206b15003}">
    <source node="{1743c14a-4210-48a3-9dc1-593133848e52}" port="{b7c160c6-3088-47b5-9b0e-2b55b29afd50}"/>
    <destination node="{afacfd95-aece-4c97-bb40-88b122837267}" port="{4ac2e236-3cee-4ca6-a983-9e367fe9b8b0}"/>
  </connection>
  <connection type="table" uuid="{435f1d9e-0fb3-4022-9e27-4c92a92bf3a3}">
    <source node="{d7e8718e-daed-4a83-8459-7f845c72885b}" port="{71460ca9-f582-4b36-8c9c-f7c99d01ecb6}"/>
    <destination node="{e3868811-171a-4451-a864-dddc89419a14}" port="{aeb5c0b7-6a91-4de3-94f6-5d051edfa75e}"/>
  </connection>
  <connection type="[table]" uuid="{464876fd-0bc1-44bb-a3fd-2110fab6e628}">
    <source node="{37db89fe-9499-4362-86cc-190f5646a332}" port="{fec9f461-ff1b-4248-8fed-c1611d0d676c}"/>
    <destination node="{de1f2dab-e4f2-41c9-9839-d22a359c6a57}" port="{f5570168-a70f-48ad-80f5-2b67420adc44}"/>
  </connection>
  <connection type="table" uuid="{49847579-3916-4d11-a94f-8aaa7177aea9}">
    <source node="{2c01f7f2-e025-4b39-9ed5-4676f0468e30}" port="{e640deb3-724d-4af7-bb8d-0ce2271a1b4c}"/>
    <destination node="{a269c76e-71fe-439a-9b47-b2544daebaec}" port="{68fe195a-5fcb-4d24-9b31-c0ce2944478c}"/>
  </connection>
  <connection type="table" uuid="{540b2f4f-1e09-4cc5-ac44-349c78898a21}">
    <source node="{0231e02f-3ac6-4192-933a-266272def84d}" port="{f865d370-88eb-49e5-b25f-2dcb5d1db8b0}"/>
    <destination node="{e3868811-171a-4451-a864-dddc89419a14}" port="{d80d76e3-5b68-42b3-9a3b-5004a38e456f}"/>
  </connection>
  <connection type="datasource" uuid="{5414b9e1-3f7e-41a2-a5a3-79a869a29399}">
    <source node="{43dce0d6-85b7-4a44-aa49-cc988b31dfb9}" port="{b3a6e49b-20ec-403b-827c-40bd5d6f7c0c}"/>
    <destination node="{01a5a116-7a4f-49f8-8af2-2b286080abcf}" port="{906f2ffc-a225-41a8-a3fe-469087049351}"/>
  </connection>
  <connection type="table" uuid="{5e9d4866-c151-48e5-8638-b6c3b365fb2e}">
    <source node="{5d8b355e-cd6b-4e05-943a-b8baf4168974}" port="{56893997-ffd7-4e29-ae57-80eaadb62e83}"/>
    <destination node="{1a4aed45-12ab-4013-a222-99268d4453aa}" port="{44978057-944f-42cd-ac49-7f486648e9fb}"/>
  </connection>
  <connection type="table" uuid="{602eecf3-057b-4570-b8a2-c9b94a3baada}">
    <source node="{41593c0f-5410-492f-814f-9646187b6744}" port="{7ac5e588-2aa5-42d6-9955-ef41442a660f}"/>
    <destination node="{0d902c05-d828-4ab6-a818-0e200aa99c1b}" port="{c40930d4-c008-4920-ab04-507e332487c3}"/>
  </connection>
  <connection type="[table]" uuid="{64159ee5-a850-4e26-9aab-48d57ce86ce4}">
    <source node="{2491b724-7875-45a3-bd84-1e994664c154}" port="{3b6f3950-40ec-4707-857f-633794ec0b90}"/>
    <destination node="{1743c14a-4210-48a3-9dc1-593133848e52}" port="{49a54537-cbfb-4ca7-b4e2-9414af2d5fdb}"/>
  </connection>
  <connection type="datasource" uuid="{6911cf18-3ae8-4d2a-89f0-6a420275f47b}">
    <source node="{d929418c-dc21-487e-a236-f85bc21bd37d}" port="{80cc5f12-d61d-4961-afe6-8afd38986ae1}"/>
    <destination node="{4091fd5d-9c5c-4255-9d80-78fc056a7c6e}" port="{86a88680-7037-4b7d-b3ec-d1551c1d60dc}"/>
  </connection>
  <connection type="datasource" uuid="{75796f7a-3f6a-4146-b1da-206d4bd07fed}">
    <source node="{c16d3879-b34c-4925-a231-bde6795ab014}" port="{ef5d677a-3597-4b66-ae19-bc56d36ead95}"/>
    <destination node="{5d8b355e-cd6b-4e05-943a-b8baf4168974}" port="{5a9eb973-b041-4ba3-ae34-23afe5d0273f}"/>
  </connection>
  <connection type="table" uuid="{75a31b66-f9f7-45dd-b60f-26dacda9a0d9}">
    <source node="{41593c0f-5410-492f-814f-9646187b6744}" port="{7ac5e588-2aa5-42d6-9955-ef41442a660f}"/>
    <destination node="{2491b724-7875-45a3-bd84-1e994664c154}" port="{2b64b1e5-9fd9-4cf1-95fe-0d630ebd0edd}"/>
  </connection>
  <connection type="[datasource]" uuid="{83c9b721-87b8-4ded-9803-8c7e4373a3a6}">
    <source node="{2c58bf48-de5b-40cd-a201-eb17bf931b12}" port="{3e462b9a-fb9f-42ef-bdfc-cbd5603306dd}"/>
    <destination node="{43dce0d6-85b7-4a44-aa49-cc988b31dfb9}" port="{c8e88e09-a0a5-4b1e-b023-0e008178e80d}"/>
  </connection>
  <connection type="table" uuid="{83d25cad-7ad2-458f-ab05-1ee73cb26b00}">
    <source node="{06b7aab2-fe80-47e1-90de-03fa6993a7bc}" port="{85b6305e-1094-44a5-8c1f-bec00ef5f8dc}"/>
    <destination node="{625ad54b-d4bb-407a-b2fc-ee4d21968243}" port="{7b716439-2271-4cb5-8bd0-840af7d7d377}"/>
  </connection>
  <connection type="datasource" uuid="{8a11fbbd-1dbe-4c18-af7f-6d2ef29be189}">
    <source node="{4091fd5d-9c5c-4255-9d80-78fc056a7c6e}" port="{12460ce2-6ca8-4c21-979a-f100272e5f56}"/>
    <destination node="{06b7aab2-fe80-47e1-90de-03fa6993a7bc}" port="{cc032efd-c9e0-4ab8-b44d-e6a700845689}"/>
  </connection>
  <connection type="datasource" uuid="{8f3d5e8f-cfd2-4f35-b9d7-9601ef1ea0bc}">
    <source node="{afacfd95-aece-4c97-bb40-88b122837267}" port="{fae9a39d-94b0-4855-bb0b-f28fa7f8f44f}"/>
    <destination node="{03c60038-7db8-42df-a199-de134381047d}" port="{19051d85-1764-4183-a619-456b3808caf1}"/>
  </connection>
  <connection type="datasource" uuid="{907a9f75-ed95-4c6f-9016-74cc823291c2}">
    <source node="{f23b7247-376d-4eca-9854-3ba062b17cca}" port="{9b4f2a92-db29-4fe8-9ea3-3e025ebf332e}"/>
    <destination node="{c16d3879-b34c-4925-a231-bde6795ab014}" port="{4f1c56cc-b1f8-4d01-80ba-6a2bc8f20767}"/>
  </connection>
  <connection type="table" uuid="{997fc58b-3931-4b4d-b99c-ed3ae9781c27}">
    <source node="{1a4aed45-12ab-4013-a222-99268d4453aa}" port="{61fff138-f067-4edf-bbb8-67e1d1705417}"/>
    <destination node="{d7e8718e-daed-4a83-8459-7f845c72885b}" port="{5ee104f2-517f-4358-a1a3-91de5d0b20c1}"/>
  </connection>
  <connection type="datasource" uuid="{9ac199b4-241a-4b90-855c-b5c61890c56c}">
    <source node="{2b22aa86-e94c-40f6-9c85-7b290cb92406}" port="{31229eec-6cb4-43b8-937e-18a087a63191}"/>
    <destination node="{c16d3879-b34c-4925-a231-bde6795ab014}" port="{474e8109-dd41-4821-90f6-0fc9da790a4c}"/>
  </connection>
  <connection type="table" uuid="{9b891ca4-2f46-4b8a-9751-b424535f9e2f}">
    <source node="{c2919fbe-64b2-4782-a431-d725d25e2599}" port="{04c90172-dd4f-4acc-8839-5a8cc7bbf1f3}"/>
    <destination node="{1a4aed45-12ab-4013-a222-99268d4453aa}" port="{b511a910-c9c5-430b-824a-ee152bdfb204}"/>
  </connection>
  <connection type="table" uuid="{a2245765-2ba5-408b-999c-9a846c20b78e}">
    <source node="{db3d8aaf-053e-4b31-a9d4-8f9977420a46}" port="{fd1dc450-03f2-40b6-9cb1-385b8d24129a}"/>
    <destination node="{37db89fe-9499-4362-86cc-190f5646a332}" port="{8da41264-d7ff-450a-966a-14370b554080}"/>
  </connection>
  <connection type="[table]" uuid="{a3beb4f2-7b21-4d0a-98e5-524955286024}">
    <source node="{ff602641-59c6-4cdc-aa89-6047a21e4ba2}" port="{120f06de-de60-4e32-8099-ad33ea46e3db}"/>
    <destination node="{6dd51ab1-5517-448b-a6ad-407daa2999de}" port="{d0194cf9-db5b-4665-abb7-2472f4f7c479}"/>
  </connection>
  <connection type="[datasource]" uuid="{a65f914b-bc74-473c-adae-eca807efad90}">
    <source node="{4dba7300-1336-43f5-a89c-a4601475937f}" port="{7c6a7130-05b8-41ea-8f85-9c47cf0623fe}"/>
    <destination node="{d929418c-dc21-487e-a236-f85bc21bd37d}" port="{3a9377d7-225d-465b-b31f-77f978c7745c}"/>
  </connection>
  <connection type="[table]" uuid="{a7c04a81-8fa4-41aa-b8c1-001b8921fda5}">
    <source node="{e734ea40-07f3-43e8-bed0-4b92784b1ddd}" port="{9a3141c0-6752-4c96-8260-502d602b7a13}"/>
    <destination node="{ded19092-6e8b-4886-9aae-368ea712baaa}" port="{dd40f400-77b8-4684-ad70-ab76949c2442}"/>
  </connection>
  <connection type="datasource" uuid="{b3d902e1-842c-4917-b680-94a4e0791ab3}">
    <source node="{d929418c-dc21-487e-a236-f85bc21bd37d}" port="{80cc5f12-d61d-4961-afe6-8afd38986ae1}"/>
    <destination node="{43dce0d6-85b7-4a44-aa49-cc988b31dfb9}" port="{fc9a29bf-de44-4c46-bd59-2f439ea5d923}"/>
  </connection>
  <connection type="datasource" uuid="{b6869b52-c371-426d-971d-356955f0c9b6}">
    <source node="{afacfd95-aece-4c97-bb40-88b122837267}" port="{fae9a39d-94b0-4855-bb0b-f28fa7f8f44f}"/>
    <destination node="{0a320436-a226-4c48-a4b8-c1efcddf68c5}" port="{e7d1deb4-1baa-49a9-a2a9-dc8843faf7e5}"/>
  </connection>
  <connection type="table" uuid="{ba034e8a-cad2-4bdf-ad95-eccdec74da5b}">
    <source node="{49db8b25-1773-4c78-bc32-31880befcb46}" port="{64c3b17e-999f-4869-af56-dbaceb8ab5cf}"/>
    <destination node="{b77c1655-1869-42c5-9b52-940a78d94ae7}" port="{194ed837-8bc1-4bb2-a796-1e6c329c5b8d}"/>
  </connection>
  <connection type="[table]" uuid="{baadad86-1906-443d-95ae-50661f5a234b}">
    <source node="{72ff6f20-76ac-4c90-bd54-93383e5d7d57}" port="{14f43ab8-44b4-45eb-aa43-fed3fdc99cc5}"/>
    <destination node="{4dba7300-1336-43f5-a89c-a4601475937f}" port="{5627461a-bbac-4dbb-91e1-073a59d101b4}"/>
  </connection>
  <connection type="datasource" uuid="{bf790bce-1ab5-4671-b67f-d188086fca16}">
    <source node="{0a320436-a226-4c48-a4b8-c1efcddf68c5}" port="{595f1d9f-a61b-4ce5-8661-fad44805469a}"/>
    <destination node="{49db8b25-1773-4c78-bc32-31880befcb46}" port="{ebabcf23-d86f-4975-af51-21522e4be42b}"/>
  </connection>
  <connection type="datasource" uuid="{c46a39d8-b485-4b53-ad4b-85567f032925}">
    <source node="{2b22aa86-e94c-40f6-9c85-7b290cb92406}" port="{31229eec-6cb4-43b8-937e-18a087a63191}"/>
    <destination node="{0390b1e2-877e-4947-9fd9-4ebafba61665}" port="{af663a98-3c1b-41d3-afc4-d49150a4a824}"/>
  </connection>
  <connection type="datasource" uuid="{c6912a4d-55f7-47fa-84b3-6283095b6ce9}">
    <source node="{afacfd95-aece-4c97-bb40-88b122837267}" port="{fae9a39d-94b0-4855-bb0b-f28fa7f8f44f}"/>
    <destination node="{5734556d-b73f-4289-a936-b8609680ecf2}" port="{c589586d-1b98-4f04-aaba-c5820e8f3258}"/>
  </connection>
  <connection type="table" uuid="{c8c1fad8-a21e-4e27-b335-53fadee0a97e}">
    <source node="{56013445-978a-4793-96e1-49bf28f32b84}" port="{a900d032-1977-4212-9eac-02c4b6791637}"/>
    <destination node="{625ad54b-d4bb-407a-b2fc-ee4d21968243}" port="{d373badf-8a9a-49f4-921c-5eb1b90f7320}"/>
  </connection>
  <connection type="table" uuid="{cde6a570-dd47-4b8b-b25f-e02396b7e594}">
    <source node="{625ad54b-d4bb-407a-b2fc-ee4d21968243}" port="{ba75e861-aac0-4f9a-ba7d-b66106dba123}"/>
    <destination node="{2b0f3e75-95ff-489a-9835-0c7d3e5fa947}" port="{5994713e-6a75-4db8-9673-0a20f1fc3457}"/>
  </connection>
  <connection type="table" uuid="{ce4dc662-9c35-4c0b-ae05-368bd6e7b6aa}">
    <source node="{03c60038-7db8-42df-a199-de134381047d}" port="{47146731-d821-4835-a6a8-bbdec902710f}"/>
    <destination node="{b77c1655-1869-42c5-9b52-940a78d94ae7}" port="{07a8d3a9-d19d-42dd-9aee-b49705da5e4a}"/>
  </connection>
  <connection type="[datasource]" uuid="{d21ea56d-2607-4c49-bf7e-eab953f3c6e9}">
    <source node="{ded19092-6e8b-4886-9aae-368ea712baaa}" port="{969fa3ce-d506-4271-bd9e-de2a093528de}"/>
    <destination node="{5734556d-b73f-4289-a936-b8609680ecf2}" port="{8f080826-aa6d-4491-9986-2a2957b7d5c4}"/>
  </connection>
  <connection type="[datasource]" uuid="{d261d82a-a1ba-4048-a4aa-8ebe0d4fb315}">
    <source node="{6dd51ab1-5517-448b-a6ad-407daa2999de}" port="{4fd742b2-3f70-459d-b8c7-e8dab903aa96}"/>
    <destination node="{0390b1e2-877e-4947-9fd9-4ebafba61665}" port="{a77f15d4-03b8-4236-87d7-cb5b0c6956b5}"/>
  </connection>
  <connection type="table" uuid="{da8b8394-cc85-4262-93b8-afb6233ccf37}">
    <source node="{0d902c05-d828-4ab6-a818-0e200aa99c1b}" port="{b6ebf2ec-4a32-43c5-bdfb-2b7dd705b181}"/>
    <destination node="{e734ea40-07f3-43e8-bed0-4b92784b1ddd}" port="{95514038-8755-4793-838a-c7b9adf83324}"/>
  </connection>
  <connection type="table" uuid="{dc363545-6695-4dc2-9c98-0507662aea53}">
    <source node="{2b0f3e75-95ff-489a-9835-0c7d3e5fa947}" port="{3165ec80-e6a9-48a8-9abf-e251301f4aa4}"/>
    <destination node="{a269c76e-71fe-439a-9b47-b2544daebaec}" port="{0c9a024a-5685-4fd0-ad87-3db91d9c1c10}"/>
  </connection>
  <connection type="datasource" uuid="{dd2d1704-161c-4681-ad7c-5c813075cd05}">
    <source node="{f78480bc-0959-4da0-bbab-7cc414585d5e}" port="{68da0379-f41a-442e-832a-af9c69db6cce}"/>
    <destination node="{4091fd5d-9c5c-4255-9d80-78fc056a7c6e}" port="{d5074dc4-b81c-4be5-86db-5038408f27d9}"/>
  </connection>
  <connection type="table" uuid="{e4d57242-a2c6-4f28-9432-83215adae81b}">
    <source node="{2c01f7f2-e025-4b39-9ed5-4676f0468e30}" port="{e640deb3-724d-4af7-bb8d-0ce2271a1b4c}"/>
    <destination node="{72ff6f20-76ac-4c90-bd54-93383e5d7d57}" port="{7787d148-9b53-4b97-97b0-dd90abc0f6e1}"/>
  </connection>
  <connection type="table" uuid="{f3a1d1a8-5afe-48f6-ad4d-0e1571569fa8}">
    <source node="{b77c1655-1869-42c5-9b52-940a78d94ae7}" port="{275b5858-321e-42c5-9fc6-acef792b44cb}"/>
    <destination node="{8e0045cb-ebe3-41d1-a1f8-c30c959e0173}" port="{289c19c4-0ecf-4be7-8fcf-e715ec11e336}"/>
  </connection>
  <connection type="[table]" uuid="{f855f792-7af9-450f-8a57-0a23068ce3c9}">
    <source node="{1df9c32b-1687-4d0e-ab87-290de59e6f40}" port="{4631aba8-d1e9-416d-863d-8ba036589044}"/>
    <destination node="{2c58bf48-de5b-40cd-a201-eb17bf931b12}" port="{609c95ac-5625-4c8f-bf5f-4200d8f8b2e2}"/>
  </connection>
  <connection type="table" uuid="{f8c157d3-c4e1-4b62-9ebd-5de79dc8b73b}">
    <source node="{e3868811-171a-4451-a864-dddc89419a14}" port="{102adb25-ca71-45bf-9ca4-d56d19ae5665}"/>
    <destination node="{ff602641-59c6-4cdc-aa89-6047a21e4ba2}" port="{ee37507d-437f-4f4c-a4a7-cdecdd4e4ae9}"/>
  </connection>
  <connection type="datasource" uuid="{f9a6429b-2185-421d-bc4c-967848b5b7f3}">
    <source node="{1ae8f1ce-bd26-4dd7-8fc1-d45c32af36aa}" port="{1a0be300-f091-4841-8748-47125a6ffe96}"/>
    <destination node="{0a320436-a226-4c48-a4b8-c1efcddf68c5}" port="{534a3cf1-b5fd-4ffc-8816-7a37ee870561}"/>
  </connection>
  <text color="Beige" height="425.0" uuid="{3ca1986e-ad72-4234-89e6-c708693377e7}" width="1500.0" x="1125.0" y="2525.0">Mask diag</text>
  <text color="Beige" height="420.993296795" uuid="{e9cd4b36-450a-4dbe-b3bf-539eb3d70337}" width="1500.0" x="1125.0" y="3000.0">Mask cols</text>
  <text color="Beige" height="425.0" uuid="{f48e0ed8-d45d-4c1f-a9d2-b502e3851a84}" width="1500.0" x="1125.0" y="2050.0">Basic</text>
</flow>
