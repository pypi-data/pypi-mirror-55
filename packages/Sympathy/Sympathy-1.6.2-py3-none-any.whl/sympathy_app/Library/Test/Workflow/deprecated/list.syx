<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" uuid="{ed9fc5eb-f11b-4063-bb46-ace839de28f6}">
  <label></label>
  <ports/>
  <flow cls="Flow" uuid="{4808c2ab-28ff-40b3-a9fd-b8e671d55e4e}" x="2000.0" y="1850.0">
    <label>Assert Equal Tables</label>
    <ports>
      <input index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{a26ccead-ff42-44a9-bd84-e2c9fdddb8c5}" x="1900.0" y="2237.5">
        <label>Port</label>
      </input>
      <input index="1" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{37ab774e-1595-49f2-bfe4-2fb62db3b98a}" x="1900.0" y="2312.5">
        <label>Port</label>
      </input>
      <output index="0" key="Port" parent="True" scheme="hdf5" type="[table]" uuid="{1bc93786-f99a-491a-9954-aef6014253d2}" x="2250.0" y="2275.0">
        <label>Port</label>
      </output>
    </ports>
    <flow cls="Lambda" uuid="{24659cc5-8ed2-4239-9645-67c9fe348d73}" x="2000.0" y="2175.0">
      <label>Assert Equal Table</label>
      <ports>
        <input index="0" key="Port" parent="False" scheme="hdf5" type="(table, table)" uuid="{ebfaf36b-ad21-41fe-ab54-396d175327c8}" x="1650.0" y="2000.0">
          <label>Port</label>
        </input>
        <output index="0" key="Port" parent="False" scheme="hdf5" type="table" uuid="{c196d2f7-4b21-430d-8c70-bf9a5ee899dc}" x="2050.0" y="2000.0">
          <label>Port</label>
        </output>
      </ports>
      <basic_ports>
        <output key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt;" uuid="{807643bd-561d-4602-85c7-73b11eea97a1}">
          <label>Lambda function</label>
        </output>
      </basic_ports>
      <node id="org.sysess.sympathy.data.table.assertequaltable" port_format="1.1" uuid="{560fe869-11bf-418a-9558-011e1d772d6a}" x="1925.0" y="2000.0">
        <label>Assert Equal Table</label>
        <version>1.0</version>
        <description></description>
        <author>Magnus Sand&#233;n</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">
        {
          "abs_tol": {
            "editor": null,
            "label": "Absolute tolerance",
            "order": 6,
            "type": "float",
            "value": 1e-08
          },
          "col_attrs": {
            "editor": null,
            "label": "Compare column attributes",
            "order": 1,
            "type": "boolean",
            "value": true
          },
          "col_order": {
            "editor": null,
            "label": "Compare column order",
            "order": 0,
            "type": "boolean",
            "value": true
          },
          "inexact_float": {
            "editor": null,
            "label": "Approximate comparison of floats",
            "order": 4,
            "type": "boolean",
            "value": false
          },
          "rel_tol": {
            "editor": null,
            "label": "Relative tolerance",
            "order": 5,
            "type": "float",
            "value": 1e-05
          },
          "tbl_attrs": {
            "editor": null,
            "label": "Compare table attributes",
            "order": 3,
            "type": "boolean",
            "value": true
          },
          "tbl_names": {
            "editor": null,
            "label": "Compare table names",
            "order": 2,
            "type": "boolean",
            "value": true
          },
          "type": "group"
        }
        </parameters>
        <ports>
          <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{e53a2ab1-f1e0-44cb-b8b3-54d798c158eb}">
            <label>Table A</label>
          </input>
          <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{679d340a-5671-4f6d-8a98-4753d5bdc5ed}">
            <label>Table B</label>
          </input>
          <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{606ed987-78b0-44be-bd2c-0ebae6c84b94}">
            <label>Output Table</label>
          </output>
        </ports>
      </node>
      <node id="org.sysess.sympathy.tuple.untuple2" port_format="1.1" uuid="{e50fc0a7-70e3-42dc-a5f3-a60e6556604a}" x="1800.0" y="2000.0">
        <label>Untuple</label>
        <version>1.0</version>
        <description></description>
        <author>Erik der Hagopian</author>
        <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
        <parameters type="json">{"type": "group"}</parameters>
        <ports>
          <input key="input" scheme="hdf5" type="(table, table)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{48cc1951-1bdd-4d71-b100-2ca142c8739c}">
            <label>Input</label>
          </input>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{de048672-e521-4943-8f28-104211b0a833}">
            <label>Output</label>
          </output>
          <output key="output" scheme="hdf5" type="table" type_base="&lt;b&gt;" uuid="{736a927e-bc56-44fa-a437-982d55c034bb}">
            <label>Output</label>
          </output>
        </ports>
      </node>
      <connection type="table" uuid="{0ee6c007-9681-48e6-9c77-a7d0bc2486fa}">
        <source node="{560fe869-11bf-418a-9558-011e1d772d6a}" port="{606ed987-78b0-44be-bd2c-0ebae6c84b94}"/>
        <destination node="{24659cc5-8ed2-4239-9645-67c9fe348d73}" port="{c196d2f7-4b21-430d-8c70-bf9a5ee899dc}"/>
      </connection>
      <connection type="table" uuid="{55a71432-303b-4a09-ab67-153d34351188}">
        <source node="{e50fc0a7-70e3-42dc-a5f3-a60e6556604a}" port="{736a927e-bc56-44fa-a437-982d55c034bb}"/>
        <destination node="{560fe869-11bf-418a-9558-011e1d772d6a}" port="{679d340a-5671-4f6d-8a98-4753d5bdc5ed}"/>
      </connection>
      <connection type="table" uuid="{733ff077-51bc-4312-8f7c-8acbdc639d51}">
        <source node="{e50fc0a7-70e3-42dc-a5f3-a60e6556604a}" port="{de048672-e521-4943-8f28-104211b0a833}"/>
        <destination node="{560fe869-11bf-418a-9558-011e1d772d6a}" port="{e53a2ab1-f1e0-44cb-b8b3-54d798c158eb}"/>
      </connection>
      <connection type="(table, table)" uuid="{7a7a5ba2-8fa4-4a4b-8b55-86f37ce8a3eb}">
        <source node="{24659cc5-8ed2-4239-9645-67c9fe348d73}" port="{ebfaf36b-ad21-41fe-ab54-396d175327c8}"/>
        <destination node="{e50fc0a7-70e3-42dc-a5f3-a60e6556604a}" port="{48cc1951-1bdd-4d71-b100-2ca142c8739c}"/>
      </connection>
    </flow>
    <node id="org.sysess.builtin.map" port_format="1.1" uuid="{0e48eb06-6307-4768-a8a5-c56c07adfa11}" x="2150.0" y="2275.0">
      <label>Map</label>
      <version>1.0</version>
      <description>Map Lambda function over each element in argument list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <parameters type="json">
      {
        "fail_strategy": {
          "editor": {
            "display": null,
            "edit": false,
            "filter": false,
            "include_empty": false,
            "options": [],
            "type": "combobox"
          },
          "label": "Action on exception",
          "list": ["Error", "Create Empty Item", "Skip Item"],
          "mode": "selected",
          "order": 0,
          "type": "list",
          "value": [0],
          "value_names": ["Error"]
        },
        "type": "group"
      }
      </parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="(table, table) -&gt; table" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{dac2bf97-f45c-4427-bd58-44024b37e65b}">
          <label>Lambda Function to Map</label>
        </input>
        <input key="List" scheme="hdf5" type="[(table, table)]" type_base="[&lt;a&gt;]" uuid="{0e07bb85-106e-4a31-a4c8-4f3d5757e70f}">
          <label>Argument List</label>
        </input>
        <output key="List" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{6cc459d2-241c-465c-ba6e-87fe12358e57}">
          <label>Output List</label>
        </output>
      </ports>
    </node>
    <node id="org.sysess.sympathy.tuple.ziptuple2" port_format="1.1" uuid="{27d73fe4-e472-41a8-9106-45c5eb8f92ec}" x="2000.0" y="2275.0">
      <label>Zip Tuple</label>
      <version>1.0</version>
      <description></description>
      <author>Erik der Hagopian</author>
      <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
      <parameters type="json">{"type": "group"}</parameters>
      <ports>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{027648fb-4052-4798-9e40-6d3faa6fb64b}">
          <label>Input</label>
        </input>
        <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;b&gt;]" uuid="{8658f4ed-d276-409b-ba3e-ec2c20eca117}">
          <label>Input</label>
        </input>
        <output key="output" scheme="hdf5" type="[(table, table)]" type_base="[(&lt;a&gt;, &lt;b&gt;)]" uuid="{57679b1e-0467-4cdb-8e3f-c6f4cd93f647}">
          <label>Output</label>
        </output>
      </ports>
    </node>
    <connection type="[table]" uuid="{2a2093f1-0df7-40c0-b48c-b5a517a69be6}">
      <source node="{4808c2ab-28ff-40b3-a9fd-b8e671d55e4e}" port="{a26ccead-ff42-44a9-bd84-e2c9fdddb8c5}"/>
      <destination node="{27d73fe4-e472-41a8-9106-45c5eb8f92ec}" port="{027648fb-4052-4798-9e40-6d3faa6fb64b}"/>
    </connection>
    <connection type="[(table, table)]" uuid="{61377a5e-a3da-4835-b0c2-59c17411965a}">
      <source node="{27d73fe4-e472-41a8-9106-45c5eb8f92ec}" port="{57679b1e-0467-4cdb-8e3f-c6f4cd93f647}"/>
      <destination node="{0e48eb06-6307-4768-a8a5-c56c07adfa11}" port="{0e07bb85-106e-4a31-a4c8-4f3d5757e70f}"/>
    </connection>
    <connection type="[table]" uuid="{79e73f6b-6322-41dd-8a30-982c82994a01}">
      <source node="{4808c2ab-28ff-40b3-a9fd-b8e671d55e4e}" port="{37ab774e-1595-49f2-bfe4-2fb62db3b98a}"/>
      <destination node="{27d73fe4-e472-41a8-9106-45c5eb8f92ec}" port="{8658f4ed-d276-409b-ba3e-ec2c20eca117}"/>
    </connection>
    <connection type="(table, table) -&gt; table" uuid="{8eab8232-9002-4d78-93ad-12f1ce2c7a0b}">
      <source node="{24659cc5-8ed2-4239-9645-67c9fe348d73}" port="{807643bd-561d-4602-85c7-73b11eea97a1}"/>
      <destination node="{0e48eb06-6307-4768-a8a5-c56c07adfa11}" port="{dac2bf97-f45c-4427-bd58-44024b37e65b}"/>
    </connection>
    <connection type="[table]" uuid="{e15b0c27-e76e-4a83-aad5-61d159122b7a}">
      <source node="{0e48eb06-6307-4768-a8a5-c56c07adfa11}" port="{6cc459d2-241c-465c-ba6e-87fe12358e57}"/>
      <destination node="{4808c2ab-28ff-40b3-a9fd-b8e671d55e4e}" port="{1bc93786-f99a-491a-9954-aef6014253d2}"/>
    </connection>
  </flow>
  <node id="org.sysess.sympathy.data.table.conditionalerror" port_format="1.1" uuid="{2657d8da-de65-4fd9-9f83-23997971f778}" x="2150.0" y="1925.0">
    <label>Conditional error/warning</label>
    <version>1.0</version>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "error_msg": {
        "editor": null,
        "label": "Error message:",
        "order": 1,
        "type": "string",
        "value": "Error!"
      },
      "error_type": {
        "editor": {
          "display": null,
          "edit": false,
          "filter": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Severity:",
        "list": ["Error", "Warning", "Output"],
        "mode": "selected",
        "order": 2,
        "type": "list",
        "value": [0],
        "value_names": ["Error"]
      },
      "predicate": {
        "editor": {
          "language": "python",
          "type": "code"
        },
        "label": "Predicate function:",
        "order": 0,
        "type": "string",
        "value": "lambda arg: not arg.get()"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="in" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{b2a0c208-6ead-4057-8634-7308c57cb172}">
        <label>Input</label>
      </input>
      <output key="out" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{c9f0228b-67ea-45d3-9012-df53b3dd89fa}">
        <label>Output</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtables" port_format="1.1" uuid="{9529f063-8013-4647-9074-29db97e98cae}" x="1700.0" y="1975.0">
    <label>Random Tables</label>
    <version>0.1</version>
    <description>Generate a list of Tables with randomnumbers between 0 and 1.</description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "column_entries": {
        "editor": {
          "max": 1000000,
          "min": 0,
          "step": 1,
          "type": "spinbox"
        },
        "label": "Columns:",
        "order": 0,
        "type": "integer",
        "value": 5
      },
      "column_length": {
        "editor": {
          "max": 100000000,
          "min": 0,
          "step": 1,
          "type": "spinbox"
        },
        "label": "Rows:",
        "order": 1,
        "type": "integer",
        "value": 5
      },
      "length": {
        "editor": {
          "max": 10000,
          "min": 0,
          "step": 1,
          "type": "spinbox"
        },
        "label": "List length",
        "order": 3,
        "type": "integer",
        "value": 5
      },
      "mask_values": {
        "editor": null,
        "label": "Randomly mask values",
        "order": 2,
        "type": "boolean",
        "value": false
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{4abf2993-04f2-424f-810d-cbde77e92aa1}">
        <label>Tables with random numbers.</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.getitemlist" port_format="1.1" uuid="{9c8af2fe-8f7e-483d-aa8b-86d70fe94f16}" x="1850.0" y="1975.0">
    <label>Get Item List</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "fail_strategy": {
        "editor": {
          "display": null,
          "edit": false,
          "filter": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Action on index out of bounds",
        "list": ["Error", "Create Empty Item"],
        "mode": "selected",
        "order": 1,
        "type": "list",
        "value": [0],
        "value_names": ["Error"]
      },
      "index": {
        "editor": {
          "display": null,
          "edit": true,
          "filter": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Index",
        "list": [],
        "mode": "selected",
        "order": 0,
        "type": "list",
        "value": [],
        "value_names": ["2"]
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{65d311a8-2127-4607-b0b4-6c1e5b97fe78}">
        <label>Input List</label>
      </input>
      <output key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{73d2dbcd-38b5-40ea-bf26-79033ebbb789}">
        <label>Output selected Item from List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.filterlisttable" port_format="1.1" uuid="{9eaa08f6-1148-4658-b17a-e98c10629513}" x="1850.0" y="1850.0">
    <label>Filter List with Table
Empty filter input</label>
    <version>1.0</version>
    <description>Filter a list using an incoming table.</description>
    <author>Magnus Sanden</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "filter": {
        "editor": {
          "display": null,
          "edit": true,
          "filter": true,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Filter column",
        "list": [],
        "mode": "selected",
        "order": 0,
        "type": "list",
        "value": [],
        "value_names": []
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="filter" scheme="hdf5" type="table" type_base="table" uuid="{bec4f038-1fff-474c-95ab-53a91ce2b35e}">
        <label>Filter</label>
      </input>
      <input key="in" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{6359e023-69fc-488d-85a9-6256b46b0631}">
        <label>List of items</label>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{c7cf8394-76d3-407e-89bc-d265ed49e350}">
        <label>Filtered list of items</label>
      </output>
      <output key="__sy_err__" scheme="hdf5" type="text" type_base="text" uuid="{12f9f6ef-d17e-424e-bab1-082c92ae10c2}">
        <label>Warning Text</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{c634d23a-8541-4fc5-96b5-22ee3a14a178}" x="1700.0" y="2100.0">
    <label>Manually Create Table</label>
    <version>1.0</version>
    <description></description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "json_table": {
        "editor": null,
        "label": "GUI",
        "order": 0,
        "type": "string",
        "value": "[[\"new filter\", \"b\", [false, false, true, false, false]]]"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{2fa8de7c-b7ed-4807-899c-8d063fcd72dc}">
        <label>Manually created table</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" port_format="1.1" uuid="{cdec91e1-ab00-4a55-89b7-fcc6c8cbab28}" x="2150.0" y="2025.0">
    <label>Conditional error/warning</label>
    <version>1.0</version>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "error_msg": {
        "editor": null,
        "label": "Error message:",
        "order": 1,
        "type": "string",
        "value": "Error!"
      },
      "error_type": {
        "editor": {
          "display": null,
          "edit": false,
          "filter": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Severity:",
        "list": ["Error", "Warning", "Output"],
        "mode": "selected",
        "order": 2,
        "type": "list",
        "value": [0],
        "value_names": ["Error"]
      },
      "predicate": {
        "editor": {
          "language": "python",
          "type": "code"
        },
        "label": "Predicate function:",
        "order": 0,
        "type": "string",
        "value": "lambda arg: not arg.get()"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="in" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{14c5db94-a488-4eae-99dc-9cd3ec99208b}">
        <label>Input</label>
      </input>
      <output key="out" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{82efc2cb-0f65-4576-a03d-eb62529b4f38}">
        <label>Output</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.getitemlist" port_format="1.1" uuid="{db846ad2-32dd-46c2-9114-fd6cf09aa61e}" x="2000.0" y="2100.0">
    <label>Get Item List</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "fail_strategy": {
        "editor": {
          "display": null,
          "edit": false,
          "filter": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Action on index out of bounds",
        "list": ["Error", "Create Empty Item"],
        "mode": "selected",
        "order": 1,
        "type": "list",
        "value": [0],
        "value_names": ["Error"]
      },
      "index": {
        "editor": {
          "display": null,
          "edit": true,
          "filter": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Index",
        "list": [],
        "mode": "selected",
        "order": 0,
        "type": "list",
        "value": [],
        "value_names": ["0"]
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{0462f78b-ca28-4b69-86e2-05db7a2a4426}">
        <label>Input List</label>
      </input>
      <output key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{8e946bec-af98-443c-bfd1-0fb357e3b5b3}">
        <label>Output selected Item from List</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.filterlisttable" port_format="1.1" uuid="{dc21026c-63a9-4c2d-83e0-8203c5a2aa59}" x="1850.0" y="2100.0">
    <label>Filter List with Table
Auto select of filter column when other column is choosen</label>
    <version>1.0</version>
    <description>Filter a list using an incoming table.</description>
    <author>Magnus Sanden</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "filter": {
        "editor": {
          "display": null,
          "edit": true,
          "filter": true,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Filter column",
        "list": [],
        "mode": "selected",
        "order": 0,
        "type": "list",
        "value": [],
        "value_names": ["filter"]
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="filter" scheme="hdf5" type="table" type_base="table" uuid="{edc3c917-687c-4ed8-82ad-9109c90a1acf}">
        <label>Filter</label>
      </input>
      <input key="in" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{c61cf172-9ff5-4978-8d8b-f9451372933b}">
        <label>List of items</label>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{86d0aab1-ded9-465e-9fa2-413c274e6e8c}">
        <label>Filtered list of items</label>
      </output>
      <output key="__sy_err__" scheme="hdf5" type="text" type_base="text" uuid="{ca7ab970-f190-441f-9b1c-d36b20364895}">
        <label>Warning Text</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.builtin.empty" port_format="1.1" uuid="{deac8a24-52e0-4b4b-915e-1f3bdf8d4223}" x="1700.0" y="1850.0">
    <label>Empty</label>
    <version>1.1</version>
    <description>Generate empty data of inferred or specified type</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;, Benedikt Ziegler &lt;benedikt.ziegler@combine.se&gt;</author>
    <copyright>(C) 2016 Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "datatype": {
        "editor": null,
        "label": "Datatype",
        "order": 0,
        "type": "string",
        "value": "&lt;a&gt;"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{fe96bb08-1e50-4e91-a198-5552e834f04d}">
        <label>Output port containing empty data (must be connected or specified)</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.assertequaltable" port_format="1.1" uuid="{ef07cccb-3866-4213-87f2-74cb2c85e012}" x="2150.0" y="2100.0">
    <label>Assert Equal Table</label>
    <version>1.0</version>
    <description></description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2019, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "abs_tol": {
        "editor": null,
        "label": "Absolute tolerance",
        "order": 6,
        "type": "float",
        "value": 1e-08
      },
      "col_attrs": {
        "editor": null,
        "label": "Compare column attributes",
        "order": 1,
        "type": "boolean",
        "value": true
      },
      "col_order": {
        "editor": null,
        "label": "Compare column order",
        "order": 0,
        "type": "boolean",
        "value": true
      },
      "inexact_float": {
        "editor": null,
        "label": "Approximate comparison of floats",
        "order": 4,
        "type": "boolean",
        "value": false
      },
      "rel_tol": {
        "editor": null,
        "label": "Relative tolerance",
        "order": 5,
        "type": "float",
        "value": 1e-05
      },
      "tbl_attrs": {
        "editor": null,
        "label": "Compare table attributes",
        "order": 3,
        "type": "boolean",
        "value": true
      },
      "tbl_names": {
        "editor": null,
        "label": "Compare table names",
        "order": 2,
        "type": "boolean",
        "value": true
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{f2f5e995-2a42-4925-bd69-50f813f6b8cd}">
        <label>Table A</label>
      </input>
      <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{b6927756-ea5c-44e3-afa1-898a535766b8}">
        <label>Table B</label>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{ccaa370c-2bdd-4869-a72f-85dac1cb42b5}">
        <label>Output Table</label>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{4f39454e-09ce-47ed-b177-104776f2e52c}">
    <source node="{db846ad2-32dd-46c2-9114-fd6cf09aa61e}" port="{8e946bec-af98-443c-bfd1-0fb357e3b5b3}"/>
    <destination node="{ef07cccb-3866-4213-87f2-74cb2c85e012}" port="{b6927756-ea5c-44e3-afa1-898a535766b8}"/>
  </connection>
  <connection type="text" uuid="{61ab97da-47d0-43e4-98bc-71e1096e28e4}">
    <source node="{9eaa08f6-1148-4658-b17a-e98c10629513}" port="{12f9f6ef-d17e-424e-bab1-082c92ae10c2}"/>
    <destination node="{2657d8da-de65-4fd9-9f83-23997971f778}" port="{b2a0c208-6ead-4057-8634-7308c57cb172}"/>
    <route x="1975.0" y="1950.0"/>
  </connection>
  <connection type="[table]" uuid="{74655dcd-7fbc-4388-9345-15bff598e8b9}">
    <source node="{9eaa08f6-1148-4658-b17a-e98c10629513}" port="{c7cf8394-76d3-407e-89bc-d265ed49e350}"/>
    <destination node="{4808c2ab-28ff-40b3-a9fd-b8e671d55e4e}" port="{a26ccead-ff42-44a9-bd84-e2c9fdddb8c5}"/>
  </connection>
  <connection type="[table]" uuid="{974fb398-1f9d-4c16-844a-a71dffd63ff9}">
    <source node="{dc21026c-63a9-4c2d-83e0-8203c5a2aa59}" port="{86d0aab1-ded9-465e-9fa2-413c274e6e8c}"/>
    <destination node="{db846ad2-32dd-46c2-9114-fd6cf09aa61e}" port="{0462f78b-ca28-4b69-86e2-05db7a2a4426}"/>
  </connection>
  <connection type="[table]" uuid="{98853457-6a6a-4ba8-acd8-f3c433cfb2b8}">
    <source node="{9529f063-8013-4647-9074-29db97e98cae}" port="{4abf2993-04f2-424f-810d-cbde77e92aa1}"/>
    <destination node="{9eaa08f6-1148-4658-b17a-e98c10629513}" port="{6359e023-69fc-488d-85a9-6256b46b0631}"/>
  </connection>
  <connection type="table" uuid="{af465f84-64b1-409b-b86a-118fce408346}">
    <source node="{deac8a24-52e0-4b4b-915e-1f3bdf8d4223}" port="{fe96bb08-1e50-4e91-a198-5552e834f04d}"/>
    <destination node="{9eaa08f6-1148-4658-b17a-e98c10629513}" port="{bec4f038-1fff-474c-95ab-53a91ce2b35e}"/>
  </connection>
  <connection type="table" uuid="{c714a90a-b015-4ad1-960f-0ff47938fdcd}">
    <source node="{c634d23a-8541-4fc5-96b5-22ee3a14a178}" port="{2fa8de7c-b7ed-4807-899c-8d063fcd72dc}"/>
    <destination node="{dc21026c-63a9-4c2d-83e0-8203c5a2aa59}" port="{edc3c917-687c-4ed8-82ad-9109c90a1acf}"/>
  </connection>
  <connection type="table" uuid="{c8a1751b-36d6-4000-ac8c-41202816f11d}">
    <source node="{9c8af2fe-8f7e-483d-aa8b-86d70fe94f16}" port="{73d2dbcd-38b5-40ea-bf26-79033ebbb789}"/>
    <destination node="{ef07cccb-3866-4213-87f2-74cb2c85e012}" port="{f2f5e995-2a42-4925-bd69-50f813f6b8cd}"/>
  </connection>
  <connection type="[table]" uuid="{e19904f4-df79-46cb-9452-02e727051a68}">
    <source node="{9529f063-8013-4647-9074-29db97e98cae}" port="{4abf2993-04f2-424f-810d-cbde77e92aa1}"/>
    <destination node="{4808c2ab-28ff-40b3-a9fd-b8e671d55e4e}" port="{37ab774e-1595-49f2-bfe4-2fb62db3b98a}"/>
  </connection>
  <connection type="[table]" uuid="{e87b1bd1-42f5-4597-9e09-0fb37ee15b82}">
    <source node="{9529f063-8013-4647-9074-29db97e98cae}" port="{4abf2993-04f2-424f-810d-cbde77e92aa1}"/>
    <destination node="{dc21026c-63a9-4c2d-83e0-8203c5a2aa59}" port="{c61cf172-9ff5-4978-8d8b-f9451372933b}"/>
  </connection>
  <connection type="[table]" uuid="{ec8464b8-6b57-4d42-bd85-398d5946e369}">
    <source node="{9529f063-8013-4647-9074-29db97e98cae}" port="{4abf2993-04f2-424f-810d-cbde77e92aa1}"/>
    <destination node="{9c8af2fe-8f7e-483d-aa8b-86d70fe94f16}" port="{65d311a8-2127-4607-b0b4-6c1e5b97fe78}"/>
  </connection>
  <connection type="text" uuid="{f87e42c6-6dc0-4a79-bd4a-26e2f9e1e578}">
    <source node="{dc21026c-63a9-4c2d-83e0-8203c5a2aa59}" port="{ca7ab970-f190-441f-9b1c-d36b20364895}"/>
    <destination node="{cdec91e1-ab00-4a55-89b7-fcc6c8cbab28}" port="{14c5db94-a488-4eae-99dc-9cd3ec99208b}"/>
    <route x="1975.0" y="2050.0"/>
  </connection>
  <text color="Beige" height="100.0" uuid="{57eabb9f-62bf-4305-b0a9-853ba0ef34c5}" width="525.0" x="1625.0" y="1675.0">Test for deprecated behaviors, these should be removed in 1.7.0

After that point these tests should fail and the test cases should be removed.
So long as these tests do not fail, execution should result in deprecation warnings.
</text>
  <text color="Beige" height="425.0" uuid="{73dc155b-be12-4e12-ba13-474517d4fcbc}" width="625.0" x="1625.0" y="1800.0">Filter List with Table</text>
</flow>
