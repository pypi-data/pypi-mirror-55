<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" uuid="{0df1d676-791d-4372-911e-15e935fc85fb}" width="50.0" x="0.0" y="0.0">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <icon/>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <parameters type="json">{}</parameters>
  <ports/>
  <node id="org.sysess.sympathy.create.createparameters" uuid="{1a8cc47f-5f3b-4cea-805e-2c5907dc9cf2}" x="1568.0" y="1859.0">
    <label>Manually Create Parameters</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2018 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "code": {"description": "Python code that modifies the parameter structure.", "label": "", "order": 0, "type": "string", "value": "parameters.set_integer(\n    'length',\n    label= 'Number of Map processes to use',\n    description='Select the number of Map processes to use.',\n    value=1,\n    editor=synode.editors.bounded_spinbox_editor(\n        1, 4, 1))\n\nparameters.set_integer(\n    'minimum',\n    label= 'Number of minimum elements for each process (0 = unlimited)',\n    description=('Select number of minimum elements for each process. '\n                 'This may result in fewer processes used if the data is small. '\n                 '(0 = unlimited).'),\n    value=0,\n    editor=synode.editors.bounded_lineedit_editor(\n        0, None))\n\n", "editor": {"language": "python", "type": "code"}}}</parameters>
    <ports>
      <output key="output" scheme="hdf5" type="json" type_base="json" uuid="{2030c113-d0e1-45f1-a765-387b0b23433b}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{1dd70f78-95ee-4393-94ae-d04a0f8a0d35}" x="1725.0" y="1975.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: arg.get()['length']['value'] != 1", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="json" type_base="&lt;a&gt;" uuid="{bf7c3c21-2562-4db5-916c-3966d304c81d}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="json" type_base="&lt;a&gt;" uuid="{2402e7ea-0aa6-4435-a1ee-b4f8454f0145}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{86f51717-8065-43a7-8bb4-a5a243413893}" x="1875.0" y="1975.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: arg['length'][0] != 4", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{719f15b1-98e8-4482-9262-2208a73d9c1f}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{0346f456-017d-44fc-98ac-8d1ea0a0f416}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.configureparameters" port_format="1.1" uuid="{8a15193b-5437-4e24-9b27-8b55dbf91781}" x="1718.0" y="1859.0">
    <label>Map Setup</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2018 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "length": {"description": "Select the number of Map processes to use.", "label": "Number of Map processes to use", "type": "integer", "value": 4, "editor": {"max": 4, "min": 1, "step": 1, "type": "spinbox"}}, "minimum": {"description": "Select number of minimum elements for each process. This may result in fewer processes used if the data is small. (0 = unlimited).", "label": "Number of minimum elements for each process (0 = unlimited)", "type": "integer", "value": 0, "editor": {"max": null, "min": 0, "type": "lineedit"}}}</parameters>
    <ports>
      <input key="json_parameters" scheme="hdf5" type="json" type_base="json" uuid="{05aefbfd-05d1-4508-9dc9-bac6f6aae362}">
        <label>Json Parameters</label>
        <description>Json Parameters</description>
      </input>
      <output key="json_parameters" scheme="hdf5" type="json" type_base="json" uuid="{ca650228-5b0c-4010-9cd3-7d2e6bf11e97}">
        <label>Json Parameters</label>
        <description>Json Parameters</description>
      </output>
      <output key="table_parameters" scheme="hdf5" type="table" type_base="table" uuid="{322e2ef6-27ce-4544-8114-11f66d598520}">
        <label>Table Parameters</label>
        <description>Table Parameters</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" uuid="{ff4d5a20-5d9c-46a4-89f6-0309293aa4f9}" x="1875.0" y="1850.0">
    <label>Conditional error/warning</label>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "predicate": {"description": "Error message is printed if this function returns True.", "label": "Predicate function:", "order": 0, "type": "string", "value": "lambda arg: arg.get()['length']['value'] != 4", "editor": {"language": "python", "type": "code"}}, "error_msg": {"description": "Error message to display to the user.", "editor": null, "label": "Error message:", "order": 1, "type": "string", "value": "Error!"}, "error_type": {"description": "The level \"Error\" stops flow execution.", "label": "Severity:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Error", "Warning", "Output"], "value": [0], "value_names": ["Error"], "editor": {"display": null, "edit": false, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="in" scheme="hdf5" type="json" type_base="&lt;a&gt;" uuid="{6ac8b627-df54-4534-a007-a594bc24b6d1}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="out" scheme="hdf5" type="json" type_base="&lt;a&gt;" uuid="{80ad276e-6902-4385-b185-7bdca6f58314}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <connection type="json" uuid="{0d897a95-08ed-40fc-a60f-6d8f3c25019d}">
    <source node="{8a15193b-5437-4e24-9b27-8b55dbf91781}" port="{ca650228-5b0c-4010-9cd3-7d2e6bf11e97}"/>
    <destination node="{ff4d5a20-5d9c-46a4-89f6-0309293aa4f9}" port="{6ac8b627-df54-4534-a007-a594bc24b6d1}"/>
  </connection>
  <connection type="json" uuid="{314b45b1-5143-4d13-9c43-22b17154c76a}">
    <source node="{1a8cc47f-5f3b-4cea-805e-2c5907dc9cf2}" port="{2030c113-d0e1-45f1-a765-387b0b23433b}"/>
    <destination node="{1dd70f78-95ee-4393-94ae-d04a0f8a0d35}" port="{bf7c3c21-2562-4db5-916c-3966d304c81d}"/>
  </connection>
  <connection type="table" uuid="{5a27cce5-d47b-41f5-874c-5bd858023036}">
    <source node="{8a15193b-5437-4e24-9b27-8b55dbf91781}" port="{322e2ef6-27ce-4544-8114-11f66d598520}"/>
    <destination node="{86f51717-8065-43a7-8bb4-a5a243413893}" port="{719f15b1-98e8-4482-9262-2208a73d9c1f}"/>
  </connection>
  <connection type="json" uuid="{681433e2-baf0-4289-908f-4cb3f5bef821}">
    <source node="{1a8cc47f-5f3b-4cea-805e-2c5907dc9cf2}" port="{2030c113-d0e1-45f1-a765-387b0b23433b}"/>
    <destination node="{8a15193b-5437-4e24-9b27-8b55dbf91781}" port="{05aefbfd-05d1-4508-9dc9-bac6f6aae362}"/>
  </connection>
</flow>
