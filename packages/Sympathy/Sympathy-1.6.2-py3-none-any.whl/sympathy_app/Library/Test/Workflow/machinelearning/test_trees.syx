<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{2ecf7903-fec1-4aa9-8d4c-73768622ce5f}" width="50.0" x="0.0" y="0.0">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <aggregation type="json"><![CDATA[null]]></aggregation>
  <libraries type="json"><![CDATA[[]]]></libraries>
  <pythonpaths type="json"><![CDATA[[]]]></pythonpaths>
  <overrides type="json"><![CDATA[{}]]></overrides>
  <environment type="json"><![CDATA[{}]]></environment>
  <parameters type="json"><![CDATA[{"environment": {}}]]></parameters>
  <ports/>
  <node id="org.sysess.sympathy.create.createtable" uuid="{07404466-9548-44be-88ff-dc486638c7c4}" x="1325.0" y="1925.0">
    <label>Y=A ^ B</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"Y\", \"U\", [\"0\", \"1\", \"1\", \"0\"]]]"}}]]></parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{430cdafd-2da3-4615-9f18-2bdf6f9d5d9b}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.predict" uuid="{07d44750-2d25-4af5-88ce-3e96ff2dfb90}" x="1800.0" y="1875.0">
    <label>Predict</label>
    <description>Uses a model to predict Y given X</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{3c8c8ebc-ac64-4f9a-b8c6-bfe5f2aa97b0}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="X" scheme="hdf5" type="table" type_base="table" uuid="{20f39899-f501-48c0-b549-1c770d4d0ee1}">
        <label>X</label>
        <description>X</description>
      </input>
      <output key="Y" scheme="hdf5" type="table" type_base="table" uuid="{5f512d63-5c5e-49d8-9dc9-d5afeebeaff7}">
        <label>Y</label>
        <description>Y</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.transform" uuid="{0dac7f66-7c66-49ab-ab05-a4bdc1e1f3bd}" x="1925.0" y="1625.0">
    <label>Transform</label>
    <description>Applies a transformation model to the given data</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "names method": {"description": "Method used to generate output names", "label": "Output names", "order": 0, "type": "string", "value": "Copy from input", "editor": {"type": "combobox", "options": ["Copy from input", "By index", "From model"]}}}]]></parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{1dd42605-c5c2-4809-bc88-a1d16774ff4c}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{051c76a4-291f-46e0-97f9-1a301e21b5c4}">
        <label>Input table</label>
        <description>Input table</description>
      </input>
      <output key="output" scheme="hdf5" type="table" type_base="table" uuid="{bdb81fc0-37c6-42c4-88fa-64bc97e87114}">
        <label>Output table</label>
        <description>Output table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.assertequaltable" uuid="{1a4ec870-e7aa-4ae7-8ee6-82b91d063d9e}" x="2050.0" y="1625.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "col_order": {"description": "Differing column order will trigger error", "editor": null, "label": "Compare column order", "order": 0, "type": "boolean", "value": true}, "col_attrs": {"description": "Differing column attributes will trigger error", "editor": null, "label": "Compare column attributes", "order": 1, "type": "boolean", "value": true}, "tbl_names": {"description": "Differing table name will trigger error", "editor": null, "label": "Compare table names", "order": 2, "type": "boolean", "value": true}, "tbl_attrs": {"description": "Differing table attributes will trigger error", "editor": null, "label": "Compare table attributes", "order": 3, "type": "boolean", "value": true}, "inexact_float": {"description": "If any arithemtics is invovled floats should probably be compared approximately.", "editor": null, "label": "Approximate comparison of floats", "order": 4, "type": "boolean", "value": false}, "rel_tol": {"description": "Floats are considered unequal if the relative difference between them is larger than this value.", "editor": null, "label": "Relative tolerance", "order": 5, "type": "float", "value": 1e-05}, "abs_tol": {"description": "Floats are considered unequal if the absolute difference between them is larger than this value.", "editor": null, "label": "Absolute tolerance", "order": 6, "type": "float", "value": 1e-08}}]]></parameters>
    <ports>
      <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{ac632c37-a72c-4a94-ad33-4c05ae0fc1c2}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{0ddb070d-0fda-4ce5-879e-56092ea97ff4}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{8a7d37ba-874a-4f9d-994b-b305e3c8a6a2}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.assertequaltable" uuid="{49efd816-5e5a-4bf3-800e-6c0766297b8b}" x="1925.0" y="1925.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "col_order": {"description": "Differing column order will trigger error", "editor": null, "label": "Compare column order", "order": 0, "type": "boolean", "value": true}, "col_attrs": {"description": "Differing column attributes will trigger error", "editor": null, "label": "Compare column attributes", "order": 1, "type": "boolean", "value": true}, "tbl_names": {"description": "Differing table name will trigger error", "editor": null, "label": "Compare table names", "order": 2, "type": "boolean", "value": true}, "tbl_attrs": {"description": "Differing table attributes will trigger error", "editor": null, "label": "Compare table attributes", "order": 3, "type": "boolean", "value": true}, "inexact_float": {"description": "If any arithemtics is invovled floats should probably be compared approximately.", "editor": null, "label": "Approximate comparison of floats", "order": 4, "type": "boolean", "value": false}, "rel_tol": {"description": "Floats are considered unequal if the relative difference between them is larger than this value.", "editor": null, "label": "Relative tolerance", "order": 5, "type": "float", "value": 1e-05}, "abs_tol": {"description": "Floats are considered unequal if the absolute difference between them is larger than this value.", "editor": null, "label": "Absolute tolerance", "order": 6, "type": "float", "value": 1e-08}}]]></parameters>
    <ports>
      <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{49b7f250-9b08-4692-b9b6-f1e11cfbe51f}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{6106ee6b-f9da-460e-91a0-c55f9b1337a7}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{1e044b4d-f42b-4a56-b474-b1a1b4329a08}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.decision_tree_classifier" uuid="{601e5073-1b86-45cd-8f0f-948e6f4935e2}" x="1325.0" y="1725.0">
    <label>Decision Tree Classifier</label>
    <description>Decision Trees (DTs) are a non-parametric supervised learning methodused for classification and regression. The goal is to create a modelthat predicts the value of a target variable by learning simpledecision rules inferred from the data features.</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "presort": {"description": "Whether to presort the data to speed up the finding of best splits in\nfitting. For the default settings of a decision tree on large\ndatasets, setting this to true may slow down the training process.\nWhen using either a smaller dataset or a restricted depth, this may\nspeed up the training.\n", "editor": null, "label": "presort", "order": 0, "type": "string", "value": "False"}, "splitter": {"description": "The strategy used to choose the split at each node. Supported\nstrategies are \"best\" to choose the best split and \"random\" to choose\nthe best random split.\n", "editor": null, "label": "splitter", "order": 1, "type": "string", "value": "best"}, "max_leaf_nodes": {"description": "Grow a tree with ``max_leaf_nodes`` in best-first fashion.\nBest nodes are defined as relative reduction in impurity.\nIf None then unlimited number of leaf nodes.\n", "editor": null, "label": "max_leaf_nodes", "order": 2, "type": "string", "value": "None"}, "min_samples_leaf": {"description": "The minimum number of samples required to be at a leaf node:\n\n- If int, then consider `min_samples_leaf` as the minimum number.\n- If float, then `min_samples_leaf` is a percentage and\n  `ceil(min_samples_leaf * n_samples)` are the minimum\n  number of samples for each node.\n\n.. versionchanged:: 0.18\n   Added float values for percentages.\n", "editor": null, "label": "min_samples_leaf", "order": 3, "type": "string", "value": "1"}, "min_samples_split": {"description": "The minimum number of samples required to split an internal node:\n\n- If int, then consider `min_samples_split` as the minimum number.\n- If float, then `min_samples_split` is a percentage and\n  `ceil(min_samples_split * n_samples)` are the minimum\n  number of samples for each split.\n\n.. versionchanged:: 0.18\n   Added float values for percentages.\n", "editor": null, "label": "min_samples_split", "order": 4, "type": "string", "value": "2"}, "criterion": {"description": "The function to measure the quality of a split. Supported criteria are\n\"gini\" for the Gini impurity and \"entropy\" for the information gain.\n", "editor": null, "label": "criterion", "order": 5, "type": "string", "value": "gini"}, "min_impurity_split": {"description": "Threshold for early stopping in tree growth. A node will split\nif its impurity is above the threshold, otherwise it is a leaf.\n\n.. versionadded:: 0.18\n", "editor": null, "label": "min_impurity_split", "order": 6, "type": "string", "value": "1e-07"}, "max_features": {"description": "The number of features to consider when looking for the best split:\n\n    - If int, then consider `max_features` features at each split.\n    - If float, then `max_features` is a percentage and\n      `int(max_features * n_features)` features are considered at each\n      split.\n    - If \"auto\", then `max_features=sqrt(n_features)`.\n    - If \"sqrt\", then `max_features=sqrt(n_features)`.\n    - If \"log2\", then `max_features=log2(n_features)`.\n    - If None, then `max_features=n_features`.\n\nNote: the search for a split does not stop until at least one\nvalid partition of the node samples is found, even if it requires to\neffectively inspect more than ``max_features`` features.\n", "editor": null, "label": "max_features", "order": 7, "type": "string", "value": "None"}, "max_depth": {"description": "The maximum depth of the tree. If None, then nodes are expanded until\nall leaves are pure or until all leaves contain less than\nmin_samples_split samples.\n", "editor": null, "label": "max_depth", "order": 8, "type": "string", "value": "3"}}]]></parameters>
    <ports>
      <output key="model" scheme="hdf5" type="model" type_base="model" uuid="{9f5e564e-31b7-4e89-88b6-8cac731f4893}">
        <label>Model</label>
        <description>Model</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.createtable" uuid="{6316d18f-f021-41e5-808b-63c73ecc77a4}" x="1325.0" y="1850.0">
    <label>X data</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json"><![CDATA[{"type": "group", "json_table": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"A\", \"i\", [0, 0, 1, 1]], [\"B\", \"i\", [0, 1, 0, 1]]]"}}]]></parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{22750cd3-ab98-4112-a8f2-5896833aa1ca}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.set_x_names" uuid="{80a7aac7-f724-4140-a8e1-138f7c2c9581}" x="1825.0" y="1750.0">
    <label>Set input and output names</label>
    <description>Sets the name of the inputs and outputs columns of this model</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "input_names": {"description": "List of names for features separated by the | character.All whitespace is included in the final name. If empty then no names are set.", "editor": null, "label": "Input names:", "order": 0, "type": "string", "value": "a|b"}, "output_names": {"description": "List of names for target separated by the | character. All whitespace is included in the final name. If empty then no names are set.", "editor": null, "label": "Output names:", "order": 1, "type": "string", "value": "c"}}]]></parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{2f495442-1db5-4efe-8b49-139f82fb288f}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <output key="out-model" scheme="hdf5" type="model" type_base="model" uuid="{313715df-1ab3-424f-a9b7-25155044c0c4}">
        <label>Output model</label>
        <description>Output model</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.predict_proba" uuid="{93c9bdcb-9027-4a4d-ae52-7c3590079303}" x="2000.0" y="1700.0">
    <label>Predict probabilities</label>
    <description>Uses a model to predict Y given X and returns the estimatedprobabilities for each class in Y</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "names method": {"description": "Method used to generate output names", "label": "Output names", "order": 0, "type": "string", "value": "From classes", "editor": {"type": "combobox", "options": ["From classes", "By index", "From model Y names"]}}}]]></parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{17bd41f1-5690-4d26-a302-933719fd3045}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="X" scheme="hdf5" type="table" type_base="table" uuid="{089a0f63-982e-4dc5-8185-f824e3ea921d}">
        <label>X</label>
        <description>X</description>
      </input>
      <output key="Y" scheme="hdf5" type="table" type_base="table" uuid="{4ccd9016-0ff4-4015-a5e4-45d2eddf8c63}">
        <label>Y</label>
        <description>Y</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.extract_attributes" uuid="{9e6a21e3-1afc-472a-8e65-14b827d808ad}" x="2125.0" y="1800.0">
    <label>Extract attributes</label>
    <description>Extract attributes from a fitted model, requires model dependent name for the attribute</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "attribute": {"description": "Name of attribute to extract", "editor": null, "label": "attribute", "order": 0, "type": "string", "value": "B__feature_importances_"}}]]></parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{52c075ba-c4e1-419a-b167-cb4bc9387d07}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <output key="out" scheme="hdf5" type="[table]" type_base="[table]" uuid="{1b7eef4e-0ccf-4139-9baf-94959978e1b6}">
        <label>Attributes</label>
        <description>Attributes</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.binarizer" uuid="{a1d06b9f-926a-4e89-a953-a61875af9a17}" x="1325.0" y="1625.0">
    <label>Binarizer</label>
    <description>
Binarize data (set feature values to 0 or 1) according to a threshold.

Values greater than the threshold map to 1, while values less than or
equal to the threshold map to 0. With the default threshold of 0, only
positive values map to 1. Binarization is a common operation on text
count data where the analyst can decide to only consider the presence
or absence of a feature rather than a quantified number of occurrences
for instance. It can also be used as a pre-processing step for
estimators that consider boolean random variables (e.g. modelled using
the Bernoulli distribution in a Bayesian setting).</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "threshold": {"description": "Feature values below or equal to this are replaced by 0, above it by 1.\nThreshold may not be less than 0 for operations on sparse matrices.\n", "editor": null, "label": "threshold", "order": 0, "type": "string", "value": "0.5"}}]]></parameters>
    <ports>
      <output key="model" scheme="hdf5" type="model" type_base="model" uuid="{704f1dd8-c66d-4f67-86be-594897cb82dc}">
        <label>Model</label>
        <description>Model</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.pipeline" port_format="1.1" uuid="{a1faf6d3-0885-468e-9df8-0b4f74a9cf3c}" x="1450.0" y="1675.0">
    <label>Pipeline</label>
    <description>Applies one model on the output of another</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "names": {"description": "Comma separated list of model names, eg. Rescale, SVC", "editor": null, "label": "Model names: ", "order": 0, "type": "string", "value": "A, B"}, "flatten": {"description": "Flattens multiple pipeline objects into a single pipeline containing all models", "editor": null, "label": "Flatten: ", "order": 1, "type": "boolean", "value": true}}]]></parameters>
    <ports>
      <input key="models" scheme="hdf5" type="model" type_base="model" uuid="{8133611d-826c-4809-a5c8-d7c8941b73a9}">
        <label>models</label>
        <description>models</description>
      </input>
      <input key="models" scheme="hdf5" type="model" type_base="model" uuid="{6f7f494a-216e-4cf5-88dd-e34d761257b6}">
        <label>models</label>
        <description>models</description>
      </input>
      <output key="out-model" scheme="hdf5" type="model" type_base="model" uuid="{c5a66aa8-03f8-4305-a5cf-43c8f473c510}">
        <label>Output model</label>
        <description>Output model</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.pipeline_split" uuid="{b226d36d-066e-4722-9d5c-4c7f0be8de9b}" x="1800.0" y="2025.0">
    <label>Pipeline decomposition</label>
    <description>Pick out given model from a fitted pipeline</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "name": {"description": "Index (0 to N) or name of model to pick out from pipeline", "editor": null, "label": "Model name or index: ", "order": 0, "type": "string", "value": "B"}}]]></parameters>
    <ports>
      <input key="model" scheme="hdf5" type="model" type_base="model" uuid="{fc6763da-35aa-48f6-bc76-d90844707ffe}">
        <label>model</label>
        <description>model</description>
      </input>
      <output key="out-model" scheme="hdf5" type="model" type_base="model" uuid="{8e9b211c-efdd-4241-8d3a-edd4946fa658}">
        <label>Output model</label>
        <description>Output model</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.pipeline_split" uuid="{b3e50541-2bc9-43fe-8ed1-c9c5b89d29ff}" x="1775.0" y="1625.0">
    <label>Pipeline decomposition</label>
    <description>Pick out given model from a fitted pipeline</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "name": {"description": "Index (0 to N) or name of model to pick out from pipeline", "editor": null, "label": "Model name or index: ", "order": 0, "type": "string", "value": "A"}}]]></parameters>
    <ports>
      <input key="model" scheme="hdf5" type="model" type_base="model" uuid="{e5f865cb-993b-4671-9fec-d4010a64ab59}">
        <label>model</label>
        <description>model</description>
      </input>
      <output key="out-model" scheme="hdf5" type="model" type_base="model" uuid="{7e1a2c04-10be-4301-8c7d-b56a381aa930}">
        <label>Output model</label>
        <description>Output model</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.select_from_model" uuid="{bee5251c-0a21-4235-834d-ac7ca7d91960}" x="1925.0" y="2100.0">
    <label>Select features from model</label>
    <description>Meta-transformer for selecting features based on importance weight. Only works for models with coef or feature_importances attributes.</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group", "threshold": {"description": "The threshold value to use for feature selection. Features whose\nimportance is greater or equal are kept while the others are\ndiscarded. If \"median\" (resp. \"mean\"), then the ``threshold`` value is\nthe median (resp. the mean) of the feature importances. A scaling\nfactor (e.g., \"1.25*mean\") may also be used. If None and if the\nestimator has a parameter penalty set to l1, either explicitly\nor implicitly (e.g, Lasso), the threshold used is 1e-5.\nOtherwise, \"mean\" is used by default.\n", "editor": null, "label": "threshold", "order": 0, "type": "string", "value": "None"}}]]></parameters>
    <ports>
      <input key="model" scheme="hdf5" type="model" type_base="model" uuid="{fc3b5ba2-117a-41e3-aa5a-83adb522c5a1}">
        <label>Model</label>
        <description>Model</description>
      </input>
      <input key="in-data" scheme="hdf5" type="table" type_base="table" uuid="{61c68032-55d3-4a60-b516-391e4c920a2a}">
        <label>in-data</label>
        <description>in-data</description>
      </input>
      <output key="out-data" scheme="hdf5" type="table" type_base="table" uuid="{f16361c0-b615-4542-830f-75fccb14fc5a}">
        <label>out-data</label>
        <description>out-data</description>
      </output>
      <output key="features" scheme="hdf5" type="table" type_base="table" uuid="{332d2026-8c20-46c9-b485-7ad78a46adaa}">
        <label>features</label>
        <description>features</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.machinelearning.fit" port_format="1.1" uuid="{c4b29255-3526-445c-9083-5aaf4cfa422c}" x="1675.0" y="1825.0">
    <label>Fit</label>
    <description>Trains a model. Use "Create Input Port &gt; Y" for supervised training</description>
    <author>Mathias Broxvall</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json"><![CDATA[{"type": "group"}]]></parameters>
    <ports>
      <input key="in-model" scheme="hdf5" type="model" type_base="model" uuid="{5a377032-7390-401c-a317-18c75601bf99}">
        <label>Input model</label>
        <description>Input model</description>
      </input>
      <input key="X" scheme="hdf5" type="table" type_base="table" uuid="{f2d66eac-47e3-464c-879c-166920e9e6b8}">
        <label>X</label>
        <description>X</description>
      </input>
      <input key="Y0" scheme="hdf5" type="table" type_base="table" uuid="{6593f589-f819-40e0-a656-87cf07c534f8}">
        <label>Y</label>
        <description>Y</description>
      </input>
      <output key="out-model" scheme="hdf5" type="model" type_base="model" uuid="{c4837b5a-f485-46b2-a28f-0ce9c7fcd63e}">
        <label>Output model</label>
        <description>Output model</description>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{088f220a-d614-40c4-a67f-fdeb87f82e2a}">
    <source node="{6316d18f-f021-41e5-808b-63c73ecc77a4}" port="{22750cd3-ab98-4112-a8f2-5896833aa1ca}"/>
    <destination node="{93c9bdcb-9027-4a4d-ae52-7c3590079303}" port="{089a0f63-982e-4dc5-8185-f824e3ea921d}"/>
  </connection>
  <connection type="model" uuid="{2123f86d-8fbe-48f6-a0bb-4a755948a38c}">
    <source node="{a1faf6d3-0885-468e-9df8-0b4f74a9cf3c}" port="{c5a66aa8-03f8-4305-a5cf-43c8f473c510}"/>
    <destination node="{c4b29255-3526-445c-9083-5aaf4cfa422c}" port="{5a377032-7390-401c-a317-18c75601bf99}"/>
  </connection>
  <connection type="table" uuid="{2b9118fd-ed63-4fdb-8f98-2cbd3ba26b05}">
    <source node="{07d44750-2d25-4af5-88ce-3e96ff2dfb90}" port="{5f512d63-5c5e-49d8-9dc9-d5afeebeaff7}"/>
    <destination node="{49efd816-5e5a-4bf3-800e-6c0766297b8b}" port="{49b7f250-9b08-4692-b9b6-f1e11cfbe51f}"/>
  </connection>
  <connection type="table" uuid="{366dab7d-d7bc-4c3f-a708-8e897f69ed69}">
    <source node="{07404466-9548-44be-88ff-dc486638c7c4}" port="{430cdafd-2da3-4615-9f18-2bdf6f9d5d9b}"/>
    <destination node="{49efd816-5e5a-4bf3-800e-6c0766297b8b}" port="{6106ee6b-f9da-460e-91a0-c55f9b1337a7}"/>
  </connection>
  <connection type="table" uuid="{3e8f768b-7437-4fd6-8208-2f2720980129}">
    <source node="{6316d18f-f021-41e5-808b-63c73ecc77a4}" port="{22750cd3-ab98-4112-a8f2-5896833aa1ca}"/>
    <destination node="{07d44750-2d25-4af5-88ce-3e96ff2dfb90}" port="{20f39899-f501-48c0-b549-1c770d4d0ee1}"/>
  </connection>
  <connection type="table" uuid="{3eb9ae93-9b0e-40ed-98b6-4bc986530f47}">
    <source node="{0dac7f66-7c66-49ab-ab05-a4bdc1e1f3bd}" port="{bdb81fc0-37c6-42c4-88fa-64bc97e87114}"/>
    <destination node="{1a4ec870-e7aa-4ae7-8ee6-82b91d063d9e}" port="{ac632c37-a72c-4a94-ad33-4c05ae0fc1c2}"/>
  </connection>
  <connection type="table" uuid="{3ee1abfd-198c-472d-bb18-1083e1bde830}">
    <source node="{6316d18f-f021-41e5-808b-63c73ecc77a4}" port="{22750cd3-ab98-4112-a8f2-5896833aa1ca}"/>
    <destination node="{bee5251c-0a21-4235-834d-ac7ca7d91960}" port="{61c68032-55d3-4a60-b516-391e4c920a2a}"/>
  </connection>
  <connection type="model" uuid="{45f427c3-00dd-4e37-b3fc-146560534579}">
    <source node="{c4b29255-3526-445c-9083-5aaf4cfa422c}" port="{c4837b5a-f485-46b2-a28f-0ce9c7fcd63e}"/>
    <destination node="{80a7aac7-f724-4140-a8e1-138f7c2c9581}" port="{2f495442-1db5-4efe-8b49-139f82fb288f}"/>
  </connection>
  <connection type="model" uuid="{46a9dc52-9c9c-45c0-b7f8-2623d59d2644}">
    <source node="{c4b29255-3526-445c-9083-5aaf4cfa422c}" port="{c4837b5a-f485-46b2-a28f-0ce9c7fcd63e}"/>
    <destination node="{07d44750-2d25-4af5-88ce-3e96ff2dfb90}" port="{3c8c8ebc-ac64-4f9a-b8c6-bfe5f2aa97b0}"/>
  </connection>
  <connection type="model" uuid="{6a9b0906-ae8b-410b-9ef7-9ffbed98e0d8}">
    <source node="{c4b29255-3526-445c-9083-5aaf4cfa422c}" port="{c4837b5a-f485-46b2-a28f-0ce9c7fcd63e}"/>
    <destination node="{b3e50541-2bc9-43fe-8ed1-c9c5b89d29ff}" port="{e5f865cb-993b-4671-9fec-d4010a64ab59}"/>
  </connection>
  <connection type="model" uuid="{7296d820-19b7-4349-a769-f0de10998bc4}">
    <source node="{b226d36d-066e-4722-9d5c-4c7f0be8de9b}" port="{8e9b211c-efdd-4241-8d3a-edd4946fa658}"/>
    <destination node="{bee5251c-0a21-4235-834d-ac7ca7d91960}" port="{fc3b5ba2-117a-41e3-aa5a-83adb522c5a1}"/>
  </connection>
  <connection type="model" uuid="{735e8b4a-c31c-4bf3-a97b-fff5f1a25118}">
    <source node="{80a7aac7-f724-4140-a8e1-138f7c2c9581}" port="{313715df-1ab3-424f-a9b7-25155044c0c4}"/>
    <destination node="{93c9bdcb-9027-4a4d-ae52-7c3590079303}" port="{17bd41f1-5690-4d26-a302-933719fd3045}"/>
  </connection>
  <connection type="model" uuid="{7ee58908-ef6c-473e-9bba-8be08ca777de}">
    <source node="{601e5073-1b86-45cd-8f0f-948e6f4935e2}" port="{9f5e564e-31b7-4e89-88b6-8cac731f4893}"/>
    <destination node="{a1faf6d3-0885-468e-9df8-0b4f74a9cf3c}" port="{6f7f494a-216e-4cf5-88dd-e34d761257b6}"/>
  </connection>
  <connection type="table" uuid="{91acd39f-92d0-45ec-93c8-dd2d863a9b17}">
    <source node="{07404466-9548-44be-88ff-dc486638c7c4}" port="{430cdafd-2da3-4615-9f18-2bdf6f9d5d9b}"/>
    <destination node="{c4b29255-3526-445c-9083-5aaf4cfa422c}" port="{6593f589-f819-40e0-a656-87cf07c534f8}"/>
  </connection>
  <connection type="table" uuid="{a820517f-44c2-4e1d-9afa-693229b3ba52}">
    <source node="{6316d18f-f021-41e5-808b-63c73ecc77a4}" port="{22750cd3-ab98-4112-a8f2-5896833aa1ca}"/>
    <destination node="{1a4ec870-e7aa-4ae7-8ee6-82b91d063d9e}" port="{0ddb070d-0fda-4ce5-879e-56092ea97ff4}"/>
  </connection>
  <connection type="table" uuid="{cda5e416-aa83-4a81-b2a0-2cb18ffa8d31}">
    <source node="{6316d18f-f021-41e5-808b-63c73ecc77a4}" port="{22750cd3-ab98-4112-a8f2-5896833aa1ca}"/>
    <destination node="{0dac7f66-7c66-49ab-ab05-a4bdc1e1f3bd}" port="{051c76a4-291f-46e0-97f9-1a301e21b5c4}"/>
  </connection>
  <connection type="model" uuid="{d8d13675-c755-4c78-830d-e7c20b330845}">
    <source node="{c4b29255-3526-445c-9083-5aaf4cfa422c}" port="{c4837b5a-f485-46b2-a28f-0ce9c7fcd63e}"/>
    <destination node="{b226d36d-066e-4722-9d5c-4c7f0be8de9b}" port="{fc6763da-35aa-48f6-bc76-d90844707ffe}"/>
  </connection>
  <connection type="model" uuid="{de4d6bcc-1204-459a-89d8-6916c5064af3}">
    <source node="{b3e50541-2bc9-43fe-8ed1-c9c5b89d29ff}" port="{7e1a2c04-10be-4301-8c7d-b56a381aa930}"/>
    <destination node="{0dac7f66-7c66-49ab-ab05-a4bdc1e1f3bd}" port="{1dd42605-c5c2-4809-bc88-a1d16774ff4c}"/>
  </connection>
  <connection type="table" uuid="{eab82887-44ff-4836-9f9b-756a570c66a6}">
    <source node="{6316d18f-f021-41e5-808b-63c73ecc77a4}" port="{22750cd3-ab98-4112-a8f2-5896833aa1ca}"/>
    <destination node="{c4b29255-3526-445c-9083-5aaf4cfa422c}" port="{f2d66eac-47e3-464c-879c-166920e9e6b8}"/>
  </connection>
  <connection type="model" uuid="{eac97e60-a26a-4978-824a-3beb10296494}">
    <source node="{c4b29255-3526-445c-9083-5aaf4cfa422c}" port="{c4837b5a-f485-46b2-a28f-0ce9c7fcd63e}"/>
    <destination node="{9e6a21e3-1afc-472a-8e65-14b827d808ad}" port="{52c075ba-c4e1-419a-b167-cb4bc9387d07}"/>
  </connection>
  <connection type="model" uuid="{f00d349e-bc21-4a8a-be11-ead9af126ae8}">
    <source node="{a1d06b9f-926a-4e89-a953-a61875af9a17}" port="{704f1dd8-c66d-4f67-86be-594897cb82dc}"/>
    <destination node="{a1faf6d3-0885-468e-9df8-0b4f74a9cf3c}" port="{8133611d-826c-4809-a5c8-d7c8941b73a9}"/>
  </connection>
  <text color="Beige" height="50.0" uuid="{4ecf7644-a74f-42a4-8ff9-2297d9af7589}" width="475.0" x="1300.0" y="1450.0">Test that sanity checks a number of the basic nodes</text>
</flow>
