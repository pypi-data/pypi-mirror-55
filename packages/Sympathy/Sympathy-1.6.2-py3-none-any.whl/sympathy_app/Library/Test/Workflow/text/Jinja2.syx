<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" uuid="{466429b6-086c-4f35-9443-5c466dfeaf7b}">
  <label></label>
  <ports/>
  <node id="org.sysess.sympathy.tuple.tuple2" port_format="1.1" uuid="{28d02c06-6d21-454a-a595-1d1ad00f5f4a}" x="2150.0" y="1675.0">
    <label>Tuple</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2018, Combine Control Systems AB</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{bb6d2ac0-7890-480a-9b6c-6038931d0db0}">
        <label>Input</label>
      </input>
      <input key="input" scheme="hdf5" type="text" type_base="&lt;b&gt;" uuid="{684af527-2213-4a9e-a872-c357175684c8}">
        <label>Input</label>
      </input>
      <output key="output" scheme="hdf5" type="(text, text)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{ea244cfc-71c6-46a1-9d7c-a2dae17e468a}">
        <label>Output</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" port_format="1.1" uuid="{59ca444d-7b10-4bb4-9a9e-ebb8b62e862b}" x="2300.0" y="1825.0">
    <label>Conditional error/warning</label>
    <version>1.0</version>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2018, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "error_msg": {
        "editor": null,
        "label": "Error message:",
        "order": 1,
        "type": "string",
        "value": "Error!"
      },
      "error_type": {
        "editor": {
          "display": null,
          "edit": false,
          "filter": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Severity:",
        "list": ["Error", "Warning", "Output"],
        "mode": "selected",
        "order": 2,
        "type": "list",
        "value": [0],
        "value_names": ["Error"]
      },
      "predicate": {
        "editor": {
          "language": "python",
          "type": "code"
        },
        "label": "Predicate function:",
        "order": 0,
        "type": "string",
        "value": "lambda arg: arg[0].get() != arg[1].get()"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="in" scheme="hdf5" type="(text, text)" type_base="&lt;a&gt;" uuid="{ec762d82-3773-41c8-8298-7c323ab4e3ae}">
        <label>Input</label>
      </input>
      <output key="out" scheme="hdf5" type="(text, text)" type_base="&lt;a&gt;" uuid="{66c124c2-323d-42d5-b07d-6084751988ca}">
        <label>Output</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.conditionalerror" port_format="1.1" uuid="{721dfc71-4212-4ee7-8aa7-3c841f88b373}" x="2300.0" y="1675.0">
    <label>Conditional error/warning</label>
    <version>1.0</version>
    <description>Raise an error if a predicate is True.</description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2018, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "error_msg": {
        "editor": null,
        "label": "Error message:",
        "order": 1,
        "type": "string",
        "value": "Error!"
      },
      "error_type": {
        "editor": {
          "display": null,
          "edit": false,
          "filter": false,
          "include_empty": false,
          "options": [],
          "type": "combobox"
        },
        "label": "Severity:",
        "list": ["Error", "Warning", "Output"],
        "mode": "selected",
        "order": 2,
        "type": "list",
        "value": [0],
        "value_names": ["Error"]
      },
      "predicate": {
        "editor": {
          "language": "python",
          "type": "code"
        },
        "label": "Predicate function:",
        "order": 0,
        "type": "string",
        "value": "lambda arg: arg[0].get() != arg[1].get()"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="in" scheme="hdf5" type="(text, text)" type_base="&lt;a&gt;" uuid="{343bc302-54dc-4a22-b2f8-df4f30ab5ca3}">
        <label>Input</label>
      </input>
      <output key="out" scheme="hdf5" type="(text, text)" type_base="&lt;a&gt;" uuid="{9bfecf12-9bd6-456d-a24e-ef6ac359f417}">
        <label>Output</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.texts.generic_jinja2template" port_format="1.1" uuid="{93ebc3b6-d140-43fe-8527-dfc37f95b14a}" x="2000.0" y="1750.0">
    <label>Jinja2 template</label>
    <version>0.1</version>
    <description>Create and render a jinja2 template. Use "{{arg}}" for access to the data.</description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2018, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "template": {
        "editor": {
          "language": "jinja",
          "type": "code"
        },
        "label": "Template:",
        "order": 0,
        "type": "string",
        "value": "&lt;html&gt;\n    &lt;header&gt;\n        &lt;title&gt;{{arg['Parameters'][0]}}&lt;/title&gt;\n    &lt;/header&gt;\n    &lt;body&gt;\n        {{arg['Parameters'][1]}}\n    &lt;/body&gt;\n&lt;/html&gt;"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="in" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{390c7fe5-6f6b-4114-a9f2-14fff5f521c3}">
        <label>Input</label>
      </input>
      <output key="out" scheme="hdf5" type="text" type_base="text" uuid="{c19aac0c-688b-4fc5-aafd-7d49c6c8a9c0}">
        <label>Rendered Template</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.texts.jinja2template" port_format="1.1" uuid="{9dbe3c26-3b56-41d2-8b90-c4461b0684ca}" x="2000.0" y="1900.0">
    <label>Jinja2 template (old)</label>
    <version>0.1</version>
    <description>Create and render a jinja2 template. Use "{{column name}}" for access to the first row of columns, or use "arg" inside a jinja for-loop to access full table.</description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2018, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "template": {
        "editor": {
          "language": "jinja",
          "type": "code"
        },
        "label": "Template:",
        "order": 0,
        "type": "string",
        "value": "&lt;html&gt;\n    &lt;header&gt;\n        &lt;title&gt;{{arg.col('Parameters').data[0]}}&lt;/title&gt;\n    &lt;/header&gt;\n    &lt;body&gt;\n        {{arg.col('Parameters').data[1]}}\n    &lt;/body&gt;\n&lt;/html&gt;"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <input key="in" scheme="hdf5" type="table" type_base="table" uuid="{741a2ecc-1538-436f-89a4-da44172da478}">
        <label>Input data</label>
      </input>
      <output key="out" scheme="hdf5" type="text" type_base="text" uuid="{da18569f-9ec9-410d-8a01-5cf65b3cee1c}">
        <label>Rendered Template</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.texts.generic_jinja2template" port_format="1.1" uuid="{bf1892ad-af07-4124-9ff5-de3783db789f}" x="2000.0" y="1600.0">
    <label>Jinja2 template (new) Reference</label>
    <version>0.1</version>
    <description>Create and render a jinja2 template. Use "{{arg}}" for access to the data.</description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2018, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "template": {
        "editor": {
          "language": "jinja",
          "type": "code"
        },
        "label": "Template:",
        "order": 0,
        "type": "string",
        "value": "&lt;html&gt;\n    &lt;header&gt;\n        &lt;title&gt;Title&lt;/title&gt;\n    &lt;/header&gt;\n    &lt;body&gt;\n        Hello World!\n    &lt;/body&gt;\n&lt;/html&gt;"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="out" scheme="hdf5" type="text" type_base="text" uuid="{4ecb6663-6736-45ac-8633-a0fb096f0f11}">
        <label>Rendered Template</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.tuple.tuple2" port_format="1.1" uuid="{bfbddd21-67e3-4043-9fc3-ee829501f7be}" x="2150.0" y="1825.0">
    <label>Tuple</label>
    <version>1.0</version>
    <description></description>
    <author>Erik der Hagopian</author>
    <copyright>Copyright (c) 2011-2018, Combine Control Systems AB</copyright>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="text" type_base="&lt;a&gt;" uuid="{c6202315-7afc-4485-8b22-1eabe18eda71}">
        <label>Input</label>
      </input>
      <input key="input" scheme="hdf5" type="text" type_base="&lt;b&gt;" uuid="{19da96ba-879d-4266-9225-0a651a023847}">
        <label>Input</label>
      </input>
      <output key="output" scheme="hdf5" type="(text, text)" type_base="(&lt;a&gt;, &lt;b&gt;)" uuid="{365bf0c6-af3c-4740-b096-3e847843b131}">
        <label>Output</label>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.createtable" port_format="1.1" uuid="{e9b7216a-5f2d-46f5-a96d-c9b13f338b7e}" x="1825.0" y="1825.0">
    <label>Manually Create Table</label>
    <version>1.0</version>
    <description></description>
    <author>Magnus Sand&#233;n</author>
    <copyright>Copyright (c) 2011-2018, Combine Control Systems AB</copyright>
    <parameters type="json">
    {
      "json_table": {
        "editor": null,
        "label": "GUI",
        "order": 0,
        "type": "string",
        "value": "[[\"Parameters\", \"U\", [\"Title\", \"Hello World!\"]]]"
      },
      "type": "group"
    }
    </parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{37890e11-ee9f-48e4-b6b9-aa9f46770563}">
        <label>Manually created table</label>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{15469b48-061d-4d01-a382-23295a0c8d0b}">
    <source node="{e9b7216a-5f2d-46f5-a96d-c9b13f338b7e}" port="{37890e11-ee9f-48e4-b6b9-aa9f46770563}"/>
    <destination node="{93ebc3b6-d140-43fe-8527-dfc37f95b14a}" port="{390c7fe5-6f6b-4114-a9f2-14fff5f521c3}"/>
  </connection>
  <connection type="text" uuid="{18dcf3d2-13cc-413f-8323-489c4fb85987}">
    <source node="{9dbe3c26-3b56-41d2-8b90-c4461b0684ca}" port="{da18569f-9ec9-410d-8a01-5cf65b3cee1c}"/>
    <destination node="{bfbddd21-67e3-4043-9fc3-ee829501f7be}" port="{19da96ba-879d-4266-9225-0a651a023847}"/>
  </connection>
  <connection type="text" uuid="{4351804f-6a74-4c3f-9b9b-5f5a301020ae}">
    <source node="{bf1892ad-af07-4124-9ff5-de3783db789f}" port="{4ecb6663-6736-45ac-8633-a0fb096f0f11}"/>
    <destination node="{28d02c06-6d21-454a-a595-1d1ad00f5f4a}" port="{bb6d2ac0-7890-480a-9b6c-6038931d0db0}"/>
  </connection>
  <connection type="(text, text)" uuid="{453e9325-8338-4e6b-81b8-3e1156f86679}">
    <source node="{bfbddd21-67e3-4043-9fc3-ee829501f7be}" port="{365bf0c6-af3c-4740-b096-3e847843b131}"/>
    <destination node="{59ca444d-7b10-4bb4-9a9e-ebb8b62e862b}" port="{ec762d82-3773-41c8-8298-7c323ab4e3ae}"/>
  </connection>
  <connection type="text" uuid="{63978536-6fe1-4a58-93aa-ba3ecd0065a1}">
    <source node="{93ebc3b6-d140-43fe-8527-dfc37f95b14a}" port="{c19aac0c-688b-4fc5-aafd-7d49c6c8a9c0}"/>
    <destination node="{28d02c06-6d21-454a-a595-1d1ad00f5f4a}" port="{684af527-2213-4a9e-a872-c357175684c8}"/>
  </connection>
  <connection type="(text, text)" uuid="{75b5138e-d39f-4000-93e3-e9099cc502b5}">
    <source node="{28d02c06-6d21-454a-a595-1d1ad00f5f4a}" port="{ea244cfc-71c6-46a1-9d7c-a2dae17e468a}"/>
    <destination node="{721dfc71-4212-4ee7-8aa7-3c841f88b373}" port="{343bc302-54dc-4a22-b2f8-df4f30ab5ca3}"/>
  </connection>
  <connection type="text" uuid="{79f349c1-1e03-4c34-bb6a-39b05bcefaa8}">
    <source node="{93ebc3b6-d140-43fe-8527-dfc37f95b14a}" port="{c19aac0c-688b-4fc5-aafd-7d49c6c8a9c0}"/>
    <destination node="{bfbddd21-67e3-4043-9fc3-ee829501f7be}" port="{c6202315-7afc-4485-8b22-1eabe18eda71}"/>
  </connection>
  <connection type="table" uuid="{eb81427c-d3f4-484f-9b79-473816ce7c5e}">
    <source node="{e9b7216a-5f2d-46f5-a96d-c9b13f338b7e}" port="{37890e11-ee9f-48e4-b6b9-aa9f46770563}"/>
    <destination node="{9dbe3c26-3b56-41d2-8b90-c4461b0684ca}" port="{741a2ecc-1538-436f-89a4-da44172da478}"/>
  </connection>
  <text color="Beige" height="50.0" uuid="{162269c6-ad34-4831-950f-ac7975fd2aa4}" width="525.0" x="1825.0" y="1525.0">Compares jinja node (old and new) with reference.</text>
</flow>
