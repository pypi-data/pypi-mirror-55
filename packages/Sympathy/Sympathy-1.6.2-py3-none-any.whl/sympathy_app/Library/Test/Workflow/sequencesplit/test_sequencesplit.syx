<?xml version='1.0' encoding='US-ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" uuid="{9603e286-b43c-4ff6-86c6-f61a4002c45d}" width="50.0" x="0.0" y="0.0" id="">
  <label></label>
  <description></description>
  <author></author>
  <copyright></copyright>
  <version></version>
  <min_version></min_version>
  <icon/>
  <aggregation type="json">null</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <parameters type="json">{}</parameters>
  <ports/>
  <node id="org.sysess.sympathy.data.table.importtable" uuid="{16c4320d-74c7-4acb-be36-a6f0872713e9}" x="1925.0" y="1900.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "Table"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"type": "group", "description_row": {"description": "The row where the descriptions are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "order": 0, "type": "integer", "value": 2, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "data_end_row": {"description": "The last data row.", "label": "", "order": 0, "type": "integer", "value": 0, "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}}, "source_coding": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "utf_8"}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "editor": null, "label": "", "order": 0, "type": "string", "value": " "}, "header_row": {"description": "The row where the headers are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "double_quotations": {"description": "Remove double quotations in importation.", "editor": null, "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "order": 0, "type": "integer", "value": 1, "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}}, "delimiter": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ";"}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "units": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "unit_row": {"description": "The row where the units are located.", "label": "", "order": 0, "type": "integer", "value": 16, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "mode": "selected", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": ["Raise Exceptions"], "editor": {"type": "combobox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": ["Read to the end of file"], "editor": {"type": "combobox", "options": []}}}, "HDF5": {"type": "group", "path_list": {"description": "The paths selected to import data from.", "label": "Selected paths", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"type": "combobox"}}}, "MAT": {"label": "", "type": "group", "data_end_row": {"description": "The data rows.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "mode": "selected", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": ["Raise Exceptions"], "editor": {"type": "combobox", "options": []}}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": ["Read to the end of file"], "editor": {"type": "combobox", "options": []}}}, "SQL": {"type": "group", "join_columns": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "table_names": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [null], "value": [], "value_names": []}, "custom_query": {"description": "", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "where_comparison_combo": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["=", "&lt;", "&gt;", "&gt;=", "&lt;=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "value_names": ["="]}, "where_condition": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ""}, "where_column_combo": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": ["default"], "editor": {"type": "combobox"}}, "lineedit_query": {"description": "", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "join_tables": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "preview_query": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ""}, "table_columns": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "table_query": {"description": "", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "where_add_comparison": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ""}, "query_str": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ""}, "where_condition_list": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "join_column_selection": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}}, "Swegon": {"label": "", "type": "group", "apply_mul_div": {"description": "Directly applies the multiplier/divider in the signal meta data. Also removes them from column attributes", "editor": null, "label": "Apply multiplier/divider", "type": "boolean", "value": true}}, "Table": {"type": "group"}, "XLS": {"type": "group", "description_row": {"description": "The row where the descriptions are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "order": 0, "type": "integer", "value": 2, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "data_end_row": {"description": "The last data row.", "label": "", "order": 0, "type": "integer", "value": 0, "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}}, "worksheet_name": {"description": "The worksheet to import from.", "label": "Select worksheet", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"type": "combobox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "header_row": {"description": "The row where the headers are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "units": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "unit_row": {"description": "The row where the units are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": ["Read to the end of file"], "editor": {"type": "combobox", "options": []}}}}, "fail_strategy": {"description": "Decide how failure to import a file should be handled.", "label": "Action on import failure", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry"], "value": [0], "value_names": ["Exception"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="" scheme="text" type="datasource" type_base="datasource" uuid="{46b4f81b-833b-48d2-9ba8-7b48ed6434db}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{e3325610-ddee-4112-9518-53df542341fe}">
        <label>Imported Table</label>
        <description>Imported Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.vjointablenodes" uuid="{22b90285-3177-4222-978a-15696bb7d49c}" x="2200.0" y="2150.0">
    <label>VJoin Tables</label>
    <description>Vertical join of Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2012 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "fill": {"description": "Select if columns that are not represented in all Tables should be complemented", "editor": null, "label": "Complement missing columns", "order": 0, "type": "boolean", "value": true}, "fill_strategy": {"description": "When \"Complement with nan or empty string\" is selected missing columns will be replaced by columns of nan or empty strings. When \"Mask missing values\" is selected missing columns will be result in masked values", "label": "Complement strategy", "mode": "selected", "order": 1, "passthrough": false, "type": "list", "list": ["Complement with nan or empty string", "Mask missing values"], "value": [1], "value_names": ["Mask missing values"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "output_index": {"description": "Specify name for output index column. If left empty, no index column will be created", "label": "Output index", "order": 2, "type": "string", "value": "", "editor": {"placeholder": "(none)", "type": "lineedit"}}, "minimum_increment": {"description": "Specify the increment in the outgoing index column for tables with no rows. Either 1 or 0.", "label": "Increment for empty tables", "order": 3, "type": "integer", "value": 1, "editor": {"max": 1, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{b9da60d8-afb1-4769-b201-16b2215fd432}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{c9ae7441-4bbf-4b1a-a03a-fba693662a0a}">
        <label>Joined Tables</label>
        <description>Joined Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.datasources.filedatasource" uuid="{307eb36c-0e27-4571-95bb-c5bd07209c1e}" x="1725.0" y="1900.0">
    <label>Datasource</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 0, "type": "string", "value": "test_data.sydata", "editor": {"states": null, "type": "filename", "filter": ["Any files (*)"]}}, "use_relative_path": {"description": "Use the relative path to the file.", "editor": null, "label": "Use relative path", "order": 0, "type": "boolean", "value": true}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "order": 1, "type": "string", "value": "mssql+pyodbc:///"}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "order": 2, "type": "string", "value": "ODBC", "editor": {"display": null, "include_empty": false, "type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": ["SQL Server"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 4, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 5, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 6, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 7, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 8, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "mode": "selected", "order": 9, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [0], "value_names": ["File"]}}</parameters>
    <ports>
      <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{053fcbe1-202f-4d75-87da-e01a7439a044}">
        <label>Datasource with path to file</label>
        <description>Datasource with path to file</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.importtable" uuid="{327ec1e9-84eb-45fa-94f2-86020e063369}" x="1925.0" y="2000.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "Table"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"type": "group", "description_row": {"description": "The row where the descriptions are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "order": 0, "type": "integer", "value": 2, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "data_end_row": {"description": "The last data row.", "label": "", "order": 0, "type": "integer", "value": 0, "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}}, "source_coding": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "utf_8"}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "editor": null, "label": "", "order": 0, "type": "string", "value": " "}, "header_row": {"description": "The row where the headers are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "double_quotations": {"description": "Remove double quotations in importation.", "editor": null, "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "order": 0, "type": "integer", "value": 1, "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}}, "delimiter": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ";"}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "units": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "unit_row": {"description": "The row where the units are located.", "label": "", "order": 0, "type": "integer", "value": 16, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "mode": "selected", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": ["Raise Exceptions"], "editor": {"type": "combobox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": ["Read to the end of file"], "editor": {"type": "combobox", "options": []}}}, "HDF5": {"type": "group", "path_list": {"description": "The paths selected to import data from.", "label": "Selected paths", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"type": "combobox"}}}, "MAT": {"label": "", "type": "group", "data_end_row": {"description": "The data rows.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "mode": "selected", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": ["Raise Exceptions"], "editor": {"type": "combobox", "options": []}}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": ["Read to the end of file"], "editor": {"type": "combobox", "options": []}}}, "SQL": {"type": "group", "join_columns": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "table_names": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [null], "value": [], "value_names": []}, "custom_query": {"description": "", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "where_comparison_combo": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["=", "&lt;", "&gt;", "&gt;=", "&lt;=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "value_names": ["="]}, "where_condition": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ""}, "where_column_combo": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": ["default"], "editor": {"type": "combobox"}}, "lineedit_query": {"description": "", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "join_tables": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "preview_query": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ""}, "table_columns": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "table_query": {"description": "", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "where_add_comparison": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ""}, "query_str": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ""}, "where_condition_list": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "join_column_selection": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}}, "Swegon": {"label": "", "type": "group", "apply_mul_div": {"description": "Directly applies the multiplier/divider in the signal meta data. Also removes them from column attributes", "editor": null, "label": "Apply multiplier/divider", "type": "boolean", "value": true}}, "Table": {"type": "group"}, "XLS": {"type": "group", "description_row": {"description": "The row where the descriptions are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "order": 0, "type": "integer", "value": 2, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "data_end_row": {"description": "The last data row.", "label": "", "order": 0, "type": "integer", "value": 0, "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}}, "worksheet_name": {"description": "The worksheet to import from.", "label": "Select worksheet", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"type": "combobox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "header_row": {"description": "The row where the headers are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "units": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "unit_row": {"description": "The row where the units are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": ["Read to the end of file"], "editor": {"type": "combobox", "options": []}}}}, "fail_strategy": {"description": "Decide how failure to import a file should be handled.", "label": "Action on import failure", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry"], "value": [0], "value_names": ["Exception"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="" scheme="text" type="datasource" type_base="datasource" uuid="{16385eb4-6304-4d22-95b2-bfb66fe09fe4}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{ed5cb96e-d5a4-4113-983c-4ff2cefdb4c5}">
        <label>Imported Table</label>
        <description>Imported Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.assertequaltable" uuid="{3f4c60f7-50d6-44b9-9200-5f989e76de19}" x="2300.0" y="2250.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "col_order": {"description": "Differing column order will trigger error", "editor": null, "label": "Compare column order", "order": 0, "type": "boolean", "value": true}, "col_attrs": {"description": "Differing column attributes will trigger error", "editor": null, "label": "Compare column attributes", "order": 1, "type": "boolean", "value": true}, "tbl_names": {"description": "Differing table name will trigger error", "editor": null, "label": "Compare table names", "order": 2, "type": "boolean", "value": false}, "tbl_attrs": {"description": "Differing table attributes will trigger error", "editor": null, "label": "Compare table attributes", "order": 3, "type": "boolean", "value": true}, "inexact_float": {"description": "If any arithemtics is invovled floats should probably be compared approximately.", "editor": null, "label": "Approximate comparison of floats", "order": 4, "type": "boolean", "value": true}, "rel_tol": {"description": "Floats are considered unequal if the relative difference between them is larger than this value.", "editor": null, "label": "Relative tolerance", "order": 5, "type": "float", "value": 1e-05}, "abs_tol": {"description": "Floats are considered unequal if the absolute difference between them is larger than this value.", "editor": null, "label": "Absolute tolerance", "order": 6, "type": "float", "value": 1e-08}}</parameters>
    <ports>
      <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{265469a6-142a-4882-b866-f53c7c85f738}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{a24aa090-c38f-40ec-8547-b3446042e78e}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{2ef366fe-9693-4125-a513-8c207bf7dbe5}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.datasources.filedatasource" uuid="{579a9948-d805-4997-a0a3-128feace5f07}" x="1725.0" y="2150.0">
    <label>Datasource</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 0, "type": "string", "value": "test_data.sydata", "editor": {"states": null, "type": "filename", "filter": ["Any files (*)"]}}, "use_relative_path": {"description": "Use the relative path to the file.", "editor": null, "label": "Use relative path", "order": 0, "type": "boolean", "value": true}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "order": 1, "type": "string", "value": "mssql+pyodbc:///"}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "order": 2, "type": "string", "value": "ODBC", "editor": {"display": null, "include_empty": false, "type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": ["SQL Server"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 4, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 5, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 6, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 7, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 8, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "mode": "selected", "order": 9, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [0], "value_names": ["File"]}}</parameters>
    <ports>
      <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{3b18cb41-786a-4e85-8d13-53975f83bfe5}">
        <label>Datasource with path to file</label>
        <description>Datasource with path to file</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.importtable" uuid="{77fce09d-e669-49db-8302-afa73a5bbafe}" x="1925.0" y="2250.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "Table"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"type": "group", "description_row": {"description": "The row where the descriptions are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "order": 0, "type": "integer", "value": 2, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "data_end_row": {"description": "The last data row.", "label": "", "order": 0, "type": "integer", "value": 0, "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}}, "source_coding": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "utf_8"}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "editor": null, "label": "", "order": 0, "type": "string", "value": " "}, "header_row": {"description": "The row where the headers are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "double_quotations": {"description": "Remove double quotations in importation.", "editor": null, "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "order": 0, "type": "integer", "value": 1, "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}}, "delimiter": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ";"}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "units": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "unit_row": {"description": "The row where the units are located.", "label": "", "order": 0, "type": "integer", "value": 16, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "mode": "selected", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": ["Raise Exceptions"], "editor": {"type": "combobox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": ["Read to the end of file"], "editor": {"type": "combobox", "options": []}}}, "HDF5": {"type": "group", "path_list": {"description": "The paths selected to import data from.", "label": "Selected paths", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"type": "combobox"}}}, "MAT": {"label": "", "type": "group", "data_end_row": {"description": "The data rows.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "mode": "selected", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": ["Raise Exceptions"], "editor": {"type": "combobox", "options": []}}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": ["Read to the end of file"], "editor": {"type": "combobox", "options": []}}}, "SQL": {"type": "group", "join_columns": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "table_names": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [null], "value": [], "value_names": []}, "custom_query": {"description": "", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "where_comparison_combo": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["=", "&lt;", "&gt;", "&gt;=", "&lt;=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "value_names": ["="]}, "where_condition": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ""}, "where_column_combo": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": ["default"], "editor": {"type": "combobox"}}, "lineedit_query": {"description": "", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "join_tables": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "preview_query": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ""}, "table_columns": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "table_query": {"description": "", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "where_add_comparison": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ""}, "query_str": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ""}, "where_condition_list": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "join_column_selection": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}}, "Swegon": {"label": "", "type": "group", "apply_mul_div": {"description": "Directly applies the multiplier/divider in the signal meta data. Also removes them from column attributes", "editor": null, "label": "Apply multiplier/divider", "type": "boolean", "value": true}}, "Table": {"type": "group"}, "XLS": {"type": "group", "description_row": {"description": "The row where the descriptions are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "order": 0, "type": "integer", "value": 2, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "data_end_row": {"description": "The last data row.", "label": "", "order": 0, "type": "integer", "value": 0, "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}}, "worksheet_name": {"description": "The worksheet to import from.", "label": "Select worksheet", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"type": "combobox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "header_row": {"description": "The row where the headers are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "units": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "unit_row": {"description": "The row where the units are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": ["Read to the end of file"], "editor": {"type": "combobox", "options": []}}}}, "fail_strategy": {"description": "Decide how failure to import a file should be handled.", "label": "Action on import failure", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry"], "value": [0], "value_names": ["Exception"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="" scheme="text" type="datasource" type_base="datasource" uuid="{48c78588-c2fc-4e61-a4ba-5120be1d5bfa}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{823fdffc-fe80-40e3-8eb7-fe7fc4648f58}">
        <label>Imported Table</label>
        <description>Imported Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.assertequaltable" uuid="{9098c3b0-b357-45a4-a16d-c4fbe787bca2}" x="2300.0" y="2000.0">
    <label>Assert Equal Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>Copyright (c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "col_order": {"description": "Differing column order will trigger error", "editor": null, "label": "Compare column order", "order": 0, "type": "boolean", "value": true}, "col_attrs": {"description": "Differing column attributes will trigger error", "editor": null, "label": "Compare column attributes", "order": 1, "type": "boolean", "value": true}, "tbl_names": {"description": "Differing table name will trigger error", "editor": null, "label": "Compare table names", "order": 2, "type": "boolean", "value": false}, "tbl_attrs": {"description": "Differing table attributes will trigger error", "editor": null, "label": "Compare table attributes", "order": 3, "type": "boolean", "value": true}, "inexact_float": {"description": "If any arithemtics is invovled floats should probably be compared approximately.", "editor": null, "label": "Approximate comparison of floats", "order": 4, "type": "boolean", "value": true}, "rel_tol": {"description": "Floats are considered unequal if the relative difference between them is larger than this value.", "editor": null, "label": "Relative tolerance", "order": 5, "type": "float", "value": 1e-05}, "abs_tol": {"description": "Floats are considered unequal if the absolute difference between them is larger than this value.", "editor": null, "label": "Absolute tolerance", "order": 6, "type": "float", "value": 1e-08}}</parameters>
    <ports>
      <input key="table1" scheme="hdf5" type="table" type_base="table" uuid="{007c4e62-0fdf-4cf7-b56d-63d1ec56f002}">
        <label>Table A</label>
        <description>Table A</description>
      </input>
      <input key="table2" scheme="hdf5" type="table" type_base="table" uuid="{8c1194b9-8f3f-4c44-a0c2-3e0d5718afd8}">
        <label>Table B</label>
        <description>Table B</description>
      </input>
      <output key="out" scheme="hdf5" type="table" type_base="table" uuid="{112aced5-fdac-43ea-a37c-b1649cb3208f}">
        <label>Output Table</label>
        <description>Output Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.datasources.filedatasource" uuid="{94d24eae-764f-49b6-a990-4e29589e007e}" x="1725.0" y="2250.0">
    <label>Datasource</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 0, "type": "string", "value": "wavelet.sydata", "editor": {"states": null, "type": "filename", "filter": ["Any files (*)"]}}, "use_relative_path": {"description": "Use the relative path to the file.", "editor": null, "label": "Use relative path", "order": 0, "type": "boolean", "value": true}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "order": 1, "type": "string", "value": "mssql+pyodbc:///"}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "order": 2, "type": "string", "value": "ODBC", "editor": {"display": null, "include_empty": false, "type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": ["SQL Server"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 4, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 5, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 6, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 7, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 8, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "mode": "selected", "order": 9, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [0], "value_names": ["File"]}}</parameters>
    <ports>
      <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{74341a1f-4ebe-4242-90b8-864edc7802fa}">
        <label>Datasource with path to file</label>
        <description>Datasource with path to file</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.sequencesplit" uuid="{af519246-31c3-4bbb-a7cc-5d07d2a3dc91}" x="2075.0" y="2150.0">
    <label>Periodic Sequence Split Table</label>
    <description>Splits tables of data in equidistant points based on the periodicity of an identifier column</description>
    <author>M&#229;ns F&#228;llman&lt;mans.fallman@combine.se&gt;</author>
    <copyright>(c) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "peak_detector": {"description": "Choose which algorithm to detect periodic events", "label": "Peak Detecting Algorithm", "order": 0, "type": "string", "value": "Continuous Wavelet Transform", "editor": {"display": null, "include_empty": false, "type": "combobox", "options": ["Local Maxima", "Continuous Wavelet Transform"]}}, "samples": {"description": "Choose an approximate value for the number of expected samples between peaks", "label": "Samples per peak", "order": 1, "type": "integer", "value": 275, "editor": {"max": 9999999, "min": 2, "step": 1, "type": "spinbox"}}, "select_column": {"description": "Choose column to use as identifier", "label": "Select column:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["time", "val"], "value": [1], "value_names": ["val"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "lag_offset": {"description": "Add lag as a percentage of the discarded data", "label": "Offset of peridodic event(0-100)", "order": 3, "type": "float", "value": 0.0, "editor": {"max": 100, "min": 0, "placeholder": "0-100", "type": "lineedit"}}}</parameters>
    <ports>
      <input key="sequence" scheme="hdf5" type="table" type_base="table" uuid="{9c494841-4006-4f45-8921-ed1d7bb35278}">
        <label>The sequence to split</label>
        <description>The sequence to split</description>
      </input>
      <output key="sequences" scheme="hdf5" type="[table]" type_base="[table]" uuid="{67815b64-7692-49a8-82df-5daca6d54296}">
        <label>The split sequences</label>
        <description>The split sequences</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.datasources.filedatasource" uuid="{badcd35d-a61c-40c6-9cee-9262a6dfc51b}" x="1725.0" y="2000.0">
    <label>Datasource</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 0, "type": "string", "value": "local_maxima.sydata", "editor": {"states": null, "type": "filename", "filter": ["Any files (*)"]}}, "use_relative_path": {"description": "Use the relative path to the file.", "editor": null, "label": "Use relative path", "order": 0, "type": "boolean", "value": true}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "order": 1, "type": "string", "value": "mssql+pyodbc:///"}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "order": 2, "type": "string", "value": "ODBC", "editor": {"display": null, "include_empty": false, "type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "mode": "selected", "order": 3, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": ["SQL Server"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 4, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 5, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 6, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 7, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 8, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "mode": "selected", "order": 9, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [0], "value_names": ["File"]}}</parameters>
    <ports>
      <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{908646a8-cc5a-40f4-8417-43764193e3c6}">
        <label>Datasource with path to file</label>
        <description>Datasource with path to file</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.sequencesplit" uuid="{d2603c0d-5082-48c4-8e8c-e2030682ef7e}" x="2075.0" y="1900.0">
    <label>Periodic Sequence Split Table</label>
    <description>Splits tables of data in equidistant points based on the periodicity of an identifier column</description>
    <author>M&#229;ns F&#228;llman&lt;mans.fallman@combine.se&gt;</author>
    <copyright>(c) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "peak_detector": {"description": "Choose which algorithm to detect periodic events", "label": "Peak Detecting Algorithm", "order": 0, "type": "string", "value": "Local Maxima", "editor": {"display": null, "include_empty": false, "type": "combobox", "options": ["Local Maxima", "Continuous Wavelet Transform"]}}, "samples": {"description": "Choose an approximate value for the number of expected samples between peaks", "label": "Samples per peak", "order": 1, "type": "integer", "value": 275, "editor": {"max": 9999999, "min": 2, "step": 1, "type": "spinbox"}}, "select_column": {"description": "Choose column to use as identifier", "label": "Select column:", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["time", "val"], "value": [1], "value_names": ["val"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "lag_offset": {"description": "Add lag as a percentage of the discarded data", "label": "Offset of peridodic event(0-100)", "order": 3, "type": "float", "value": 0.0, "editor": {"max": 100, "min": 0, "placeholder": "0-100", "type": "lineedit"}}}</parameters>
    <ports>
      <input key="sequence" scheme="hdf5" type="table" type_base="table" uuid="{ad8b9c36-0bfd-441b-a88d-e78c2e5c8876}">
        <label>The sequence to split</label>
        <description>The sequence to split</description>
      </input>
      <output key="sequences" scheme="hdf5" type="[table]" type_base="[table]" uuid="{ef97ddb1-bfe0-49e7-a854-60a5bc3d73a4}">
        <label>The split sequences</label>
        <description>The split sequences</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.vjointablenodes" uuid="{d7822564-f045-4531-a1cf-7d365842b19f}" x="2200.0" y="1900.0">
    <label>VJoin Tables</label>
    <description>Vertical join of Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2012 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "fill": {"description": "Select if columns that are not represented in all Tables should be complemented", "editor": null, "label": "Complement missing columns", "order": 0, "type": "boolean", "value": true}, "fill_strategy": {"description": "When \"Complement with nan or empty string\" is selected missing columns will be replaced by columns of nan or empty strings. When \"Mask missing values\" is selected missing columns will be result in masked values", "label": "Complement strategy", "mode": "selected", "order": 1, "passthrough": false, "type": "list", "list": ["Complement with nan or empty string", "Mask missing values"], "value": [1], "value_names": ["Mask missing values"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}, "output_index": {"description": "Specify name for output index column. If left empty, no index column will be created", "label": "Output index", "order": 2, "type": "string", "value": "", "editor": {"placeholder": "(none)", "type": "lineedit"}}, "minimum_increment": {"description": "Specify the increment in the outgoing index column for tables with no rows. Either 1 or 0.", "label": "Increment for empty tables", "order": 3, "type": "integer", "value": 1, "editor": {"max": 1, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{bab8558e-12fa-462e-8b27-3c2f06a8d292}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{7d908340-7cb9-426e-8483-0e6591d73e30}">
        <label>Joined Tables</label>
        <description>Joined Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.importtable" uuid="{ef088889-bc1c-43c4-b809-fd634698e594}" x="1925.0" y="2150.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "active_importer": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "Table"}, "custom_importer_data": {"label": "", "order": 1, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"type": "group", "description_row": {"description": "The row where the descriptions are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "order": 0, "type": "integer", "value": 2, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "data_end_row": {"description": "The last data row.", "label": "", "order": 0, "type": "integer", "value": 0, "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}}, "source_coding": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "utf_8"}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "editor": null, "label": "", "order": 0, "type": "string", "value": " "}, "header_row": {"description": "The row where the headers are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "double_quotations": {"description": "Remove double quotations in importation.", "editor": null, "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "order": 0, "type": "integer", "value": 1, "editor": {"max": 500, "min": -500, "step": 1, "type": "spinbox"}}, "delimiter": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ";"}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "units": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "unit_row": {"description": "The row where the units are located.", "label": "", "order": 0, "type": "integer", "value": 16, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "mode": "selected", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": ["Raise Exceptions"], "editor": {"type": "combobox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": ["Read to the end of file"], "editor": {"type": "combobox", "options": []}}}, "HDF5": {"type": "group", "path_list": {"description": "The paths selected to import data from.", "label": "Selected paths", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"type": "combobox"}}}, "MAT": {"label": "", "type": "group", "data_end_row": {"description": "The data rows.", "label": "", "type": "integer", "value": 0, "editor": {"max": 9999999, "min": 0, "step": 1, "type": "spinbox"}}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "type": "integer", "value": 1, "editor": {"max": 99999, "min": 1, "step": 1, "type": "spinbox"}}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "type": "boolean", "value": true}, "exceptions": {"description": "Select method to handle eventual errors", "label": "How to handle failed importation:", "mode": "selected", "passthrough": false, "type": "list", "list": ["Raise Exceptions", "Partially read file", "Read file without delimiters"], "value": [0], "value_names": ["Raise Exceptions"], "editor": {"type": "combobox", "options": []}}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "type": "integer", "value": 1, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": ["Read to the end of file"], "editor": {"type": "combobox", "options": []}}}, "SQL": {"type": "group", "join_columns": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "table_names": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [null], "value": [], "value_names": []}, "custom_query": {"description": "", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "where_comparison_combo": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["=", "&lt;", "&gt;", "&gt;=", "&lt;=", "!=", " LIKE ", " GLOB ", " BETWEEN "], "value": [0], "value_names": ["="]}, "where_condition": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ""}, "where_column_combo": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": ["default"], "editor": {"type": "combobox"}}, "lineedit_query": {"description": "", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "join_tables": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "preview_query": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ""}, "table_columns": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "table_query": {"description": "", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "where_add_comparison": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ""}, "query_str": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": ""}, "where_condition_list": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}, "join_column_selection": {"description": "", "editor": null, "label": "", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": []}}, "Swegon": {"label": "", "type": "group", "apply_mul_div": {"description": "Directly applies the multiplier/divider in the signal meta data. Also removes them from column attributes", "editor": null, "label": "Apply multiplier/divider", "type": "boolean", "value": true}}, "Table": {"type": "group"}, "XLS": {"type": "group", "description_row": {"description": "The row where the descriptions are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "transposed": {"description": "Transpose the data.", "editor": null, "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "order": 0, "type": "integer", "value": 2, "editor": {"max": 500, "min": 1, "step": 1, "type": "spinbox"}}, "data_end_row": {"description": "The last data row.", "label": "", "order": 0, "type": "integer", "value": 0, "editor": {"max": 500, "min": 0, "step": 1, "type": "spinbox"}}, "worksheet_name": {"description": "The worksheet to import from.", "label": "Select worksheet", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [], "value_names": [], "editor": {"type": "combobox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "header_row": {"description": "The row where the headers are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "units": {"description": "File has headers.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "editor": null, "label": "", "order": 0, "type": "boolean", "value": true}, "unit_row": {"description": "The row where the units are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "read_selection": {"description": "Select how to read the data", "label": "", "mode": "selected", "passthrough": false, "type": "list", "list": ["Read to the end of file", "Read specified number of rows", "Read to specified number of rows from the end"], "value": [0], "value_names": ["Read to the end of file"], "editor": {"type": "combobox", "options": []}}}}, "fail_strategy": {"description": "Decide how failure to import a file should be handled.", "label": "Action on import failure", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["Exception", "Create Empty Entry"], "value": [0], "value_names": ["Exception"], "editor": {"display": null, "include_empty": false, "type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="" scheme="text" type="datasource" type_base="datasource" uuid="{ad354d4a-cfe6-490d-81f6-893de733aec5}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{a6110527-3af5-4c54-98c2-a78f1d05efe3}">
        <label>Imported Table</label>
        <description>Imported Table</description>
      </output>
    </ports>
  </node>
  <connection type="datasource" uuid="{0609e79e-0b6f-4e1d-b74c-cd93f177bbf9}">
    <source node="{badcd35d-a61c-40c6-9cee-9262a6dfc51b}" port="{908646a8-cc5a-40f4-8417-43764193e3c6}"/>
    <destination node="{327ec1e9-84eb-45fa-94f2-86020e063369}" port="{16385eb4-6304-4d22-95b2-bfb66fe09fe4}"/>
  </connection>
  <connection type="table" uuid="{06b2b070-28ac-4d0f-94e2-31a510d67bbe}">
    <source node="{d7822564-f045-4531-a1cf-7d365842b19f}" port="{7d908340-7cb9-426e-8483-0e6591d73e30}"/>
    <destination node="{9098c3b0-b357-45a4-a16d-c4fbe787bca2}" port="{007c4e62-0fdf-4cf7-b56d-63d1ec56f002}"/>
  </connection>
  <connection type="table" uuid="{08fd6fe1-83f2-4398-9289-035d54a08a53}">
    <source node="{22b90285-3177-4222-978a-15696bb7d49c}" port="{c9ae7441-4bbf-4b1a-a03a-fba693662a0a}"/>
    <destination node="{3f4c60f7-50d6-44b9-9200-5f989e76de19}" port="{265469a6-142a-4882-b866-f53c7c85f738}"/>
  </connection>
  <connection type="datasource" uuid="{14c9792b-37e1-45f4-9309-552a5ba4e13d}">
    <source node="{94d24eae-764f-49b6-a990-4e29589e007e}" port="{74341a1f-4ebe-4242-90b8-864edc7802fa}"/>
    <destination node="{77fce09d-e669-49db-8302-afa73a5bbafe}" port="{48c78588-c2fc-4e61-a4ba-5120be1d5bfa}"/>
  </connection>
  <connection type="table" uuid="{24e718d8-c72c-4801-a44c-cf0c093951b2}">
    <source node="{ef088889-bc1c-43c4-b809-fd634698e594}" port="{a6110527-3af5-4c54-98c2-a78f1d05efe3}"/>
    <destination node="{af519246-31c3-4bbb-a7cc-5d07d2a3dc91}" port="{9c494841-4006-4f45-8921-ed1d7bb35278}"/>
  </connection>
  <connection type="[table]" uuid="{36258635-a1eb-4bfd-9e31-0443d22fb237}">
    <source node="{af519246-31c3-4bbb-a7cc-5d07d2a3dc91}" port="{67815b64-7692-49a8-82df-5daca6d54296}"/>
    <destination node="{22b90285-3177-4222-978a-15696bb7d49c}" port="{b9da60d8-afb1-4769-b201-16b2215fd432}"/>
  </connection>
  <connection type="table" uuid="{3cf31240-0f00-4eb4-b8e4-8a9cd5207f14}">
    <source node="{16c4320d-74c7-4acb-be36-a6f0872713e9}" port="{e3325610-ddee-4112-9518-53df542341fe}"/>
    <destination node="{d2603c0d-5082-48c4-8e8c-e2030682ef7e}" port="{ad8b9c36-0bfd-441b-a88d-e78c2e5c8876}"/>
  </connection>
  <connection type="[table]" uuid="{41109cfb-ca06-4025-a894-f9f429288150}">
    <source node="{d2603c0d-5082-48c4-8e8c-e2030682ef7e}" port="{ef97ddb1-bfe0-49e7-a854-60a5bc3d73a4}"/>
    <destination node="{d7822564-f045-4531-a1cf-7d365842b19f}" port="{bab8558e-12fa-462e-8b27-3c2f06a8d292}"/>
  </connection>
  <connection type="table" uuid="{7259d23f-936a-4c09-ae49-9fb4c2051b24}">
    <source node="{77fce09d-e669-49db-8302-afa73a5bbafe}" port="{823fdffc-fe80-40e3-8eb7-fe7fc4648f58}"/>
    <destination node="{3f4c60f7-50d6-44b9-9200-5f989e76de19}" port="{a24aa090-c38f-40ec-8547-b3446042e78e}"/>
  </connection>
  <connection type="table" uuid="{72d47199-312f-4694-9b82-d53ec8f1517f}">
    <source node="{327ec1e9-84eb-45fa-94f2-86020e063369}" port="{ed5cb96e-d5a4-4113-983c-4ff2cefdb4c5}"/>
    <destination node="{9098c3b0-b357-45a4-a16d-c4fbe787bca2}" port="{8c1194b9-8f3f-4c44-a0c2-3e0d5718afd8}"/>
  </connection>
  <connection type="datasource" uuid="{d8416738-dec9-4615-8311-7e9d7f5b0d66}">
    <source node="{579a9948-d805-4997-a0a3-128feace5f07}" port="{3b18cb41-786a-4e85-8d13-53975f83bfe5}"/>
    <destination node="{ef088889-bc1c-43c4-b809-fd634698e594}" port="{ad354d4a-cfe6-490d-81f6-893de733aec5}"/>
  </connection>
  <connection type="datasource" uuid="{f216fe10-addd-4563-9fc2-3f90dff46f81}">
    <source node="{307eb36c-0e27-4571-95bb-c5bd07209c1e}" port="{053fcbe1-202f-4d75-87da-e01a7439a044}"/>
    <destination node="{16c4320d-74c7-4acb-be36-a6f0872713e9}" port="{46b4f81b-833b-48d2-9ba8-7b48ed6434db}"/>
  </connection>
  <text color="Beige" height="50.0" uuid="{65525e9a-3708-4c54-8b51-ea8a4a460a6d}" width="125.0" x="1550.0" y="1950.0">Local maxima</text>
  <text color="Beige" height="50.0" uuid="{54509ed5-a753-4974-93bc-3b2f35bb7b27}" width="125.0" x="1550.0" y="2200.0">Wavelet</text>
</flow>
