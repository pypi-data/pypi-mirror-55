<?xml version='1.0' encoding='ASCII'?>
<flow xmlns="http://www.sysess.org/sympathyfordata/workflow/1.0" cls="Flow" height="50.0" id="" is_locked="False" uuid="{032a810c-6ba8-4412-914c-e32aeba27232}" width="50.0" x="0.0" y="0.0">
  <label>table.syx</label>
  <description></description>
  <author>Unknown</author>
  <copyright></copyright>
  <version>1.0</version>
  <min_version></min_version>
  <aggregation type="json">{}</aggregation>
  <libraries type="json">[]</libraries>
  <pythonpaths type="json">[]</pythonpaths>
  <overrides type="json">{}</overrides>
  <environment type="json">{}</environment>
  <parameters type="json">{"environment": {}}</parameters>
  <ports/>
  <flow cls="Flow" height="50.0" id="" is_locked="False" uuid="{2b36f0b8-6b08-4d3f-b5b0-dcdf6bfc347a}" width="50.0" x="1800.0" y="1825.0">
    <label>Delete files</label>
    <description></description>
    <author></author>
    <copyright></copyright>
    <version></version>
    <min_version></min_version>
    <aggregation type="json">null</aggregation>
    <libraries type="json">[]</libraries>
    <pythonpaths type="json">[]</pythonpaths>
    <overrides type="json">{}</overrides>
    <environment type="json">{}</environment>
    <parameters type="json">{"environment": {}}</parameters>
    <ports>
      <input index="0" key="Port" optional="False" parent="True" scheme="text" type="[datasource]" uuid="{de269007-ceed-4131-8b48-f2cc824aa156}" x="2441.0" y="1840.0">
        <label>Port</label>
        <description>Port</description>
      </input>
    </ports>
    <flow cls="Lambda" height="50.0" id="" is_locked="False" uuid="{aa1f9755-504d-402c-b3a6-e1fc0e405501}" width="50.0" x="2625.0" y="1750.0">
      <label>New Lambda 0</label>
      <description></description>
      <author></author>
      <copyright></copyright>
      <version></version>
      <min_version></min_version>
      <aggregation type="json">null</aggregation>
      <libraries type="json">[]</libraries>
      <pythonpaths type="json">[]</pythonpaths>
      <overrides type="json">{}</overrides>
      <environment type="json">{}</environment>
      <parameters type="json">{"environment": {}}</parameters>
      <ports>
        <input index="0" key="Port" optional="False" parent="False" scheme="hdf5" type="datasource" uuid="{fbde909f-740e-447b-b070-bf2b57df4434}" x="1900.0" y="2000.0">
          <label>Port</label>
          <description>Port</description>
        </input>
        <output index="0" key="Port" optional="False" parent="False" scheme="text" type="datasource" uuid="{f387e488-edc1-4d2e-8827-8da2fd87c230}" x="2100.0" y="2000.0">
          <label>Port</label>
          <description>Port</description>
        </output>
      </ports>
      <basic_ports>
        <output key="Function" scheme="hdf5" type="datasource -&gt; datasource" type_base="&lt;a&gt;" uuid="{d23ab578-bf14-48d4-975a-461c8db6632b}">
          <label>Lambda function</label>
          <description>Lambda function</description>
        </output>
      </basic_ports>
      <node id="org.sysess.sympathy.files.deletefile" uuid="{1fa9ff20-a1a7-4721-a631-4d7642636221}" x="2000.0" y="2000.0">
        <label>Delete file</label>
        <description>Delete a file</description>
        <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;Andreas T&#229;gerud&lt;andreas.tagerud@combine.se&gt;</author>
        <copyright>(C) 2016-2017 Combine Control Systems AB</copyright>
        <version>1.0</version>
        <parameters type="json">{"type": "group"}</parameters>
        <ports>
          <input key="port1" scheme="hdf5" type="datasource" type_base="datasource" uuid="{825b55bc-3515-4fbf-9b42-7e732df70ec8}">
            <label>File to delete</label>
            <description>File to delete</description>
          </input>
          <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{d50f091a-6094-4968-b46e-1e157f946450}">
            <label>Path to deleted file</label>
            <description>Path to deleted file</description>
          </output>
        </ports>
      </node>
      <connection type="datasource" uuid="{6a0ee9be-b894-49d3-9002-eb20fd7a12cd}">
        <source node="{aa1f9755-504d-402c-b3a6-e1fc0e405501}" port="{fbde909f-740e-447b-b070-bf2b57df4434}"/>
        <destination node="{1fa9ff20-a1a7-4721-a631-4d7642636221}" port="{825b55bc-3515-4fbf-9b42-7e732df70ec8}"/>
      </connection>
      <connection type="datasource" uuid="{cb4f3f84-ab24-4700-8793-1410e1a26a38}">
        <source node="{1fa9ff20-a1a7-4721-a631-4d7642636221}" port="{d50f091a-6094-4968-b46e-1e157f946450}"/>
        <destination node="{aa1f9755-504d-402c-b3a6-e1fc0e405501}" port="{f387e488-edc1-4d2e-8827-8da2fd87c230}"/>
      </connection>
    </flow>
    <node id="org.sysess.builtin.map" uuid="{d625ac1c-8d1c-4337-8280-0c9cad0f2646}" x="2825.0" y="1800.0">
      <label>Map</label>
      <description>Map Lambda function over each element in argument list</description>
      <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
      <copyright>(C) 2015-2016 Combine Control Systems AB</copyright>
      <version>1.0</version>
      <parameters type="json">{"type": "group", "fail_strategy": {"description": "Decide how failure to process an item should be handled.", "label": "Action on exception", "order": 0, "passthrough": false, "type": "list", "list": ["Error", "Create Empty Item", "Skip Item"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
      <ports>
        <input key="Function" scheme="hdf5" type="datasource -&gt; datasource" type_base="&lt;a&gt; -&gt; &lt;b&gt;" uuid="{3bcaf586-080e-485e-8d61-d98357baa54c}">
          <label>Lambda Function to Map</label>
          <description>Lambda Function to Map</description>
        </input>
        <input key="List" scheme="text" type="[datasource]" type_base="[&lt;a&gt;]" uuid="{ea43d2b5-2185-4998-aa47-99da3422b23f}">
          <label>Argument List</label>
          <description>Argument List</description>
        </input>
        <output key="List" scheme="hdf5" type="[datasource]" type_base="[&lt;b&gt;]" uuid="{bec41edd-7857-4a74-9259-245484fecf46}">
          <label>Output List</label>
          <description>Output List</description>
        </output>
      </ports>
    </node>
    <connection type="[datasource]" uuid="{296ada7d-2494-4a5a-af75-e0ad9862aca7}">
      <source node="{2b36f0b8-6b08-4d3f-b5b0-dcdf6bfc347a}" port="{de269007-ceed-4131-8b48-f2cc824aa156}"/>
      <destination node="{d625ac1c-8d1c-4337-8280-0c9cad0f2646}" port="{ea43d2b5-2185-4998-aa47-99da3422b23f}"/>
    </connection>
    <connection type="datasource -&gt; datasource" uuid="{a2a06853-02d7-4ffb-b7cf-1009bb3a6164}">
      <source node="{aa1f9755-504d-402c-b3a6-e1fc0e405501}" port="{d23ab578-bf14-48d4-975a-461c8db6632b}"/>
      <destination node="{d625ac1c-8d1c-4337-8280-0c9cad0f2646}" port="{3bcaf586-080e-485e-8d61-d98357baa54c}"/>
    </connection>
  </flow>
  <node id="org.sysess.sympathy.data.table.matchtwotables" uuid="{00db47c6-0d89-4252-b25f-eb9801bb14d2}" x="1800.0" y="1900.0">
    <label>Match Table Length</label>
    <description>Match the column lengths of two Tables.</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "fill": {"description": "", "label": "Extend values", "order": 0, "passthrough": false, "type": "list", "list": ["Last value", "0.0 or empty string", "np.NaN or empty string"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}</parameters>
    <ports>
      <input key="guide" scheme="hdf5" type="table" type_base="table" uuid="{55efea9a-06dd-4f5e-ade7-6e3eef8c6fcb}">
        <label>Guide</label>
        <description>Guide</description>
      </input>
      <input key="input" scheme="hdf5" type="table" type_base="table" uuid="{cb60d510-be58-4143-9b75-e47703808cfe}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="output" scheme="hdf5" type="table" type_base="table" uuid="{ddf1452c-5d87-4e6e-a02d-a969b4c52aea}">
        <label>Length matched Table</label>
        <description>Length matched Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.hsplittablenode" uuid="{02008cb9-26f4-4c47-8e37-d7b835c5d14c}" x="2300.0" y="2525.0">
    <label>HSplit Table</label>
    <description>Split a Table into multiple Tables by columns, every column becomes a new table.</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{69347d2a-f020-4014-8b62-bf6536bc13de}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{f8546fa9-5be1-4c33-a4c5-30f9c2153eb8}">
        <label>Joined Tables</label>
        <description>Joined Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.hjointablessingle" uuid="{19be39c0-d195-4e66-a8e3-9412d4e127bb}" x="2175.0" y="2525.0">
    <label>Horisontal join of elements in a list of Tables.</label>
    <description>HJoin Tables to Table</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{72597f65-e720-4d23-a721-d65d8e947ae4}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{3f6116e8-8d41-4894-bb99-d112d5756e6e}">
        <label>Table with horizontally joined data from the incoming list of Tables.</label>
        <description>Table with horizontally joined data from the incoming list of Tables.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.extendlist" uuid="{20fa45b8-b72f-42b7-8dff-68c10cf9d5ea}" x="2050.0" y="2525.0">
    <label>Extend List</label>
    <description>Extend a list</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{5fa01d23-694d-4321-a222-4e80b4338dee}">
        <label>List that will be added</label>
        <description>List that will be added</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{1cadda55-6b08-4a1a-9f56-e495d77ec19b}">
        <label>List that will be added</label>
        <description>List that will be added</description>
      </input>
      <output key="output" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{62c0bd5e-2deb-4eb6-ba0e-20cd302ea92e}">
        <label>The extended List</label>
        <description>The extended List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" uuid="{24889e63-a12f-4342-be9e-8714c4698aa1}" x="2050.0" y="1575.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{56fd1d3a-9a3d-440d-b455-b4dbc5c59152}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{3d41b02b-b0a7-49ea-a82d-6d8cf6ff9ae6}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.table2adaf" uuid="{2baae8c1-3e99-4c3b-b6dc-76ec19700dda}" x="1675.0" y="2300.0">
    <label>Table2ADAF</label>
    <description>Export content of Table to specified container in ADAF.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "export_to_group": {"description": "Group to put table data.", "label": "Export to group", "order": 0, "passthrough": false, "type": "list", "list": ["Meta", "Result", "Time series"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "system": {"description": "", "label": "Time series system name", "order": 1, "type": "string", "value": "system_48592"}, "tb": {"description": "", "label": "Time basis column", "order": 2, "passthrough": false, "type": "list", "list": ["0", "1"], "value": [0], "value_names": ["0"], "editor": {"filter": true, "type": "listview"}}, "raster": {"description": "", "label": "Time series raster name", "order": 2, "type": "string", "value": "0"}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{b4de6bee-5267-4d7a-a932-c76a9b5f4330}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port1" scheme="hdf5" type="adaf" type_base="adaf" uuid="{70e6d36b-1cc1-40a1-81d7-d8f5af0d2cbc}">
        <label>ADAF with data in input Table</label>
        <description>ADAF with data in input Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.sorttables" uuid="{2c16a05a-dabd-4269-b8dd-cff5a711791f}" x="2175.0" y="1975.0">
    <label>Sort Tables</label>
    <description>Sort table rows according to ascending/descending order of a sort
    column.
    </description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;</author>
    <copyright>(c) 2013 Volvo Car Corporation</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "column": {"description": "Column to sort", "label": "Sort column", "order": 0, "passthrough": false, "type": "list", "list": ["1", "0"], "value": [1], "value_names": ["0"], "editor": {"filter": true, "selection": "single", "type": "listview"}}, "sort_order": {"description": "Sort order", "label": "Sort order", "order": 1, "passthrough": false, "type": "list", "list": ["Ascending", "Descending"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}</parameters>
    <ports>
      <input key="Input" scheme="hdf5" type="[table]" type_base="[table]" uuid="{35818c25-e60d-4fcf-9792-e4957d02e3f3}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="Output" scheme="hdf5" type="[table]" type_base="[table]" uuid="{926a63e1-6a5f-4e53-9c05-3b673fb882ea}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.tablevaluesearchreplacewithtable" uuid="{2fef53d9-c9ab-44d9-be53-f8776455fb46}" x="2175.0" y="1725.0">
    <label>Replace values in Table with Table</label>
    <description>Searches for and replaces values in specified columns using a table</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;, Andreas T&#229;gerud &lt;andreas.tagerud@combine.se&gt;</author>
    <copyright>(c) 2017 System Engineering Society</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "column": {"description": "Select in which to perform replacement", "label": "Column to replace values in", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["0"], "value": [0], "value_names": ["0"], "editor": {"filter": true, "mode": true, "selection": "multi", "type": "listview"}}, "find": {"description": "Select which column contains search expressions", "label": "Column with search expressions", "mode": "selected", "order": 1, "passthrough": false, "type": "list", "list": ["src", "0"], "value": [0], "value_names": ["src"], "editor": {"filter": true, "selection": "", "type": "listview"}}, "replace": {"description": "Select which column contains replacements", "label": "Column with replace expressions", "mode": "selected", "order": 2, "passthrough": false, "type": "list", "list": ["src", "0"], "value": [1], "value_names": ["0"], "editor": {"filter": true, "selection": "", "type": "listview"}}, "literal": {"description": "Perform regex replacements in string columns, i.e., columns with types text and bytes, other columns are ignored. Disable this option to replace full values, without using regex across all types of columns.", "editor": null, "label": "Text replacement only (using regex)", "order": 3, "type": "boolean", "value": true}, "ignore_case": {"description": "Ignore case when searching", "editor": null, "label": "Ignore case", "order": 4, "type": "boolean", "value": false}}</parameters>
    <ports>
      <input key="expressions" scheme="hdf5" type="table" type_base="table" uuid="{c3bd21da-860d-458f-a3a9-2d3197fb4aa1}">
        <label>Expressions</label>
        <description>Expressions</description>
      </input>
      <input key="data" scheme="hdf5" type="table" type_base="table" uuid="{6fa9ab24-3b7b-4b9f-b180-e54db46cc2c2}">
        <label>Table Data</label>
        <description>Table Data</description>
      </input>
      <output key="data" scheme="hdf5" type="table" type_base="table" uuid="{1dfc60a5-f8c1-400b-9871-a26b6070434e}">
        <label>Table with replaced values</label>
        <description>Table with replaced values</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.create.createtable" uuid="{34b5037b-9f9d-4d94-840a-c8348c29b8ce}" x="1675.0" y="1575.0">
    <label>Manually Create Table</label>
    <description></description>
    <author>Magnus Sand&#233;n &lt;magnus.sanden@combine.se&gt;</author>
    <copyright>(c) 2016 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "json_table": {"description": "Configuration window", "editor": null, "label": "GUI", "order": 0, "type": "string", "value": "[[\"text\", \"U\", [null, \"\"]], [\"float\", \"f\", [null, 0.0]], [\"int\", \"i\", [null, 0]], [\"bool\", \"b\", [null, false]], [\"datetime\", \"M\", [null, \"2017-04-20T00:00:00\"]]]"}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{e5414b05-c4c2-4237-9184-6dfa69f6994e}">
        <label>Manually created table</label>
        <description>Manually created table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.importtablemultiple" uuid="{3b9f01f4-a08c-4242-9849-b658f2511aba}" x="1675.0" y="1675.0">
    <label>Tables</label>
    <description>Import datasources as Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "custom_importer_data": {"label": "", "order": 0, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"type": "group", "description_row": {"description": "The row where the descriptions are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": -1, "min": 1, "step": 1, "type": "spinbox"}}, "source_coding": {"description": "", "label": "", "order": 0, "type": "string", "value": "utf_8"}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": -1, "min": 1, "step": 1, "type": "spinbox"}}, "data_end_row": {"description": "The last data row.", "label": "", "order": 0, "type": "integer", "value": -1, "editor": {"max": -1, "min": 1, "step": 1, "type": "spinbox"}}, "transposed": {"description": "Transpose the data.", "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "label": "", "order": 0, "type": "string", "value": ""}, "header_row": {"description": "The row where the headers are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": -1, "min": 1, "step": 1, "type": "spinbox"}}, "delimiter": {"description": "", "label": "", "order": 0, "type": "string", "value": ";"}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "order": 0, "type": "integer", "value": 1, "editor": {"max": -1, "min": 1, "step": 1, "type": "spinbox"}}, "double_quotations": {"description": "Remove double quotations in importation.", "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20, "editor": {"max": -1, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "unit_row": {"description": "The row where the units are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": -1, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}}, "HDF5": {"type": "group", "path_list": {"description": "The paths selected to import data from.", "label": "Selected paths", "order": 0, "passthrough": false, "type": "list", "list": ["/0"], "value": [], "value_names": [], "editor": {"type": "combobox"}}}, "SQL": {"type": "group"}, "Table": {"type": "group"}, "XLS": {"type": "group", "description_row": {"description": "The row where the descriptions are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "transposed": {"description": "Transpose the data.", "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "order": 0, "type": "integer", "value": 2, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "data_end_row": {"description": "The last data row.", "label": "", "order": 0, "type": "integer", "value": -1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "worksheet_name": {"description": "The worksheet to import from.", "label": "Select worksheet", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "header_row": {"description": "The row where the headers are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "unit_row": {"description": "The row where the units are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}}}, "active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "Auto"}}</parameters>
    <ports>
      <input key="port1" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{67a374ac-9f17-4819-819a-ed5a08c8c4fe}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{eefb3d98-d6f0-46d1-95da-b9bbcc2b503b}">
        <label>Imported Tables</label>
        <description>Imported Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.hjointables" uuid="{4005c7c2-c783-4397-aa4e-61d0679abb22}" x="2050.0" y="2600.0">
    <label>HJoin Tables</label>
    <description>Pairwise horizontal join of two list of Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{37f8af51-efd1-46ca-8b09-8996ee7667d0}">
        <label>Input Tables 1</label>
        <description>Input Tables 1</description>
      </input>
      <input key="port2" scheme="hdf5" type="[table]" type_base="[table]" uuid="{070d9a06-fe35-453a-9bc6-99b9109242bf}">
        <label>Input Tables 2</label>
        <description>Input Tables 2</description>
      </input>
      <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{2dfd87b8-b432-4526-ade7-9ac1dd6c1166}">
        <label>List of Tables with pairwise horizontally joined data from the incoming lists of Tables.</label>
        <description>List of Tables with pairwise horizontally joined data from the incoming lists of Tables.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.vjointablenodelist" uuid="{40848862-1101-4b28-9d3e-badea1bdc423}" x="2050.0" y="2050.0">
    <label>VJoin Table Lists</label>
    <description>Pairwise vertical join of two list of Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "minimum_increment": {"description": "Specify the increment in the outgoing index column at the existence of tables with the number of rows equal to zero.", "label": "Increment in index column", "order": 0, "type": "integer", "value": 0, "editor": {"max": 1, "min": 0, "step": 1, "type": "spinbox"}}, "fill": {"description": "Select if columns that are not represented in all Tables to be complemented with either NaNs or empty strings.", "label": "Complement missing columns", "order": 0, "type": "boolean", "value": false}, "input_index": {"description": "Specify name for input index column. Can be left empty.", "label": "Input index", "order": 10, "type": "string", "value": "VJoin-index"}, "output_index": {"description": "Specify name for output index column. Can be left empty.", "label": "Output index", "order": 11, "type": "string", "value": "VJoin-index"}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{fdbe5ce0-5a51-4f0a-900b-7b4bc6201412}">
        <label>Input Tables 1</label>
        <description>Input Tables 1</description>
      </input>
      <input key="port2" scheme="hdf5" type="[table]" type_base="[table]" uuid="{8ac711a2-bd27-455b-9611-f2ffe462abbc}">
        <label>Input Tables 2</label>
        <description>Input Tables 2</description>
      </input>
      <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{908c565e-5045-47be-a2b1-442f2a332b16}">
        <label>Joined Tables</label>
        <description>Joined Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.uniquetables" uuid="{40aa611c-2646-4d24-9458-7d71133804b5}" x="2050.0" y="2275.0">
    <label>Unique Tables</label>
    <description>Filter out rows in Tables for which a selected column has repeated
    values.
    </description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "column": {"description": "Column to use as uniqueness filter", "label": "Column to filter by", "order": 0, "passthrough": false, "type": "list", "list": ["0", "1"], "value": [0], "value_names": ["0"], "editor": {"filter": true, "selection": "single", "type": "listview"}}}</parameters>
    <ports>
      <input key="Input" scheme="hdf5" type="[table]" type_base="[table]" uuid="{5a4028e6-4016-4899-af5f-172c35f6931e}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="Output" scheme="hdf5" type="[table]" type_base="[table]" uuid="{1bcd4484-5143-41d9-b47c-9cd354a95666}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.renametablecolumns" uuid="{444a765b-f270-4ffe-93be-66e888b1d7b6}" x="1925.0" y="2200.0">
    <label>Rename Tables Columns</label>
    <description>Rename the Table columns by using regular expressions.</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "src_expr": {"description": "Specify the regular expression which will be replaced", "label": "Search expression", "order": 3, "type": "string", "value": "(.*)"}, "dst_expr": {"description": "Specify the regular expression for replacement", "label": "Replacement expression", "order": 4, "type": "string", "value": "New_\\1"}}</parameters>
    <ports>
      <input key="Input" scheme="hdf5" type="[table]" type_base="[table]" uuid="{a92f36f6-e592-4dce-8976-07c0ddbfb734}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="Output" scheme="hdf5" type="[table]" type_base="[table]" uuid="{a23fd83f-2875-4669-9b70-df0c3c643e3b}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtable" uuid="{4d3573d2-efa1-4099-a3ec-77f842d23624}" x="1550.0" y="2300.0">
    <label>Random Table</label>
    <description>Random Table generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 0, "type": "integer", "value": 2, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 2, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{2115d713-5cb4-405a-9433-76de049efc02}">
        <label>Table with random numbers. The specifications of the Table are declared in the configuration.</label>
        <description>Table with random numbers. The specifications of the Table are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.slice.slicedatatables" uuid="{52c8a27f-7818-4035-b7a3-16b54eb5f431}" x="1925.0" y="2600.0">
    <label>Slice data Tables</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "limit": {"description": "", "editor": null, "label": "", "order": 0, "type": "integer", "value": 100}, "group_index": {"description": "", "editor": null, "label": "", "order": 0, "type": "integer", "value": 0}, "slice": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[:2]"}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{3fdc5364-e620-4be1-a3a1-3e6c82005565}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <output key="port2" scheme="hdf5" type="[table]" type_base="[table]" uuid="{28dafc3f-8c24-4500-ac2e-ffbe0c6fdc78}">
        <label>Sliced output Tables</label>
        <description>Sliced output Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.converttablecolumns" uuid="{56e2e94e-a45b-4cfb-9411-a4dfdde5aacf}" x="1800.0" y="1750.0">
    <label>Convert columns in Table</label>
    <description>Convert selected columns in Table to new data types.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "out_type_list": {"description": "Selected types to use", "label": "Convert types", "order": 0, "passthrough": false, "type": "list", "list": [], "value": ["unicode"], "value_names": [], "editor": {"selection": "multi", "type": "listview"}}, "in_column_list": {"description": "Select the columns to use", "label": "Select columns", "order": 1, "passthrough": false, "type": "list", "list": ["0"], "value": [], "value_names": [], "editor": {"selection": "multi", "type": "listview"}}, "out_column_list": {"description": "Selected columns to convert", "label": "Convert columns", "order": 2, "passthrough": false, "type": "list", "list": [], "value": ["0"], "value_names": [], "editor": {"selection": "multi", "type": "listview"}}, "in_type_list": {"description": "Select the type to use", "label": "Select type", "order": 3, "passthrough": false, "type": "list", "list": ["unicode", "bool", "datetime", "float", "int", "str"], "value": [0], "value_names": ["unicode"], "editor": {"selection": "single", "type": "listview"}}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{1eeaae16-9452-4e7f-9ec2-eecfd2c43944}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{d5b11a75-0176-4183-a69c-9f50946cf98f}">
        <label>Table with converted columns</label>
        <description>Table with converted columns</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.renamesingletablecolumns" uuid="{5e4a34f7-80f2-48c4-90b1-c84fdc9845d6}" x="1925.0" y="1575.0">
    <label>Rename columns in Table</label>
    <description>Rename the Table columns by using regular expressions.</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "src_expr": {"description": "Specify the regular expression which will be replaced", "editor": null, "label": "Search expression", "order": 0, "type": "string", "value": "0"}, "dst_expr": {"description": "Specify the regular expression for replacement", "editor": null, "label": "Replacement expression", "order": 1, "type": "string", "value": "src"}}</parameters>
    <ports>
      <input key="Input" scheme="hdf5" type="table" type_base="table" uuid="{75f46d7c-9d42-4c8b-a685-98f1737d77fd}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="Output" scheme="hdf5" type="table" type_base="table" uuid="{43547e6b-3788-4c2d-b5bf-1338278ae62e}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.vjointablenode" uuid="{6092f9b9-fbd4-48a1-83c8-d72b93832abb}" x="1675.0" y="2600.0">
    <label>VJoin Table</label>
    <description>Vertical join of two Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "minimum_increment": {"description": "Specify the increment in the outgoing index column at the existence of tables with the number of rows equal to zero.", "label": "Increment in index column", "order": 0, "type": "integer", "value": 0, "editor": {"max": 1, "min": 0, "step": 1, "type": "spinbox"}}, "fill": {"description": "Select if columns that are not represented in all Tables to be complemented with either NaNs or empty strings.", "label": "Complement missing columns", "order": 0, "type": "boolean", "value": false}, "input_index": {"description": "Specify name for input index column. Can be left empty.", "label": "Input index", "order": 10, "type": "string", "value": "VJoin-index"}, "output_index": {"description": "Specify name for output index column. Can be left empty.", "label": "Output index", "order": 11, "type": "string", "value": "VJoin-index"}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{394a6acd-0961-45b4-85ca-ecd15d487edb}">
        <label>Input Table 1</label>
        <description>Input Table 1</description>
      </input>
      <input key="port2" scheme="hdf5" type="table" type_base="table" uuid="{889d1bb8-fbf7-4114-b5f5-ed053297e6c4}">
        <label>Input Table 2</label>
        <description>Input Table 2</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{4b6e348f-eae0-4c0c-92e2-8bec2857c905}">
        <label>Joined Table</label>
        <description>Joined Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.matchtwotablesmultiple" uuid="{61341474-f09e-41ba-885a-0a077217559a}" x="2050.0" y="2125.0">
    <label>Match Tables lengths</label>
    <description>Pairwise match the column lengths of the elements in two lists of Tables.</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "fill": {"description": "", "label": "Extend values", "order": 0, "passthrough": false, "type": "list", "list": ["Last value", "0.0 or empty string", "np.NaN or empty string"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}</parameters>
    <ports>
      <input key="guide" scheme="hdf5" type="[table]" type_base="[table]" uuid="{d1ff3a59-cea3-4769-946d-46dda0f6d65c}">
        <label>List of Tables to match with</label>
        <description>List of Tables to match with</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[table]" uuid="{7945f1ad-c792-4912-aa07-735565044702}">
        <label>List of Tables to cut or extend</label>
        <description>List of Tables to cut or extend</description>
      </input>
      <output key="output" scheme="hdf5" type="[table]" type_base="[table]" uuid="{44a61907-5a30-475d-baf1-4202cefff1b5}">
        <label>Length matched Tables</label>
        <description>Length matched Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.appendlistnew" uuid="{68c8e45f-ce6a-490e-81ca-c7ab246caa5f}" x="1800.0" y="2050.0">
    <label>Append List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{0bc7fc58-b682-4aba-b53f-46dfe5091e27}">
        <label>Appended List</label>
        <description>Appended List</description>
      </input>
      <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{b800be57-d0c8-4d11-8592-9ed5d947cdb6}">
        <label>The Item to be appended</label>
        <description>The Item to be appended</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{83d02325-53e2-4ebf-9b21-5a91d1e519bf}">
        <label>Appended List</label>
        <description>Appended List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.hjointable" uuid="{6e4cc89d-4f75-4057-b23b-8bb885a71390}" x="1800.0" y="2450.0">
    <label>HJoin Table</label>
    <description>Horizontal join of two Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{d37f2c16-98d4-4046-9af1-b0fcb6809f89}">
        <label>Input Table 1</label>
        <description>Input Table 1</description>
      </input>
      <input key="port2" scheme="hdf5" type="table" type_base="table" uuid="{eec4700a-f008-4e4f-bc2a-abc871222e89}">
        <label>Input Table 2</label>
        <description>Input Table 2</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{f20478fe-8d93-481f-aa7d-380603e157a2}">
        <label>Table with horizontally joined data</label>
        <description>Table with horizontally joined data</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.uniquetable" uuid="{7109826a-a514-4a3a-9ec6-f4cd1ae1c922}" x="2050.0" y="1800.0">
    <label>Unique Table</label>
    <description>Filter out rows in Tables for which a selected column has repeated
    values.
    </description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "column": {"description": "Column to use as uniqueness filter", "label": "Column to filter by", "order": 0, "passthrough": false, "type": "list", "list": ["0", "1", "2", "3"], "value": [0], "value_names": ["0"], "editor": {"filter": true, "selection": "single", "type": "listview"}}}</parameters>
    <ports>
      <input key="Input" scheme="hdf5" type="table" type_base="table" uuid="{30f8f667-61ed-46b9-9b06-651044c945ea}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="Output" scheme="hdf5" type="table" type_base="table" uuid="{2e7df97c-3875-4e4e-8030-03e271ba3b75}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.importtable" uuid="{79de32f1-d183-491d-8c35-866d4e9a5e0a}" x="1675.0" y="1750.0">
    <label>Table</label>
    <description>Data source as a table</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "custom_importer_data": {"label": "", "order": 0, "type": "group", "Auto": {"label": "", "order": 0, "type": "group"}, "CSV": {"type": "group", "description_row": {"description": "The row where the descriptions are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": -1, "min": 1, "step": 1, "type": "spinbox"}}, "source_coding": {"description": "", "label": "", "order": 0, "type": "string", "value": "utf_8"}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": -1, "min": 1, "step": 1, "type": "spinbox"}}, "data_end_row": {"description": "The last data row.", "label": "", "order": 0, "type": "integer", "value": -1, "editor": {"max": -1, "min": 1, "step": 1, "type": "spinbox"}}, "transposed": {"description": "Transpose the data.", "label": "Transpose input data", "order": 0, "type": "boolean", "value": false}, "other_delimiter": {"description": "Enter other delimiter than the standard ones.", "label": "", "order": 0, "type": "string", "value": ""}, "header_row": {"description": "The row where the headers are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": -1, "min": 1, "step": 1, "type": "spinbox"}}, "delimiter": {"description": "", "label": "", "order": 0, "type": "string", "value": ";"}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "order": 0, "type": "integer", "value": 1, "editor": {"max": -1, "min": 1, "step": 1, "type": "spinbox"}}, "double_quotations": {"description": "Remove double quotations in importation.", "label": "Remove double quotations", "order": 0, "type": "boolean", "value": false}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20, "editor": {"max": -1, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "unit_row": {"description": "The row where the units are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": -1, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}}, "HDF5": {"type": "group", "path_list": {"description": "The paths selected to import data from.", "label": "Selected paths", "order": 0, "passthrough": false, "type": "list", "list": ["/0"], "value": [], "value_names": [], "editor": {"type": "combobox"}}}, "SQL": {"type": "group"}, "Table": {"type": "group"}, "XLS": {"type": "group", "description_row": {"description": "The row where the descriptions are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "transposed": {"description": "Transpose the data.", "label": "Transpose input", "order": 0, "type": "boolean", "value": false}, "data_start_row": {"description": "The first row where data is stored.", "label": "", "order": 0, "type": "integer", "value": 2, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "data_end_row": {"description": "The last data row.", "label": "", "order": 0, "type": "integer", "value": -1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "worksheet_name": {"description": "The worksheet to import from.", "label": "Select worksheet", "order": 0, "passthrough": false, "type": "list", "list": [], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "preview_start_row": {"description": "The first row where data will review from.", "label": "Preview start row", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "header_row": {"description": "The row where the headers are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "headers": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": true}, "no_preview_rows": {"description": "The number of preview rows to show.", "label": "Number of preview rows", "order": 0, "type": "integer", "value": 20, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}, "descriptions": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "units": {"description": "File has headers.", "label": "", "order": 0, "type": "boolean", "value": false}, "end_of_file": {"description": "Select all rows to the end of the file.", "label": "", "order": 0, "type": "boolean", "value": true}, "unit_row": {"description": "The row where the units are located.", "label": "", "order": 0, "type": "integer", "value": 1, "editor": {"max": 200, "min": 1, "step": 1, "type": "spinbox"}}}}, "active_importer": {"description": "", "label": "", "order": 0, "type": "string", "value": "HDF5"}}</parameters>
    <ports>
      <input key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{1432ebe2-d52b-4723-9a6a-817ab9a0d526}">
        <label>Datasource</label>
        <description>Datasource</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{c2a4db11-eb57-4ede-b5fa-aeb61bf1b848}">
        <label>Imported Table</label>
        <description>Imported Table</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.tables2adafs" uuid="{84d65f6e-6b8f-40ed-b5f2-a87616694cd4}" x="1675.0" y="1975.0">
    <label>Tables2ADAFs</label>
    <description>Convert Tables to ADAFs</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "export_to_group": {"description": "Group to put table data.", "label": "Export to group", "order": 0, "passthrough": false, "type": "list", "list": ["Meta", "Result", "Time series"], "value": [2], "value_names": ["Time series"], "editor": {"type": "combobox"}}, "system": {"description": "", "label": "Time series system name", "order": 1, "type": "string", "value": "system_19075"}, "tb": {"description": "", "label": "Time basis column", "order": 2, "passthrough": false, "type": "list", "list": ["0"], "value": [0], "value_names": ["0"], "editor": {"filter": true, "type": "listview"}}, "raster": {"description": "", "label": "Time series raster name", "order": 2, "type": "string", "value": "0"}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{4d907ee2-a87f-42dc-90f5-0a0df41b5f40}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <output key="port1" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{aa27c43a-e5cc-4dee-8cd2-65b094915eea}">
        <label>ADAFs with data in input Tables</label>
        <description>ADAFs with data in input Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.getitemlist" uuid="{8a740d3e-b74d-4adb-b99f-4a9d2a054b01}" x="1675.0" y="2050.0">
    <label>Get Item List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "index": {"description": "Choose item index in list.", "label": "Index", "order": 0, "passthrough": false, "type": "list", "list": ["0"], "value": [0], "value_names": [], "editor": {"options": null, "type": "combobox"}}}</parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{bee99ce9-b6c8-4900-9a81-c49b087fc7a6}">
        <label>Input List</label>
        <description>Input List</description>
      </input>
      <output key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{c38f6ccc-beed-49bc-b805-64f322a9022e}">
        <label>Output selected Item from List</label>
        <description>Output selected Item from List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" uuid="{91c78b01-b6fc-4625-9549-d1229ad6a585}" x="1800.0" y="2525.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{70d05d1d-1a7f-45e0-b6b3-140ab39519cb}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{70015f44-99a5-42c8-ae3b-db59c1b09505}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.vsplittablenodes" uuid="{94493164-d3be-404d-b23b-8ed97751b132}" x="1675.0" y="2200.0">
    <label>VSplit Tables</label>
    <description>Vertical split of Tables into Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "require_index": {"description": "Require Input Index vector to be present.", "label": "Require input index", "order": 0, "type": "boolean", "value": false}, "remove_fill": {"description": "Remove split columns which contain only NaN or empty strings.", "label": "Remove complement columns", "order": 0, "type": "boolean", "value": false}, "input_index": {"description": "Choose name for input index column. Can be left empty.", "label": "Input Index", "order": 10, "type": "string", "value": "VJoin-index"}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{f1f1b26c-28dd-4877-af8d-062a3f87b90c}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{e3fbb4af-3a63-453a-ab15-2f30cf33c5e8}">
        <label>Split Tables</label>
        <description>Split Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.tablevaluesearchreplacemultiple" uuid="{94abe12f-c0ca-4497-95b8-0eb55218ac01}" x="2175.0" y="1575.0">
    <label>Search and replace values in Tables</label>
    <description>Search and replace values in Tables.</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "columns": {"description": "Select the columns to use perform replacement on", "label": "Select columns", "order": 0, "passthrough": false, "type": "list", "list": ["src"], "value": [0], "value_names": ["src"], "editor": {"filter": true, "selection": "multi", "type": "listview"}}, "find": {"description": "Specify search expression.", "editor": null, "label": "Search expression", "order": 1, "type": "string", "value": "0"}, "replace": {"description": "Specify replace expression.", "editor": null, "label": "Replacement expression", "order": 2, "type": "string", "value": "abc"}, "default": {"description": "Specify default value", "editor": null, "label": "Default value", "order": 3, "type": "string", "value": ""}, "use_default": {"description": "Use default value when not found.", "editor": null, "label": "Use default", "order": 4, "type": "boolean", "value": false}}</parameters>
    <ports>
      <input key="tables" scheme="hdf5" type="[table]" type_base="[table]" uuid="{656feeac-35ca-444f-a012-ee50370fff7f}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <output key="tables" scheme="hdf5" type="[table]" type_base="[table]" uuid="{24667bcb-8ddc-455e-bb26-4e375e20fb45}">
        <label>Tables with replaced values</label>
        <description>Tables with replaced values</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.tables2adafs" uuid="{996c7207-7fdd-47f8-b5a6-4919cb3d9958}" x="1675.0" y="1900.0">
    <label>Tables2ADAFs</label>
    <description>Convert Tables to ADAFs</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "export_to_group": {"description": "Group to put table data.", "label": "Export to group", "order": 0, "passthrough": false, "type": "list", "list": ["Meta", "Result", "Time series"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "system": {"description": "", "label": "Time series system name", "order": 1, "type": "string", "value": "system_44297"}, "tb": {"description": "", "label": "Time basis column", "order": 2, "passthrough": false, "type": "list", "list": ["0"], "value": [0], "value_names": ["0"], "editor": {"filter": true, "type": "listview"}}, "raster": {"description": "", "label": "Time series raster name", "order": 2, "type": "string", "value": "0"}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{bcffdb74-489c-4d45-995d-00e55c78b1b5}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <output key="port1" scheme="hdf5" type="[adaf]" type_base="[adaf]" uuid="{72adb0d7-aeaa-4ade-b385-6f2890dcc99d}">
        <label>ADAFs with data in input Tables</label>
        <description>ADAFs with data in input Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.slice.slicedatatables" uuid="{9a0417d2-be20-4d0c-afcf-a59608d720ab}" x="1675.0" y="2125.0">
    <label>Slice Data Tables</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "limit": {"description": "", "label": "", "order": 0, "type": "integer", "value": 100}, "group_index": {"description": "", "label": "", "order": 0, "type": "integer", "value": 0}, "slice": {"description": "", "label": "", "order": 0, "type": "string", "value": "[:]"}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{40216e21-5e06-4cc8-a163-60f8b86c711f}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <output key="port2" scheme="hdf5" type="[table]" type_base="[table]" uuid="{140e6b2c-9c94-4f98-b71e-4e31abe41e8d}">
        <label>Sliced output Tables</label>
        <description>Sliced output Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.datasources.filedatasource" uuid="{a5850155-a03c-4a06-a988-36f26b400f98}" x="1550.0" y="1750.0">
    <label>Datasource</label>
    <description>Select a data source.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "use_relative_path": {"description": "Use the relative path to the file.", "editor": null, "label": "Use relative path", "order": 0, "type": "boolean", "value": true}, "filename": {"description": "A filename including path if needed", "label": "Filename", "order": 1, "type": "string", "value": "data/import_random.h5", "editor": {"type": "filename", "filter": ["Any files (*)"]}}, "db_driver": {"description": "Database driver to use.", "label": "Database driver", "order": 2, "passthrough": false, "type": "list", "list": ["SQL Server"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "db_servername": {"description": "A valid name to a database server.", "editor": null, "label": "Server name", "order": 3, "type": "string", "value": ""}, "db_databasename": {"description": "The name of the database.", "editor": null, "label": "Database name", "order": 4, "type": "string", "value": ""}, "db_user": {"description": "A valid database user.", "editor": null, "label": "User", "order": 5, "type": "string", "value": ""}, "db_password": {"description": "A valid password for the selected user.", "editor": null, "label": "Password", "order": 6, "type": "string", "value": ""}, "db_connection_string": {"description": "A connection string that will override other settings.", "editor": null, "label": "Connection string", "order": 7, "type": "string", "value": ""}, "datasource_type": {"description": "Type of datasource.", "editor": null, "label": "Datasource type", "order": 999, "passthrough": false, "type": "list", "list": ["File", "Database"], "value": [0], "value_names": []}}</parameters>
    <ports>
      <output key="port1" scheme="text" type="datasource" type_base="datasource" uuid="{632896a9-85ce-4e35-a38d-6a9764468d6f}">
        <label>Datasource with path to file</label>
        <description>Datasource with path to file</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.vjointablenodes" uuid="{a9e5b6dc-48d6-43ba-83f1-dc3175ab0805}" x="1800.0" y="2125.0">
    <label>VJoin Tables</label>
    <description>Vertical join of Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2012 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "minimum_increment": {"description": "Specify the increment in the outgoing index column at the existence of tables with the number of rows equal to zero.", "label": "Increment in index column", "order": 0, "type": "integer", "value": 0, "editor": {"max": 1, "min": 0, "step": 1, "type": "spinbox"}}, "fill": {"description": "Select if columns that are not represented in all Tables to be complemented with either NaNs or empty strings.", "label": "Complement missing columns", "order": 0, "type": "boolean", "value": false}, "input_index": {"description": "Specify name for input index column. Can be left empty.", "label": "Input index", "order": 10, "type": "string", "value": "VJoin-index"}, "output_index": {"description": "Specify name for output index column. Can be left empty.", "label": "Output index", "order": 11, "type": "string", "value": "VJoin-index"}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{ac5cb629-2c39-4eac-a913-b91ee5feee26}">
        <label>Input Tables</label>
        <description>Input Tables</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{a6b98d73-8b59-4b96-baf0-adcd7a6c8e51}">
        <label>Joined Tables</label>
        <description>Joined Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.sorttable" uuid="{b95990df-2538-4870-9a4e-c9655dbb641d}" x="2050.0" y="1900.0">
    <label>Sort Table</label>
    <description>Sort table rows according to ascending/descending order of a sort
    column.
    </description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;</author>
    <copyright>(c) 2013 Volvo Car Corporation</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "column": {"description": "Column to sort", "label": "Sort column", "order": 0, "passthrough": false, "type": "list", "list": ["0", "1", "2", "3"], "value": [0], "value_names": ["0"], "editor": {"filter": true, "selection": "single", "type": "listview"}}, "sort_order": {"description": "Sort order", "label": "Sort order", "order": 1, "passthrough": false, "type": "list", "list": ["Ascending", "Descending"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}</parameters>
    <ports>
      <input key="Input" scheme="hdf5" type="table" type_base="table" uuid="{9abba3ec-284c-49e2-ba55-5039dc04610d}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="Output" scheme="hdf5" type="table" type_base="table" uuid="{06c3bfb7-9b2d-49fd-b856-c717eafeb10d}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.selecttablecolumns" uuid="{bd3b6a67-777d-4876-bf77-6c4945863050}" x="1675.0" y="2525.0">
    <label>Select table columns</label>
    <description>Select columns from input to propagate to output.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;, Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(c) 2013, 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "columns": {"description": "Select the columns which will proceed.", "label": "Select columns", "order": 30, "passthrough": false, "type": "list", "list": ["0", "1"], "value": [0], "value_names": ["0"], "editor": {"buttons": true, "filter": true, "invertbutton": true, "selection": "multi", "type": "listview"}}}</parameters>
    <ports>
      <input key="" scheme="hdf5" type="table" type_base="table" uuid="{fd8fdd59-3e98-4097-8ed9-162fddc4da1b}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="" scheme="hdf5" type="table" type_base="table" uuid="{d1d8eba3-a682-4e52-b2e0-55fb1b53616f}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtables" uuid="{bdfb899b-d5df-44e0-bd2e-f1beb6a7262c}" x="1550.0" y="1900.0">
    <label>Random Tables</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 0, "type": "integer", "value": 4, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 2, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "length": {"description": "The length of table list to be generated.", "label": "Table list length", "order": 0, "type": "integer", "value": 2, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{455a40ba-4180-43fb-8772-cd3951ab34e7}">
        <label>Tables with random numbers. The specifications of the Tables are declared in the configuration.</label>
        <description>Tables with random numbers. The specifications of the Tables are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.list.itemtolist" uuid="{c04e6801-633c-430e-9897-c1cf1cd883ae}" x="1800.0" y="2600.0">
    <label>Item to List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="item" scheme="hdf5" type="table" type_base="&lt;a&gt;" uuid="{4fa311da-036d-410f-a332-0b45f81136c3}">
        <label>Input Item</label>
        <description>Input Item</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{f79b5cba-ef69-4e95-b35c-d67264b7b39e}">
        <label>Item as List</label>
        <description>Item as List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.hjointable" uuid="{c68597e7-973b-4c81-8a4a-1d791121125f}" x="2050.0" y="1675.0">
    <label>HJoin Table</label>
    <description>Horizontal join of two Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{b4976bd2-6c22-48e1-9c74-a84b2fd1f72c}">
        <label>Input Table 1</label>
        <description>Input Table 1</description>
      </input>
      <input key="port2" scheme="hdf5" type="table" type_base="table" uuid="{646d5dbb-e89b-4699-9ba2-8fe9137c8323}">
        <label>Input Table 2</label>
        <description>Input Table 2</description>
      </input>
      <output key="port1" scheme="hdf5" type="table" type_base="table" uuid="{fe561e86-7f51-4930-be1a-035565e4fc3d}">
        <label>Table with horizontally joined data</label>
        <description>Table with horizontally joined data</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtable" uuid="{c751b1da-83b2-493d-af06-9c949f7bc33d}" x="1925.0" y="1800.0">
    <label>Random Table</label>
    <description>Random Table generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 0, "type": "integer", "value": 4, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 4, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="table" type_base="table" uuid="{dac863b3-49d3-436c-82cb-12092d42d643}">
        <label>Table with random numbers. The specifications of the Table are declared in the configuration.</label>
        <description>Table with random numbers. The specifications of the Table are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.slice.slicedatatable" uuid="{d1ab41ba-a5ec-477c-8b2c-c629efe6efe0}" x="1800.0" y="2375.0">
    <label>Slice Data Table</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "limit": {"description": "", "label": "", "order": 0, "type": "integer", "value": 100}, "slice": {"description": "", "label": "", "order": 0, "type": "string", "value": "[:]"}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{0c9a2663-7681-4ef9-b674-8feb69fa1c55}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port2" scheme="hdf5" type="table" type_base="table" uuid="{225b7036-7aa7-40da-ad9c-1b1249682763}">
        <label>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</label>
        <description>Table consisting of the rows that been sliced out from the incoming Table according to the defined pattern. The number of columns are conserved during the slice operation</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.tablevaluesearchreplace" uuid="{db0e4c66-48fa-49ca-91ca-e8176682fea6}" x="1925.0" y="1675.0">
    <label>Search and replace values in Table</label>
    <description>Search and replace values in Table.</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "columns": {"description": "Select the columns to use perform replacement on", "label": "Select columns", "order": 0, "passthrough": false, "type": "list", "list": ["0"], "value": [0], "value_names": ["0"], "editor": {"filter": true, "selection": "multi", "type": "listview"}}, "find": {"description": "Specify search expression.", "editor": null, "label": "Search expression", "order": 1, "type": "string", "value": "0\\.4902.*"}, "replace": {"description": "Specify replace expression.", "editor": null, "label": "Replacement expression", "order": 2, "type": "string", "value": "hej hej"}, "default": {"description": "Specify default value", "editor": null, "label": "Default value", "order": 3, "type": "string", "value": ""}, "use_default": {"description": "Use default value when not found.", "editor": null, "label": "Use default", "order": 4, "type": "boolean", "value": false}}</parameters>
    <ports>
      <input key="table" scheme="hdf5" type="table" type_base="table" uuid="{86080935-3685-4c07-b6c3-00e05d941853}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="table" scheme="hdf5" type="table" type_base="table" uuid="{f4f60f1a-07ba-4d54-92fb-2cf7bc73817a}">
        <label>Table with replaced values</label>
        <description>Table with replaced values</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.matchtwotablesmultiple" uuid="{dd4537c0-661d-479c-a94e-d39e385a0444}" x="2050.0" y="2200.0">
    <label>Match Tables lengths</label>
    <description>Pairwise match the column lengths of the elements in two lists of Tables.</description>
    <author>Greger Cronquist &lt;greger.cronquist@combine.se</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "fill": {"description": "", "label": "Extend values", "order": 0, "passthrough": false, "type": "list", "list": ["Last value", "0.0 or empty string", "np.NaN or empty string"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}}</parameters>
    <ports>
      <input key="guide" scheme="hdf5" type="[table]" type_base="[table]" uuid="{2a5cda94-743e-4735-8c8e-3cd49efbc5ef}">
        <label>List of Tables to match with</label>
        <description>List of Tables to match with</description>
      </input>
      <input key="input" scheme="hdf5" type="[table]" type_base="[table]" uuid="{cae4de92-8b84-4f67-a514-de5cfe862d86}">
        <label>List of Tables to cut or extend</label>
        <description>List of Tables to cut or extend</description>
      </input>
      <output key="output" scheme="hdf5" type="[table]" type_base="[table]" uuid="{02cdce56-360b-46ce-bd66-1f147bb21dc9}">
        <label>Length matched Tables</label>
        <description>Length matched Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.selecttablerows" uuid="{dfec8b50-0ef0-4145-bf85-9223816f16e4}" x="1675.0" y="2375.0">
    <label>Select Table rows</label>
    <description>Reduction of rows in Table according to specified filter.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2014 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "columns": {"description": "Columns to filter", "label": "Columns to filter", "order": 0, "passthrough": false, "type": "list", "list": ["0", "1"], "value": [0], "value_names": ["0"], "editor": {"filter": true, "selection": "multi", "type": "listview"}}, "relation": {"description": "Relation to use as constraint", "label": "Relation", "order": 1, "passthrough": false, "type": "list", "list": ["equal", "less than", "less than or equal", "greater than", "greater than or equal", "not equal"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "constraint": {"description": "Value to use as constraint", "label": "Filter constraint", "order": 2, "type": "string", "value": ""}, "use_custom_predicate": {"description": "Write a custom predicate", "label": "Use custom filter", "order": 3, "type": "boolean", "value": true}, "predicate": {"description": "Filter function", "label": "Custom filter", "order": 4, "type": "string", "value": "lambda x: x != 0"}}</parameters>
    <ports>
      <input key="Input" scheme="hdf5" type="table" type_base="table" uuid="{de88323e-50a8-46fc-b8a0-f37d0297f82b}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="Output" scheme="hdf5" type="table" type_base="table" uuid="{1b2710f1-988b-47a9-9085-1294a209c40a}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.slice.slicelist" uuid="{e6aa8cbb-2176-4721-af24-6a24c38b4bf8}" x="1800.0" y="2200.0">
    <label>Slice List</label>
    <description></description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2015 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "slice": {"description": "", "editor": null, "label": "", "order": 0, "type": "string", "value": "[::2]"}, "limit": {"description": "", "editor": null, "label": "", "order": 1, "type": "integer", "value": 100}}</parameters>
    <ports>
      <input key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{d2a7a3f2-eb1f-4dae-aa0b-f3c534e5294a}">
        <label>Input List</label>
        <description>Input List</description>
      </input>
      <output key="list" scheme="hdf5" type="[table]" type_base="[&lt;a&gt;]" uuid="{02eee6f6-b2a4-4418-b33e-f3486e4e6fcd}">
        <label>Sliced output List</label>
        <description>Sliced output List</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.random.randomtables" uuid="{e94535ea-95bb-4cf4-a0f9-4250007dd469}" x="1925.0" y="1900.0">
    <label>Random Tables</label>
    <description>Random Tables generator.</description>
    <author>Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "column_length": {"description": "The length of columns to be generated.", "label": "Column length", "order": 0, "type": "integer", "value": 10, "editor": {"max": 100000000, "min": 0, "step": 1, "type": "spinbox"}}, "column_entries": {"description": "The number of column entries to be generated.", "label": "Column entries", "order": 0, "type": "integer", "value": 2, "editor": {"max": 1000000, "min": 0, "step": 1, "type": "spinbox"}}, "length": {"description": "The length of table list to be generated.", "label": "Table list length", "order": 0, "type": "integer", "value": 5, "editor": {"max": 10000, "min": 0, "step": 1, "type": "spinbox"}}}</parameters>
    <ports>
      <output key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{eb726702-b2fe-4473-9582-6e9e1675ad53}">
        <label>Tables with random numbers. The specifications of the Tables are declared in the configuration.</label>
        <description>Tables with random numbers. The specifications of the Tables are declared in the configuration.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.hjointables" uuid="{e9d2c506-c0a6-4959-914f-da07cccd923f}" x="2050.0" y="1975.0">
    <label>HJoin Tables</label>
    <description>Pairwise horizontal join of two list of Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group"}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{2e63d6d8-6b25-4273-9b18-38779bb716dd}">
        <label>Input Tables 1</label>
        <description>Input Tables 1</description>
      </input>
      <input key="port2" scheme="hdf5" type="[table]" type_base="[table]" uuid="{500884e0-fc5c-479e-bf05-0a71adb20161}">
        <label>Input Tables 2</label>
        <description>Input Tables 2</description>
      </input>
      <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{cae6bf86-5bdb-4b95-bb20-b5dee6d1daa0}">
        <label>List of Tables with pairwise horizontally joined data from the incoming lists of Tables.</label>
        <description>List of Tables with pairwise horizontally joined data from the incoming lists of Tables.</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.export.exporttables" uuid="{eee569f3-8b72-4398-a2f1-bfceae8d1cb7}" x="1675.0" y="1825.0">
    <label>Export Tables</label>
    <description>Export Tables</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(c) 2013 Combine Control Systems AB</copyright>
    <version>0.1</version>
    <parameters type="json">{"type": "group", "active_exporter": {"description": "Select data format exporter. Each data format has its own exporter with its own special configuration, see exporter information. The selection of exporter do also suggest filename extension.", "editor": null, "label": "Exporter", "order": 0, "type": "string", "value": "HDF5"}, "custom_exporter_data": {"label": "", "order": 1, "type": "group", "XLSX": {"label": "", "order": 0, "type": "group", "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "order": 0, "type": "boolean", "value": false}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "order": 0, "type": "boolean", "value": true}, "to_sheets": {"description": "Select if incoming Tables are going to to be exported to sheets in a single file or to a single sheet inmultiple files.", "editor": null, "label": "Export data to sheets", "order": 0, "type": "boolean", "value": false}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "order": 0, "type": "string", "value": "xlsx"}, "to_plot": {"description": "Select if incoming Tables with plot data should be embedded in the output file. If no plots are present, the option is disabled.", "editor": null, "label": "Embed plot in output file(s)", "type": "boolean", "value": false}}, "SQLite": {"label": "", "order": 0, "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "order": 0, "type": "string", "value": "db"}}, "HDF5": {"label": "", "order": 0, "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "order": 0, "type": "string", "value": "sydata"}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}, "XLS": {"label": "", "order": 0, "type": "group", "header": {"description": "Export column names", "editor": null, "label": "Export header", "order": 0, "type": "boolean", "value": true}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "order": 0, "type": "string", "value": "xls"}}, "SQL": {"label": "", "order": 0, "type": "group", "odbc": {"description": "ODBC method to use.", "label": "ODBC method", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["default", "pyodbc", "ceODBC"], "value": [0], "value_names": [], "editor": {"type": "combobox"}}, "use_nvarchar_size": {"description": "Use nvarchar(size) instead of nvarchar(MAX).", "editor": null, "label": "Use nvarchar(size)", "order": 0, "type": "boolean", "value": false}, "table_name": {"description": "The table name used when exporting.", "editor": null, "label": "Table name", "order": 0, "type": "string", "value": ""}, "drop_table": {"description": "Drop table before adding data.", "editor": null, "label": "Drop table", "order": 0, "type": "boolean", "value": false}, "connection_string": {"description": "String used by pyodbc to make a connection.", "editor": null, "label": "Connection string", "order": 0, "type": "string", "value": ""}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "order": 0, "type": "string", "value": ""}, "db_method": {"description": "Select which Database connection method that you want to use.", "label": "Database connection method", "type": "string", "value": "ODBC", "editor": {"type": "combobox", "options": ["ODBC", "SQLAlchemy"]}}, "db_sqlalchemy_engine_url": {"description": "SQLAlchemy engine URL for connecting to the database", "editor": null, "label": "SQLAlchemy engine URL", "type": "string", "value": "mssql+pyodbc:///"}}, "CSV": {"label": "", "order": 0, "type": "group", "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "order": 0, "type": "boolean", "value": false}, "encoding": {"description": "Character encoding determines how different characters are represented when written to disc, sent over a network, etc.", "label": "Character encoding", "mode": "selected", "order": 0, "passthrough": false, "type": "list", "list": ["Western (ASCII)", "Western (ISO 8859-1)", "Western (ISO 8859-15)", "Western (Windows 1252)", "UTF-8"], "value": [4], "value_names": [], "editor": {"type": "combobox"}}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "order": 0, "type": "boolean", "value": true}, "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "order": 0, "type": "string", "value": "csv"}}, "MAT": {"label": "", "type": "group", "filename_extension": {"description": "", "editor": null, "label": "Filename extension", "type": "string", "value": "mat"}, "header": {"description": "Export column names", "editor": null, "label": "Export header", "type": "boolean", "value": true}, "table_names": {"description": "Use table names as filenames", "editor": null, "label": "Use table names as filenames", "type": "boolean", "value": false}}}, "directory": {"description": "Select the directory where to export the files.", "label": "Output directory", "order": 2, "type": "string", "value": "data", "editor": {"type": "dirname"}}, "filename": {"description": "Filename without extension.", "editor": null, "label": "Filename", "order": 3, "type": "string", "value": "test_output_export_random"}, "plot": {"description": "If there is a plot attribute in the input tables(s), create a separate file with the plot.", "label": "Output separate plot file with the following extension:", "mode": "selected", "order": 4, "passthrough": false, "type": "list", "list": ["-", "eps", "pdf", "svg"], "value": [0], "value_names": [], "editor": {"type": "combobox", "options": []}}}</parameters>
    <ports>
      <input key="port0" scheme="hdf5" type="[table]" type_base="[table]" uuid="{e5e1874b-ff20-49a4-91bd-89be4afbbd64}">
        <label>Tables to be exported</label>
        <description>Tables to be exported</description>
      </input>
      <output key="port0" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{8ec33e44-8fb4-4fca-be86-6284d7ada7ab}">
        <label>Datasources of exported files</label>
        <description>Datasources of exported files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.datasources.filedatasourcemultiple" uuid="{efec2d71-737b-4f77-af31-2d12a5464819}" x="1550.0" y="1675.0">
    <label>Datasources</label>
    <description>Select data sources.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.1</version>
    <parameters type="json">{"type": "group", "directory": {"description": "The base directory.", "label": "Directory", "order": 0, "type": "string", "value": "data", "editor": {"type": "dirname"}}, "search_pattern": {"description": "A wildcard/regexp pattern to match files.", "editor": null, "label": "Search pattern", "order": 0, "type": "string", "value": "import*"}, "recursive": {"description": "Find files in all subfolders.", "editor": null, "label": "Recursive", "order": 0, "type": "boolean", "value": false}, "use_relative_path": {"description": "Use the relative path to the file.", "editor": null, "label": "Use relative path", "order": 0, "type": "boolean", "value": true}}</parameters>
    <ports>
      <output key="port1" scheme="text" type="[datasource]" type_base="[datasource]" uuid="{7f72ff30-2316-457a-aa92-10aff6be428a}">
        <label>Datasources with paths files</label>
        <description>Datasources with paths files</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.vsplittablenode" uuid="{f26dcf6e-4407-44b9-a8c2-06700003f5ec}" x="1925.0" y="2125.0">
    <label>VSplit Table</label>
    <description>Vertical split of Table into Tables.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;</author>
    <copyright>(C) 2013 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "require_index": {"description": "Require Input Index vector to be present.", "label": "Require input index", "order": 0, "type": "boolean", "value": false}, "remove_fill": {"description": "Remove split columns which contain only NaN or empty strings.", "label": "Remove complement columns", "order": 0, "type": "boolean", "value": false}, "input_index": {"description": "Choose name for input index column. Can be left empty.", "label": "Input Index", "order": 10, "type": "string", "value": "VJoin-index"}}</parameters>
    <ports>
      <input key="port1" scheme="hdf5" type="table" type_base="table" uuid="{eb1e90e9-7f81-4be3-8578-95b10ced2f39}">
        <label>Input Table</label>
        <description>Input Table</description>
      </input>
      <output key="port1" scheme="hdf5" type="[table]" type_base="[table]" uuid="{7ef92c1a-4203-4c13-b839-c9e9c08b3150}">
        <label>Split Tables</label>
        <description>Split Tables</description>
      </output>
    </ports>
  </node>
  <node id="org.sysess.sympathy.data.table.selecttablecolumns" uuid="{ff08bf6a-b477-4ba5-829b-40a2297592f3}" x="1675.0" y="2450.0">
    <label>Select table columns</label>
    <description>Select columns from input to propagate to output.</description>
    <author>Alexander Busck &lt;alexander.busck@combine.se&gt;, Erik der Hagopian &lt;erik.hagopian@combine.se&gt;</author>
    <copyright>(c) 2013, 2017 Combine Control Systems AB</copyright>
    <version>1.0</version>
    <parameters type="json">{"type": "group", "columns": {"description": "Select the columns which will proceed.", "label": "Select columns", "order": 30, "passthrough": false, "type": "list", "list": ["0", "1"], "value": [1], "value_names": ["1"], "editor": {"buttons": true, "filter": true, "invertbutton": true, "selection": "multi", "type": "listview"}}}</parameters>
    <ports>
      <input key="" scheme="hdf5" type="table" type_base="table" uuid="{2ba4cbda-3bb4-467e-8d41-3b435bf25f3f}">
        <label>Input</label>
        <description>Input</description>
      </input>
      <output key="" scheme="hdf5" type="table" type_base="table" uuid="{dda1bdc7-9f07-4b70-ad59-d7159933309a}">
        <label>Output</label>
        <description>Output</description>
      </output>
    </ports>
  </node>
  <connection type="table" uuid="{10cb7b6f-dd2e-46b4-b3d8-e54933cf5d7b}">
    <source node="{c68597e7-973b-4c81-8a4a-1d791121125f}" port="{fe561e86-7f51-4930-be1a-035565e4fc3d}"/>
    <destination node="{2fef53d9-c9ab-44d9-be53-f8776455fb46}" port="{c3bd21da-860d-458f-a3a9-2d3197fb4aa1}"/>
  </connection>
  <connection type="table" uuid="{1232fb78-64bc-4af8-95b6-54e5cee35e74}">
    <source node="{db0e4c66-48fa-49ca-91ca-e8176682fea6}" port="{f4f60f1a-07ba-4d54-92fb-2cf7bc73817a}"/>
    <destination node="{c68597e7-973b-4c81-8a4a-1d791121125f}" port="{646d5dbb-e89b-4699-9ba2-8fe9137c8323}"/>
  </connection>
  <connection type="[table]" uuid="{18404851-5302-4adf-a985-c5a34eaa9221}">
    <source node="{bdfb899b-d5df-44e0-bd2e-f1beb6a7262c}" port="{455a40ba-4180-43fb-8772-cd3951ab34e7}"/>
    <destination node="{8a740d3e-b74d-4adb-b99f-4a9d2a054b01}" port="{bee99ce9-b6c8-4900-9a81-c49b087fc7a6}"/>
  </connection>
  <connection type="[table]" uuid="{1a86a221-89b0-4873-83e6-3ec0eea7f9e8}">
    <source node="{bdfb899b-d5df-44e0-bd2e-f1beb6a7262c}" port="{455a40ba-4180-43fb-8772-cd3951ab34e7}"/>
    <destination node="{eee569f3-8b72-4398-a2f1-bfceae8d1cb7}" port="{e5e1874b-ff20-49a4-91bd-89be4afbbd64}"/>
  </connection>
  <connection type="[table]" uuid="{21c0dec4-eb06-472b-8da7-0c2b27e1b10b}">
    <source node="{e94535ea-95bb-4cf4-a0f9-4250007dd469}" port="{eb726702-b2fe-4473-9582-6e9e1675ad53}"/>
    <destination node="{dd4537c0-661d-479c-a94e-d39e385a0444}" port="{cae4de92-8b84-4f67-a514-de5cfe862d86}"/>
  </connection>
  <connection type="datasource" uuid="{246c1e67-af96-47af-a5c5-c88d4bf64a87}">
    <source node="{a5850155-a03c-4a06-a988-36f26b400f98}" port="{632896a9-85ce-4e35-a38d-6a9764468d6f}"/>
    <destination node="{79de32f1-d183-491d-8c35-866d4e9a5e0a}" port="{1432ebe2-d52b-4723-9a6a-817ab9a0d526}"/>
  </connection>
  <connection type="table" uuid="{26b376c2-cc68-46c4-ae73-fad77183ddf0}">
    <source node="{6092f9b9-fbd4-48a1-83c8-d72b93832abb}" port="{4b6e348f-eae0-4c0c-92e2-8bec2857c905}"/>
    <destination node="{c04e6801-633c-430e-9897-c1cf1cd883ae}" port="{4fa311da-036d-410f-a332-0b45f81136c3}"/>
  </connection>
  <connection type="[table]" uuid="{26e02c44-2125-45ae-8160-53b4daa5d2cc}">
    <source node="{f26dcf6e-4407-44b9-a8c2-06700003f5ec}" port="{7ef92c1a-4203-4c13-b839-c9e9c08b3150}"/>
    <destination node="{dd4537c0-661d-479c-a94e-d39e385a0444}" port="{2a5cda94-743e-4735-8c8e-3cd49efbc5ef}"/>
  </connection>
  <connection type="[table]" uuid="{273794d1-6f69-43ad-9dfc-f97f8583b7f3}">
    <source node="{20fa45b8-b72f-42b7-8dff-68c10cf9d5ea}" port="{62c0bd5e-2deb-4eb6-ba0e-20cd302ea92e}"/>
    <destination node="{19be39c0-d195-4e66-a8e3-9412d4e127bb}" port="{72597f65-e720-4d23-a721-d65d8e947ae4}"/>
  </connection>
  <connection type="[datasource]" uuid="{2e20df2d-df49-48ae-978d-4b1606048c5d}">
    <source node="{efec2d71-737b-4f77-af31-2d12a5464819}" port="{7f72ff30-2316-457a-aa92-10aff6be428a}"/>
    <destination node="{3b9f01f4-a08c-4242-9849-b658f2511aba}" port="{67a374ac-9f17-4819-819a-ed5a08c8c4fe}"/>
  </connection>
  <connection type="[table]" uuid="{312d1bf5-5ec7-4a2b-8c24-e8c96d8f4764}">
    <source node="{f26dcf6e-4407-44b9-a8c2-06700003f5ec}" port="{7ef92c1a-4203-4c13-b839-c9e9c08b3150}"/>
    <destination node="{61341474-f09e-41ba-885a-0a077217559a}" port="{7945f1ad-c792-4912-aa07-735565044702}"/>
  </connection>
  <connection type="[table]" uuid="{35e82463-a97f-4f08-bac6-56112131d2d0}">
    <source node="{94493164-d3be-404d-b23b-8ed97751b132}" port="{e3fbb4af-3a63-453a-ab15-2f30cf33c5e8}"/>
    <destination node="{e6aa8cbb-2176-4721-af24-6a24c38b4bf8}" port="{d2a7a3f2-eb1f-4dae-aa0b-f3c534e5294a}"/>
  </connection>
  <connection type="table" uuid="{388e013b-7e9b-4ca3-a85b-50190db2fde0}">
    <source node="{5e4a34f7-80f2-48c4-90b1-c84fdc9845d6}" port="{43547e6b-3788-4c2d-b5bf-1338278ae62e}"/>
    <destination node="{24889e63-a12f-4342-be9e-8714c4698aa1}" port="{56fd1d3a-9a3d-440d-b455-b4dbc5c59152}"/>
  </connection>
  <connection type="table" uuid="{3db43385-3286-4b68-8677-b59ccea6d0a2}">
    <source node="{bd3b6a67-777d-4876-bf77-6c4945863050}" port="{d1d8eba3-a682-4e52-b2e0-55fb1b53616f}"/>
    <destination node="{6e4cc89d-4f75-4057-b23b-8bb885a71390}" port="{eec4700a-f008-4e4f-bc2a-abc871222e89}"/>
  </connection>
  <connection type="[table]" uuid="{3e7fca63-89cc-4aa0-b6e4-45b23626c7f7}">
    <source node="{bdfb899b-d5df-44e0-bd2e-f1beb6a7262c}" port="{455a40ba-4180-43fb-8772-cd3951ab34e7}"/>
    <destination node="{996c7207-7fdd-47f8-b5a6-4919cb3d9958}" port="{bcffdb74-489c-4d45-995d-00e55c78b1b5}"/>
  </connection>
  <connection type="table" uuid="{4375ce38-76ba-4c2b-a3c2-0def41f795ab}">
    <source node="{4d3573d2-efa1-4099-a3ec-77f842d23624}" port="{2115d713-5cb4-405a-9433-76de049efc02}"/>
    <destination node="{dfec8b50-0ef0-4145-bf85-9223816f16e4}" port="{de88323e-50a8-46fc-b8a0-f37d0297f82b}"/>
  </connection>
  <connection type="[table]" uuid="{43ea03f5-5fc3-44b9-b787-315137df8240}">
    <source node="{e94535ea-95bb-4cf4-a0f9-4250007dd469}" port="{eb726702-b2fe-4473-9582-6e9e1675ad53}"/>
    <destination node="{e9d2c506-c0a6-4959-914f-da07cccd923f}" port="{2e63d6d8-6b25-4273-9b18-38779bb716dd}"/>
  </connection>
  <connection type="table" uuid="{45009c7b-2bc4-4b0f-b315-86ccda2bacd6}">
    <source node="{a9e5b6dc-48d6-43ba-83f1-dc3175ab0805}" port="{a6b98d73-8b59-4b96-baf0-adcd7a6c8e51}"/>
    <destination node="{f26dcf6e-4407-44b9-a8c2-06700003f5ec}" port="{eb1e90e9-7f81-4be3-8578-95b10ced2f39}"/>
  </connection>
  <connection type="table" uuid="{487e5f5d-f289-4f98-8a0e-b78de88a6a54}">
    <source node="{19be39c0-d195-4e66-a8e3-9412d4e127bb}" port="{3f6116e8-8d41-4894-bb99-d112d5756e6e}"/>
    <destination node="{02008cb9-26f4-4c47-8e37-d7b835c5d14c}" port="{69347d2a-f020-4014-8b62-bf6536bc13de}"/>
  </connection>
  <connection type="table" uuid="{5459829d-e45f-49cb-8516-2474400ca9fa}">
    <source node="{ff08bf6a-b477-4ba5-829b-40a2297592f3}" port="{dda1bdc7-9f07-4b70-ad59-d7159933309a}"/>
    <destination node="{6e4cc89d-4f75-4057-b23b-8bb885a71390}" port="{d37f2c16-98d4-4046-9af1-b0fcb6809f89}"/>
  </connection>
  <connection type="[table]" uuid="{5ade6cb1-e128-4a05-a382-904aa3b3ef2c}">
    <source node="{91c78b01-b6fc-4625-9549-d1229ad6a585}" port="{70015f44-99a5-42c8-ae3b-db59c1b09505}"/>
    <destination node="{20fa45b8-b72f-42b7-8dff-68c10cf9d5ea}" port="{5fa01d23-694d-4321-a222-4e80b4338dee}"/>
  </connection>
  <connection type="table" uuid="{5ea0e647-62ed-431a-951f-29a081189546}">
    <source node="{4d3573d2-efa1-4099-a3ec-77f842d23624}" port="{2115d713-5cb4-405a-9433-76de049efc02}"/>
    <destination node="{6092f9b9-fbd4-48a1-83c8-d72b93832abb}" port="{394a6acd-0961-45b4-85ca-ecd15d487edb}"/>
  </connection>
  <connection type="table" uuid="{6af4b4ad-1dcb-4c32-bf0e-91b929bf0f2f}">
    <source node="{4d3573d2-efa1-4099-a3ec-77f842d23624}" port="{2115d713-5cb4-405a-9433-76de049efc02}"/>
    <destination node="{ff08bf6a-b477-4ba5-829b-40a2297592f3}" port="{2ba4cbda-3bb4-467e-8d41-3b435bf25f3f}"/>
  </connection>
  <connection type="table" uuid="{6c5fad00-0399-4d8e-a116-a6b130704587}">
    <source node="{8a740d3e-b74d-4adb-b99f-4a9d2a054b01}" port="{c38f6ccc-beed-49bc-b805-64f322a9022e}"/>
    <destination node="{00db47c6-0d89-4252-b25f-eb9801bb14d2}" port="{cb60d510-be58-4143-9b75-e47703808cfe}"/>
  </connection>
  <connection type="[table]" uuid="{709691f8-be1b-4b97-a214-cb1f4a2baadd}">
    <source node="{52c8a27f-7818-4035-b7a3-16b54eb5f431}" port="{28dafc3f-8c24-4500-ac2e-ffbe0c6fdc78}"/>
    <destination node="{20fa45b8-b72f-42b7-8dff-68c10cf9d5ea}" port="{1cadda55-6b08-4a1a-9f56-e495d77ec19b}"/>
  </connection>
  <connection type="table" uuid="{727bd643-c686-4064-8bd5-5a446f8518a0}">
    <source node="{4d3573d2-efa1-4099-a3ec-77f842d23624}" port="{2115d713-5cb4-405a-9433-76de049efc02}"/>
    <destination node="{6092f9b9-fbd4-48a1-83c8-d72b93832abb}" port="{889d1bb8-fbf7-4114-b5f5-ed053297e6c4}"/>
  </connection>
  <connection type="table" uuid="{7487a1ea-1d96-4bd1-883b-7b270df41733}">
    <source node="{dfec8b50-0ef0-4145-bf85-9223816f16e4}" port="{1b2710f1-988b-47a9-9085-1294a209c40a}"/>
    <destination node="{d1ab41ba-a5ec-477c-8b2c-c629efe6efe0}" port="{0c9a2663-7681-4ef9-b674-8feb69fa1c55}"/>
  </connection>
  <connection type="[table]" uuid="{77f160f0-fe43-4708-852c-16fb4be48337}">
    <source node="{bdfb899b-d5df-44e0-bd2e-f1beb6a7262c}" port="{455a40ba-4180-43fb-8772-cd3951ab34e7}"/>
    <destination node="{9a0417d2-be20-4d0c-afcf-a59608d720ab}" port="{40216e21-5e06-4cc8-a163-60f8b86c711f}"/>
  </connection>
  <connection type="table" uuid="{7ef668fd-94cb-45b9-81cc-00dbfb7397c5}">
    <source node="{79de32f1-d183-491d-8c35-866d4e9a5e0a}" port="{c2a4db11-eb57-4ede-b5fa-aeb61bf1b848}"/>
    <destination node="{00db47c6-0d89-4252-b25f-eb9801bb14d2}" port="{55efea9a-06dd-4f5e-ade7-6e3eef8c6fcb}"/>
  </connection>
  <connection type="[table]" uuid="{7fd96d94-5443-4411-a14f-07c019b99eac}">
    <source node="{c04e6801-633c-430e-9897-c1cf1cd883ae}" port="{f79b5cba-ef69-4e95-b35c-d67264b7b39e}"/>
    <destination node="{52c8a27f-7818-4035-b7a3-16b54eb5f431}" port="{3fdc5364-e620-4be1-a3a1-3e6c82005565}"/>
  </connection>
  <connection type="table" uuid="{80cdc5d6-3032-4ff1-96b0-04ee838c7e29}">
    <source node="{79de32f1-d183-491d-8c35-866d4e9a5e0a}" port="{c2a4db11-eb57-4ede-b5fa-aeb61bf1b848}"/>
    <destination node="{56e2e94e-a45b-4cfb-9411-a4dfdde5aacf}" port="{1eeaae16-9452-4e7f-9ec2-eecfd2c43944}"/>
  </connection>
  <connection type="[datasource]" uuid="{84214553-67db-43e2-9362-4a828c76c409}">
    <source node="{eee569f3-8b72-4398-a2f1-bfceae8d1cb7}" port="{8ec33e44-8fb4-4fca-be86-6284d7ada7ab}"/>
    <destination node="{2b36f0b8-6b08-4d3f-b5b0-dcdf6bfc347a}" port="{de269007-ceed-4131-8b48-f2cc824aa156}"/>
  </connection>
  <connection type="[table]" uuid="{87192451-f02c-4624-998a-7ccc875353a0}">
    <source node="{bdfb899b-d5df-44e0-bd2e-f1beb6a7262c}" port="{455a40ba-4180-43fb-8772-cd3951ab34e7}"/>
    <destination node="{94493164-d3be-404d-b23b-8ed97751b132}" port="{f1f1b26c-28dd-4877-af8d-062a3f87b90c}"/>
  </connection>
  <connection type="[table]" uuid="{8aa76c62-4b6d-4b50-9153-d238b9498a44}">
    <source node="{e9d2c506-c0a6-4959-914f-da07cccd923f}" port="{cae6bf86-5bdb-4b95-bb20-b5dee6d1daa0}"/>
    <destination node="{2c16a05a-dabd-4269-b8dd-cff5a711791f}" port="{35818c25-e60d-4fcf-9792-e4957d02e3f3}"/>
  </connection>
  <connection type="table" uuid="{8f0d84d3-7212-4eeb-bc7c-4b8536ac9f0d}">
    <source node="{4d3573d2-efa1-4099-a3ec-77f842d23624}" port="{2115d713-5cb4-405a-9433-76de049efc02}"/>
    <destination node="{bd3b6a67-777d-4876-bf77-6c4945863050}" port="{fd8fdd59-3e98-4097-8ed9-162fddc4da1b}"/>
  </connection>
  <connection type="[table]" uuid="{903bab77-40d1-4d99-839f-a83cbdcc073a}">
    <source node="{e94535ea-95bb-4cf4-a0f9-4250007dd469}" port="{eb726702-b2fe-4473-9582-6e9e1675ad53}"/>
    <destination node="{e9d2c506-c0a6-4959-914f-da07cccd923f}" port="{500884e0-fc5c-479e-bf05-0a71adb20161}"/>
  </connection>
  <connection type="table" uuid="{904e6053-fd7a-44c9-a78f-119249a3207c}">
    <source node="{56e2e94e-a45b-4cfb-9411-a4dfdde5aacf}" port="{d5b11a75-0176-4183-a69c-9f50946cf98f}"/>
    <destination node="{5e4a34f7-80f2-48c4-90b1-c84fdc9845d6}" port="{75f46d7c-9d42-4c8b-a685-98f1737d77fd}"/>
  </connection>
  <connection type="table" uuid="{927301ec-a55f-4a35-8ffa-6d1df755231c}">
    <source node="{8a740d3e-b74d-4adb-b99f-4a9d2a054b01}" port="{c38f6ccc-beed-49bc-b805-64f322a9022e}"/>
    <destination node="{68c8e45f-ce6a-490e-81ca-c7ab246caa5f}" port="{b800be57-d0c8-4d11-8592-9ed5d947cdb6}"/>
  </connection>
  <connection type="table" uuid="{9c158a0f-678f-425c-bcd5-05dbf7a41982}">
    <source node="{56e2e94e-a45b-4cfb-9411-a4dfdde5aacf}" port="{d5b11a75-0176-4183-a69c-9f50946cf98f}"/>
    <destination node="{db0e4c66-48fa-49ca-91ca-e8176682fea6}" port="{86080935-3685-4c07-b6c3-00e05d941853}"/>
  </connection>
  <connection type="[table]" uuid="{a0cf0862-9733-41c3-8346-4de5dcde2c71}">
    <source node="{91c78b01-b6fc-4625-9549-d1229ad6a585}" port="{70015f44-99a5-42c8-ae3b-db59c1b09505}"/>
    <destination node="{4005c7c2-c783-4397-aa4e-61d0679abb22}" port="{070d9a06-fe35-453a-9bc6-99b9109242bf}"/>
  </connection>
  <connection type="[table]" uuid="{a1113a73-e8cb-45bc-a740-5c66217ee7f3}">
    <source node="{9a0417d2-be20-4d0c-afcf-a59608d720ab}" port="{140e6b2c-9c94-4f98-b71e-4e31abe41e8d}"/>
    <destination node="{a9e5b6dc-48d6-43ba-83f1-dc3175ab0805}" port="{ac5cb629-2c39-4eac-a913-b91ee5feee26}"/>
  </connection>
  <connection type="[table]" uuid="{a73dc69f-72f5-4780-a5f0-4c8b4fe94a58}">
    <source node="{e6aa8cbb-2176-4721-af24-6a24c38b4bf8}" port="{02eee6f6-b2a4-4418-b33e-f3486e4e6fcd}"/>
    <destination node="{444a765b-f270-4ffe-93be-66e888b1d7b6}" port="{a92f36f6-e592-4dce-8976-07c0ddbfb734}"/>
  </connection>
  <connection type="table" uuid="{a7aa106c-ef77-4e6e-8858-2ac802358e32}">
    <source node="{56e2e94e-a45b-4cfb-9411-a4dfdde5aacf}" port="{d5b11a75-0176-4183-a69c-9f50946cf98f}"/>
    <destination node="{2fef53d9-c9ab-44d9-be53-f8776455fb46}" port="{6fa9ab24-3b7b-4b9f-b180-e54db46cc2c2}"/>
  </connection>
  <connection type="[table]" uuid="{bef16a77-93db-4fd1-93c0-2e01e067aa10}">
    <source node="{bdfb899b-d5df-44e0-bd2e-f1beb6a7262c}" port="{455a40ba-4180-43fb-8772-cd3951ab34e7}"/>
    <destination node="{84d65f6e-6b8f-40ed-b5f2-a87616694cd4}" port="{4d907ee2-a87f-42dc-90f5-0a0df41b5f40}"/>
  </connection>
  <connection type="table" uuid="{c1f567a9-a2d7-407f-bac5-ff5fb234d62f}">
    <source node="{c751b1da-83b2-493d-af06-9c949f7bc33d}" port="{dac863b3-49d3-436c-82cb-12092d42d643}"/>
    <destination node="{7109826a-a514-4a3a-9ec6-f4cd1ae1c922}" port="{30f8f667-61ed-46b9-9b06-651044c945ea}"/>
  </connection>
  <connection type="[table]" uuid="{c811f9fc-fb28-4452-bbe5-fb02dfeb6cfd}">
    <source node="{e94535ea-95bb-4cf4-a0f9-4250007dd469}" port="{eb726702-b2fe-4473-9582-6e9e1675ad53}"/>
    <destination node="{40848862-1101-4b28-9d3e-badea1bdc423}" port="{fdbe5ce0-5a51-4f0a-900b-7b4bc6201412}"/>
  </connection>
  <connection type="[table]" uuid="{c9de473f-d060-402b-87ad-c7dd1413c043}">
    <source node="{52c8a27f-7818-4035-b7a3-16b54eb5f431}" port="{28dafc3f-8c24-4500-ac2e-ffbe0c6fdc78}"/>
    <destination node="{4005c7c2-c783-4397-aa4e-61d0679abb22}" port="{37f8af51-efd1-46ca-8b09-8996ee7667d0}"/>
  </connection>
  <connection type="[table]" uuid="{d1eaee11-0229-4595-8f57-cbf3cbe795d4}">
    <source node="{24889e63-a12f-4342-be9e-8714c4698aa1}" port="{3d41b02b-b0a7-49ea-a82d-6d8cf6ff9ae6}"/>
    <destination node="{94abe12f-c0ca-4497-95b8-0eb55218ac01}" port="{656feeac-35ca-444f-a012-ee50370fff7f}"/>
  </connection>
  <connection type="table" uuid="{dd3f64e6-e46f-4f76-ba14-38e5ce34de98}">
    <source node="{c751b1da-83b2-493d-af06-9c949f7bc33d}" port="{dac863b3-49d3-436c-82cb-12092d42d643}"/>
    <destination node="{b95990df-2538-4870-9a4e-c9655dbb641d}" port="{9abba3ec-284c-49e2-ba55-5039dc04610d}"/>
  </connection>
  <connection type="[table]" uuid="{e5da37cc-3c32-412e-881e-563ce402ceee}">
    <source node="{e94535ea-95bb-4cf4-a0f9-4250007dd469}" port="{eb726702-b2fe-4473-9582-6e9e1675ad53}"/>
    <destination node="{40848862-1101-4b28-9d3e-badea1bdc423}" port="{8ac711a2-bd27-455b-9611-f2ffe462abbc}"/>
  </connection>
  <connection type="table" uuid="{e61ee766-579e-4d4b-ba2a-f0547eeab076}">
    <source node="{bd3b6a67-777d-4876-bf77-6c4945863050}" port="{d1d8eba3-a682-4e52-b2e0-55fb1b53616f}"/>
    <destination node="{91c78b01-b6fc-4625-9549-d1229ad6a585}" port="{70d05d1d-1a7f-45e0-b6b3-140ab39519cb}"/>
  </connection>
  <connection type="table" uuid="{eda1667a-376e-4ce1-9e26-c8394e50607e}">
    <source node="{4d3573d2-efa1-4099-a3ec-77f842d23624}" port="{2115d713-5cb4-405a-9433-76de049efc02}"/>
    <destination node="{2baae8c1-3e99-4c3b-b6dc-76ec19700dda}" port="{b4de6bee-5267-4d7a-a932-c76a9b5f4330}"/>
  </connection>
  <connection type="[table]" uuid="{efaadab3-f2cb-4e73-ae02-49c6b33388c6}">
    <source node="{9a0417d2-be20-4d0c-afcf-a59608d720ab}" port="{140e6b2c-9c94-4f98-b71e-4e31abe41e8d}"/>
    <destination node="{68c8e45f-ce6a-490e-81ca-c7ab246caa5f}" port="{0bc7fc58-b682-4aba-b53f-46dfe5091e27}"/>
  </connection>
  <connection type="[table]" uuid="{f2ecf1d7-ccbb-45bb-816f-c96c6b2de4a6}">
    <source node="{e94535ea-95bb-4cf4-a0f9-4250007dd469}" port="{eb726702-b2fe-4473-9582-6e9e1675ad53}"/>
    <destination node="{40aa611c-2646-4d24-9458-7d71133804b5}" port="{5a4028e6-4016-4899-af5f-172c35f6931e}"/>
  </connection>
  <connection type="[table]" uuid="{f5626ead-09de-44b7-ad67-eb7d062441ef}">
    <source node="{e94535ea-95bb-4cf4-a0f9-4250007dd469}" port="{eb726702-b2fe-4473-9582-6e9e1675ad53}"/>
    <destination node="{61341474-f09e-41ba-885a-0a077217559a}" port="{d1ff3a59-cea3-4769-946d-46dda0f6d65c}"/>
  </connection>
  <connection type="table" uuid="{f9eb5c2b-cb3b-4810-a1a6-6be11bc2f2a9}">
    <source node="{5e4a34f7-80f2-48c4-90b1-c84fdc9845d6}" port="{43547e6b-3788-4c2d-b5bf-1338278ae62e}"/>
    <destination node="{c68597e7-973b-4c81-8a4a-1d791121125f}" port="{b4976bd2-6c22-48e1-9c74-a84b2fd1f72c}"/>
  </connection>
</flow>
