[sadm]
env = testing

[sadmenv]
target.dir = tdata/deploy.target/cmd/${sadm:env}

[sync]
testing.sync = assets/testing.txt testing.txt

[_sadmtest.mock.pre_error]
utils.sh =
	1000; getuid
	; makedirs /home/sadm/.local/deploy, mode=488, exist_ok=True
	; lockd /home/sadm/.local/deploy
utils.cmd.call =
	128; /usr/bin/sudo -n sadm deploy --sumode-pre

[_sadmtest.mock.sumode_pre]
utils.path =
	False; isfile /etc/opt/sadm/listen.cfg

[_sadmtest.mock.post_error]
utils.sh =
	1000; getuid
	; makedirs /home/sadm/.local/deploy, mode=488, exist_ok=True
	; lockd /home/sadm/.local/deploy
utils.cmd.call =
	0; /usr/bin/sudo -n sadm deploy --sumode-pre
	128; /usr/bin/sudo -n sadm deploy --sumode-post

[_sadmtest.mock.root_error]
utils.sh =
	0; getuid

[_sadmtest.mock.cmd]
utils.sh =
	1000; getuid
	; makedirs /home/sadm/.local/deploy, mode=488, exist_ok=True
	; lockd /home/sadm/.local/deploy
utils.cmd.call =
	0; /usr/bin/sudo -n sadm deploy --sumode-pre
	0; /usr/bin/sudo -n sadm deploy --sumode-post

[_sadmtest.mock.import]
utils.path =
	testing.env; abspath testing.env
	testing.env; basename testing.env
	False; isfile testing.env.asc
	.; dirname testing.env
	.; dirname .
	testing; basename testing
	True; isdir ./deploy/testing
utils.sh =
	1000; getuid
	; rmtree ./deploy/testing
	; makedirs ./deploy/testing, mode=493, exist_ok=False
	; chmod ./deploy/testing 448
	; unpack_archive testing.zip, extract_dir=./deploy/testing, format=zip
utils.cmd.call =
	0; sha256sum -c testing.env

[_sadmtest.mock.import_invalid_file]
utils.path =
	env.file; abspath env.file
utils.sh =
	1000; getuid

[_sadmtest.mock.import_noenv]
utils.path =
	noenv.env; abspath noenv.env
	noenv.env; basename noenv.env
utils.sh =
	1000; getuid

[_sadmtest.mock.import_cksum_error]
utils.path =
	testing.env; abspath testing.env
	testing.env; basename testing.env
	False; isfile testing.env.asc
utils.sh =
	1000; getuid
utils.cmd.call =
	9; sha256sum -c testing.env

[_sadmtest.mock.import_verify]
utils.path =
	testing.env; abspath testing.env
	testing.env; basename testing.env
	True; isfile testing.env.asc
utils.sh =
	1000; getuid
utils.cmd.call =
	0; gpg --no-tty --no --verify testing.env.asc testing.env 2>/dev/null
	9; sha256sum -c testing.env

[_sadmtest.mock.import_verify_error]
utils.path =
	testing.env; abspath testing.env
	testing.env; basename testing.env
	True; isfile testing.env.asc
utils.sh =
	1000; getuid
utils.cmd.call =
	8; gpg --no-tty --no --verify testing.env.asc testing.env 2>/dev/null

[_sadmtest.mock.listen_uwsgi]
utils.cmd.check_call =
	0; uwsgi --need-plugin python3 --set-ph sadm-home=/opt/sadm --touch-reload /etc/opt/sadm/listen.cfg --touch-reload /opt/src/listen/wsgi/uwsgi.ini --safe-pidfile /tmp/sadm.listen.uwsgi.pid --ini /opt/src/listen/wsgi/uwsgi.ini

[_sadmtest.mock.listen_uwsgi_error]
utils.cmd.check_call =
	9; uwsgi --need-plugin python3 --set-ph sadm-home=/opt/sadm --touch-reload /etc/opt/sadm/listen.cfg --touch-reload /opt/src/listen/wsgi/uwsgi.ini --safe-pidfile /tmp/sadm.listen.uwsgi.pid --ini /opt/src/listen/wsgi/uwsgi.ini

[_sadmtest.mock.devops_uwsgi]
utils.cmd.check_call =
	0; uwsgi --need-plugin python3 --set-ph sadm-home=/opt/sadm --touch-reload /etc/opt/sadm/devops.cfg --touch-reload /opt/src/devops/wsgi/uwsgi.ini --safe-pidfile /tmp/sadm.devops.uwsgi.pid --ini /opt/src/devops/wsgi/uwsgi.ini --module _sadm.devops.devel

[_sadmtest.mock.devops_uwsgi_error]
utils.cmd.check_call =
	9; uwsgi --need-plugin python3 --set-ph sadm-home=/opt/sadm --touch-reload /etc/opt/sadm/devops.cfg --touch-reload /opt/src/devops/wsgi/uwsgi.ini --safe-pidfile /tmp/sadm.devops.uwsgi.pid --ini /opt/src/devops/wsgi/uwsgi.ini --module _sadm.devops.devel
