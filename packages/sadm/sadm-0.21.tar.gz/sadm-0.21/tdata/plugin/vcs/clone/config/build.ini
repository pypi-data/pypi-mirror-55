[sadm]
env = vcs.clone

[sadmenv]
target.dir = tdata/deploy.target/plugin/${sadm:env}

[sync]
testing.vcs.clone = assets/testing.txt testing.txt

[vcs.clone]
enable = yes

[vcs.repo:testing]
remote = https://testing.com/repo.git
branch = testing
path = /usr/src/testing

[vcs.repo:test_checkout]
remote = https://testing.com/repo.git
branch = testco
path = /usr/src/testing_checkout
checkout = abc1234

[vcs.repo:test_update]
remote = https://testing.com/update/repo.git
path = /usr/src/testing_update
update = yes
deploy = yes

[_sadmtest.mock.deploy]
path =
	/usr/src/testing; abspath /usr/src/testing
	False; isdir /usr/src/testing
	/usr/src/testing_checkout; abspath /usr/src/testing_checkout
	False; isdir /usr/src/testing_checkout
	/usr/src/testing_update; abspath /usr/src/testing_update
	True; isdir /usr/src/testing_update
	True; isdir .sadm
	False; isfile ./.sadm/install.sh
	False; isfile ./.sadm/build.sh
	False; isfile ./.sadm/check.sh
	True; isfile ./.sadm/deploy.sh
shutil =
	; getcwd
	; chdir /usr/src/testing_update
	; chdir /testing/workdir
	; getcwd
	; chdir /usr/src/testing_checkout
	; chdir /testing/workdir
	; getcwd
	; chdir /usr/src/testing_update
	; chdir /testing/workdir
	; getcwd
	; chdir /usr/src/testing_update
	; chdir /testing/workdir
cmd.check_call =
	0; git config --global core.sshCommand ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o BatchMode=yes
	0; git clone -b testing https://testing.com/repo.git /usr/src/testing
	0; git clone -b testco https://testing.com/repo.git /usr/src/testing_checkout
	0; git checkout abc1234
	0; git pull
	0; /bin/sh ./.sadm/deploy.sh
