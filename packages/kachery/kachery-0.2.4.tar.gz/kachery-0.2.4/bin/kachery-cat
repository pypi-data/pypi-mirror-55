#!/usr/bin/env python

import os
import sys
import argparse
import time
import kachery as ka

def main():
    old_stdout = sys.stdout
    sys.stdout = sys.stderr

    parser = argparse.ArgumentParser(description='Print the contents of a file to stdout.')
    parser.add_argument('path', help='Hash path to the file (e.g. sha1://906faceaf874dd64e81de0048f36f4bab0f1f171)')
    parser.add_argument('--download', '-d', help='Whether to download the data remotely if not available locally', required=False, action='store_true')
    parser.add_argument('--download-only', '-do', help='Whether to download the data remotely without looking locally (mostly good for troubleshooting)', required=False, action='store_true')
    parser.add_argument('--url', help='The URL of the kachery database server to download from (or use KACHERY_URL environment variable and the --upload (-u) flag)', required=False, default=None)
    parser.add_argument('--channel', '-c', help='The channel of the kachery database server to download from (or use KACHERY_CHANNEL environment variable)', required=False, default=None)
    parser.add_argument('--password', '-p', help='The password of the kachery database server to download from (or use KACHERY_PASSWORD environment variable)', required=False, default=None)    
    parser.add_argument('--start', help='The start byte', required=False, default=None)
    parser.add_argument('--end', help='The end byte (+1)', required=False, default=None)

    args = parser.parse_args()
    path = args.path

    if args.download or args.download_only:
        url=args.url or os.getenv('KACHERY_URL')
        channel=args.channel or os.getenv('KACHERY_CHANNEL')
        password=args.password or os.getenv('KACHERY_PASSWORD')
        if not url:
            raise Exception('You must specify a URL either using the --url flag or by setting the KACHERY_URL environment variable')
        if not channel:
            raise Exception('You must specify a channel either using the --channel (-c) flag or by setting the KACHERY_CHANNEL environment variable')
        if not password:
            raise Exception('You must specify a password either using the --password (-p) flag or by setting the KACHERY_PASSWORD environment variable')
        ka.set_config(
            url=url,
            channel=channel,
            password=password,
            download=args.download or False,
            download_only=args.download_only or False
        )
    elif args.url or args.channel or args.password:
        raise Exception('You must specify either --download (-d) or --download-only (-do) when using these options.')
    if args.start is None and args.end is None:
        path1 = ka.load_file(path)
        if not path1:
            raise Exception('Error loading file.')

        sys.stdout = old_stdout
        with open(path1, 'rb') as f:
            while True:
                data = os.read(f.fileno(), 4096)
                if len(data) == 0:
                    break
                os.write(sys.stdout.fileno(), data)
    else:
        sys.stdout = old_stdout
        start = int(args.start) if args.start is not None else None
        end = int(args.end) if args.end is not None else None
        ka.load_bytes(path, start=start, end=end, write_to_stdout=True)

if __name__ == "__main__":
    main()
