##################33
############3333
## have not been able to get this to work yet
##################

#!/usr/bin/env bash

# This completion script was based off of q2cli's completion script:
# https://github.com/qiime2/q2cli/blob/67b38e46b50a67274c0846c7df65149247dc45dc/bin/tab-qiime

# Bash completion script that defers to a cached completion script representing
# the state of the current redbiom deployment.
#
# This script is intended to be executed on the command-line or in
# .bashrc/.bash_profile:
#
#     source tab-redbiom
#

_redbiom_completion()
{
  # Attempt to find the cached completion script. If redbiom isn't installed, or
  # is an incompatible version, don't attempt completion.
  local completion_path="$(python -c "import redbiom.util; print(redbiom.util.get_completion_path())" 2> /dev/null)"

  if [[ $? != 0 ]]; then
    unset COMPREPLY
    return 0
  fi

  # If the completion script exists, attempt completion by invoking the script
  # in a subshell, supplying COMP_WORDS and COMP_CWORD. Capture the output as
  # the completion reply. If the completion script failed, don't attempt
  # completion.
  if [[ -f "$completion_path" ]] ; then
    COMPREPLY=( $(COMP_WORDS="${COMP_WORDS[*]}" COMP_CWORD="${COMP_CWORD}" "$completion_path" 2> /dev/null) )

    if [[ $? != 0 ]]; then
      unset COMPREPLY
      return 0
    fi
  else
    unset COMPREPLY
    return 0
  fi

  return 0
}

# Enable default readline and bash completion behavior when `_redbiom_completion`
# doesn't have a reply.
complete -F _redbiom_completion -o default -o bashdefault redbiom

# Execute a `redbiom` command (any command will do) so that tab-completion will
# work out-of-the-box (e.g. with a fresh installation of redbiom). Running a
# command will create or refresh the cache if necessary, which contains the
# actual completion script.
#
# Ignore stdout to avoid displaying help text to users enabling tab-completion.
# stderr displays the note about cache refreshing, as that can take a few
# moments to complete.
redbiom > /dev/null
