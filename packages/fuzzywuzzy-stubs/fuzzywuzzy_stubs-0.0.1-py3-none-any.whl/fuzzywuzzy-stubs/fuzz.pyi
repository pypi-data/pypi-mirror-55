# Copyright (C) 2019 Peter Schutt
#
# This file is part of fuzzywuzzy-stubs.
#
# fuzzywuzzy-stubs is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# fuzzywuzzy-stubs is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with fuzzywuzzy-stubs.  If not, see <http://www.gnu.org/licenses/>.

# Stubs for fuzzywuzzy.fuzz (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import AnyStr

def ratio(s1: AnyStr, s2: AnyStr) -> int: ...
def partial_ratio(s1: AnyStr, s2: AnyStr) -> int: ...
def _process_and_sort(s: AnyStr, force_ascii: bool, full_process: bool = ...) -> AnyStr: ...
def _token_sort(s1: AnyStr, s2: AnyStr, partial: bool = ..., force_ascii: bool = ..., full_process: bool = ...) -> int: ...
def token_sort_ratio(s1: AnyStr, s2: AnyStr, force_ascii: bool = ..., full_process: bool = ...) -> int: ...
def partial_token_sort_ratio(s1: AnyStr, s2: AnyStr, force_ascii: bool = ..., full_process: bool = ...) -> int: ...
def _token_set(s1: AnyStr, s2: AnyStr, partial: bool = ..., force_ascii: bool = ..., full_process: bool = ...) -> int: ...
def token_set_ratio(s1: AnyStr, s2: AnyStr, force_ascii: bool = ..., full_process: bool = ...) -> int: ...
def partial_token_set_ratio(s1: AnyStr, s2: AnyStr, force_ascii: bool = ..., full_process: bool = ...) -> int: ...
def QRatio(s1: AnyStr, s2: AnyStr, force_ascii: bool = ..., full_process: bool = ...) -> int: ...
def UQRatio(s1: AnyStr, s2: AnyStr, full_process: bool = ...) -> int: ...
def WRatio(s1: AnyStr, s2: AnyStr, force_ascii: bool = ..., full_process: bool = ...) -> int: ...
def UWRatio(s1: AnyStr, s2: AnyStr, full_process: bool = ...) -> int: ...
