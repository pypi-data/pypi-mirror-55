"""Autogenerated file: DO NOT EDIT!"""
import typing  # noqa: F401
from dazzler.system import Component, Aspect, UNDEFINED  # noqa: F401


class Form(Component):
    """
    A form element with auto fields.

    :CSS:

        ``dazzler-core-form``
        - ``form-header``
        - ``form-body``
        - ``form-field``
        - ``field-error``
        - ``form-label``
        - ``form-input``
        - ``form-footer``
        - ``form-submit``
    """
    _aspect_keys = []
    _children = []
    fields = Aspect(children=True)
    header = Aspect(children=True)
    body = Aspect(children=True)
    footer = Aspect(children=True)
    action = Aspect()
    method = Aspect()
    target = Aspect()
    name = Aspect()
    auto_complete = Aspect()
    enctype = Aspect()
    accept_charset = Aspect()
    no_validate = Aspect()
    class_name = Aspect()
    style = Aspect()
    errors = Aspect(default=UNDEFINED)
    include_submit = Aspect(default=True)
    submit_label = Aspect(default='Submit')

    def __init__(
            self,
            fields: typing.Optional[typing.List[typing.Dict[str, typing.Union[str, typing.Union[str, int, float, Component, typing.List[typing.Union[str, int, float, Component]]]]]]] = UNDEFINED,  # noqa: E501
            header: typing.Optional[typing.Union[str, int, float, Component, typing.List[typing.Union[str, int, float, Component]]]] = UNDEFINED,  # noqa: E501
            body: typing.Optional[typing.Union[str, int, float, Component, typing.List[typing.Union[str, int, float, Component]]]] = UNDEFINED,  # noqa: E501
            footer: typing.Optional[typing.Union[str, int, float, Component, typing.List[typing.Union[str, int, float, Component]]]] = UNDEFINED,  # noqa: E501
            action: typing.Optional[str] = UNDEFINED,
            method: typing.Optional[typing.Any] = UNDEFINED,
            target: typing.Optional[typing.Any] = UNDEFINED,
            name: typing.Optional[str] = UNDEFINED,
            auto_complete: typing.Optional[typing.Any] = UNDEFINED,
            enctype: typing.Optional[typing.Any] = UNDEFINED,
            accept_charset: typing.Optional[str] = UNDEFINED,
            no_validate: typing.Optional[bool] = UNDEFINED,
            class_name: typing.Optional[str] = UNDEFINED,
            style: typing.Optional[typing.Dict] = UNDEFINED,
            errors: typing.Optional[typing.Dict] = UNDEFINED,
            include_submit: typing.Optional[bool] = True,
            submit_label: typing.Optional[str] = 'Submit',
            identity: str = None
    ):
        """
        :param fields: Fields of the form, either provide a component or a
            type for the input.
        :param header: Render on top of the form (CSS: form-header)
        :param body: Render in the middle of the form, after the fields.
            (CSS: form-body)
        :param footer: Render at the bottom of the form (CSS: form-footer)
        :param action: Url to submit the form.
        :param method: Http method to submit the form. (Possible values:
            'get', 'post')
        :param target: How will the response display. (Possible values:
            '_blank', '_self', '_parent', '_top')
        :param name: Name of the form.
        :param auto_complete: Specifies auto complete for the form.
            (Possible values: 'on', 'off')
        :param enctype: How the data is encode before submit. (Possible
            values: 'application/x-www-form-urlencoded', 'multipart/form-data',
            'text/plain')
        :param accept_charset: Character encoding for submission.
        :param no_validate: Specify the form should be validated on
            submission.
        :param class_name: CSS class of the form element.
        :param style: Style object of the form element.
        :param errors: Errors to show with the fields. Keys are name.
            (default={})
        :param include_submit: Include a submit button on the form.
            (default=True)
        :param submit_label: Label of the submit button. (default='Submit')
        """
        Component.__init__(self, locals(), identity)
