{"ast":null,"code":"import _defineProperty from \"/home/gabe/src/point-label-sharing/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/gabe/src/point-label-sharing/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gabe/src/point-label-sharing/frontend/src/components/SimpleSelect.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst SimpleSelect = props => {\n  const classes = useStyles();\n  const importFileFromDB = props.importFileFromDB,\n        getAllFiles = props.getAllFiles,\n        files = props.files;\n\n  if (!files.files) {\n    getAllFiles({\n      appliedRules: true\n    });\n  }\n\n  let fileName = \"\";\n\n  if (files.files && Object.keys(files.files).length > 0) {\n    fileName = files.files[Object.keys(files.files)[0]][\"name\"];\n  }\n\n  const _React$useState = React.useState({\n    fileName\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        values = _React$useState2[0],\n        setValues = _React$useState2[1];\n\n  if (!files || !files.files) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    });\n  }\n\n  function handleChange(event) {\n    importFileFromDB(event.target.value);\n    setValues(oldValues => _objectSpread({}, oldValues, {\n      fileName: event.target.value\n    }));\n  }\n\n  return React.createElement(\"form\", {\n    className: classes.root,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.formControl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(InputLabel, {\n    htmlFor: \"csv-file-names\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Datasets\"), React.createElement(Select, {\n    value: values.fileName,\n    onChange: handleChange,\n    inputProps: {\n      name: 'csv-file-names',\n      id: 'csv-file-names'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, Object.keys(files.files).map((fileId, index) => {\n    return React.createElement(MenuItem, {\n      key: index,\n      value: fileId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, files.files[fileId][\"name\"]);\n  }))));\n};\n\nconst mapStateToProps = ({\n  files\n}) => {\n  return {\n    files\n  };\n};\n\nexport default connect(mapStateToProps, actions)(SimpleSelect);","map":{"version":3,"sources":["/home/gabe/src/point-label-sharing/frontend/src/components/SimpleSelect.js"],"names":["React","connect","actions","makeStyles","InputLabel","MenuItem","FormControl","Select","useStyles","theme","root","display","flexWrap","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","props","classes","importFileFromDB","getAllFiles","files","appliedRules","fileName","Object","keys","length","useState","values","setValues","handleChange","event","target","value","oldValues","name","id","map","fileId","index","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst SimpleSelect = (props) => {\n  const classes = useStyles();\n  const { importFileFromDB, getAllFiles, files } = props;\n\n  if (!files.files) {\n    getAllFiles({\n      appliedRules: true\n    });\n  }\n\n  let fileName = \"\";\n  \n  if (files.files && Object.keys(files.files).length > 0) {\n    fileName = files.files[Object.keys(files.files)[0]][\"name\"];\n  }\n \n  const [values, setValues] = React.useState({\n    fileName\n  });\n\n  if (!files || !files.files) {\n    return <div></div>;\n  }\n\n  function handleChange(event) {\n    importFileFromDB(event.target.value);\n\n    setValues(oldValues => ({\n      ...oldValues,\n      fileName: event.target.value,\n    }));\n  }\n\n  return (\n    <form className={classes.root} autoComplete=\"off\">\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"csv-file-names\">Datasets</InputLabel>\n        <Select\n          value={values.fileName}\n          onChange={handleChange}\n          inputProps={{\n            name: 'csv-file-names',\n            id: 'csv-file-names',\n          }}\n        >\n        {Object.keys(files.files).map((fileId, index) => {\n             return <MenuItem key={index} value={fileId}>{files.files[fileId][\"name\"]}</MenuItem>;\n        })}\n        </Select>\n      </FormControl>\n    </form>\n  );\n}\n\nconst mapStateToProps = ({ files }) => {\n  return { files };\n}\n\nexport default connect(mapStateToProps, actions)(SimpleSelect);"]},"metadata":{},"sourceType":"module"}