{"ast":null,"code":"import _defineProperty from \"/home/gabe/src/point-label-sharing/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/gabe/src/point-label-sharing/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gabe/src/point-label-sharing/frontend/src/components/EnhancedTable.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Button from '@material-ui/core/Button';\nimport { CSVLink } from \"react-csv\";\nimport SimpleSelect from './SimpleSelect';\nimport { getSorting, stableSort, removeMultipleIndices } from '../helper.js';\n\nfunction EnhancedTableHead(props) {\n  const classes = props.classes,\n        onSelectAllClick = props.onSelectAllClick,\n        order = props.order,\n        orderBy = props.orderBy,\n        numSelected = props.numSelected,\n        rowCount = props.rowCount,\n        onRequestSort = props.onRequestSort,\n        csvData = props.csvData,\n        onColSelected = props.onColSelected,\n        selectedCols = props.selectedCols;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  const headerRow = csvData && csvData.length > 0 ? csvData[0] : [];\n  const header = headerRow.map(columnName => {\n    return {\n      id: columnName,\n      disablePadding: false,\n      label: columnName\n    };\n  });\n  return React.createElement(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      'aria-label': 'select all rows'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), header.map((row, index) => {\n    return React.createElement(TableCell, {\n      key: index,\n      padding: row.disablePadding ? 'none' : 'default',\n      sortDirection: orderBy === index ? order : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(TableSortLabel, {\n      active: orderBy === index,\n      direction: order,\n      onClick: createSortHandler(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, row.id, orderBy === index ? React.createElement(\"span\", {\n      className: classes.visuallyHidden,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null), csvData.length > 1 ? React.createElement(TableSortLabel, {\n      active: true,\n      direction: \"desc\",\n      IconComponent: selectedCols[index] ? CheckCircleIcon : CheckCircleOutlineIcon,\n      onClick: event => onColSelected(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }) : \"\");\n  })));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.number.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  spacer: {\n    flex: '1 1 100%'\n  },\n  actions: {\n    color: theme.palette.text.secondary\n  },\n  title: {\n    flex: '0 0 auto'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const numSelected = props.numSelected,\n        rows = props.rows,\n        handleDeleteClick = props.handleDeleteClick,\n        importFileFromDB = props.importFileFromDB;\n  return React.createElement(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, numSelected, \" selected\") : React.createElement(Typography, {\n    variant: \"h6\",\n    id: \"tableTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(SimpleSelect, {\n    importFileFromDB: importFileFromDB,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Tooltip, {\n    title: \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleDeleteClick,\n    \"aria-label\": \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }))) : \"\", React.createElement(CSVLink, {\n    data: rows,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Download\"))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  },\n  tableCellSelected: {\n    backgroundColor: \"#f7f7f7\"\n  }\n}));\n\nconst EnhancedTable = props => {\n  const csvData = props.csvData,\n        csvName = props.csvName,\n        importFileFromDB = props.importFileFromDB,\n        onSelectedCol = props.onSelectedCol,\n        fileId = props.fileId,\n        updateFile = props.updateFile;\n  let rows = csvData && csvData.length > 0 ? csvData.slice(1) : [];\n  const classes = useStyles();\n\n  const _React$useState = React.useState('asc'),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        order = _React$useState2[0],\n        setOrder = _React$useState2[1];\n\n  const _React$useState3 = React.useState(0),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        orderBy = _React$useState4[0],\n        setOrderBy = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        selected = _React$useState6[0],\n        setSelected = _React$useState6[1];\n\n  const _React$useState7 = React.useState(0),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        page = _React$useState8[0],\n        setPage = _React$useState8[1];\n\n  const _React$useState9 = React.useState(true),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        dense = _React$useState10[0],\n        setDense = _React$useState10[1];\n\n  const _React$useState11 = React.useState(25),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        rowsPerPage = _React$useState12[0],\n        setRowsPerPage = _React$useState12[1];\n\n  let colMap = {};\n\n  if (rows && rows.length > 0) {\n    Object.keys(rows[0]).forEach((key, index) => {\n      colMap[index] = false;\n    });\n  }\n\n  const _React$useState13 = React.useState(colMap),\n        _React$useState14 = _slicedToArray(_React$useState13, 2),\n        selectedCols = _React$useState14[0],\n        setSelectedCols = _React$useState14[1];\n\n  function handleRequestSort(event, property) {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  }\n\n  function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n, index) => index);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  }\n\n  function handleCheckboxClick(event, selectedIndex) {\n    let tempSelected = [...selected];\n    const index = tempSelected.indexOf(selectedIndex);\n\n    if (index === -1) {\n      setSelected([...selected, selectedIndex]);\n    } else {\n      tempSelected.splice(index, 1);\n      setSelected(tempSelected);\n    }\n  }\n\n  async function handleDeleteClick(event) {\n    rows = removeMultipleIndices(rows, selected);\n    updateFile({\n      fileId,\n      contents: [csvData[0], ...rows]\n    }).then(res => {\n      importFileFromDB(res.files.file.fileid);\n      setSelected([]);\n    });\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  }\n\n  function handleChangeDense(event) {\n    setDense(event.target.checked);\n  }\n\n  function handleColSelected(colIndex) {\n    const newSelectedCols = _objectSpread({}, selectedCols, {\n      [colIndex]: !selectedCols[colIndex]\n    });\n\n    onSelectedCol(newSelectedCols);\n    setSelectedCols(newSelectedCols);\n  }\n\n  const isSelected = index => selected.length > 0 && selected.includes(index);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  rows = stableSort(rows, getSorting(order, orderBy));\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    },\n    __self: this\n  }, React.createElement(EnhancedTableToolbar, {\n    csvName: csvName,\n    handleDeleteClick: handleDeleteClick,\n    rows: rows,\n    fileId: fileId,\n    importFileFromDB: importFileFromDB,\n    numSelected: selected.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: dense ? 'small' : 'medium',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291\n    },\n    __self: this\n  }, React.createElement(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    csvData: csvData,\n    onColSelected: handleColSelected,\n    selectedCols: selectedCols,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }), React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, rows && rows.length > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(index);\n    const labelId = \"enhanced-table-checkbox-\".concat(index);\n    return React.createElement(TableRow, {\n      hover: true,\n      onClick: event => handleCheckboxClick(event, index),\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: index,\n      selected: isItemSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, React.createElement(Checkbox, {\n      checked: isItemSelected,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    })), row.map((value, index) => {\n      return React.createElement(TableCell, {\n        key: index,\n        className: selectedCols[index] ? classes.tableCellSelected : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, value);\n    }));\n  }) : React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337\n    },\n    __self: this\n  }, \"Choose dataset from dropdown.\"))), emptyRows > 0 && React.createElement(TableRow, {\n    style: {\n      height: 49 * emptyRows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342\n    },\n    __self: this\n  }))))), React.createElement(TablePagination, {\n    rowsPerPageOptions: [25, 50, 100, 200, 300],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    backIconButtonProps: {\n      'aria-label': 'previous page'\n    },\n    nextIconButtonProps: {\n      'aria-label': 'next page'\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348\n    },\n    __self: this\n  })), React.createElement(FormControlLabel, {\n    control: React.createElement(Switch, {\n      checked: dense,\n      onChange: handleChangeDense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365\n      },\n      __self: this\n    }),\n    label: \"Dense padding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }));\n};\n\nexport default EnhancedTable;","map":{"version":3,"sources":["/home/gabe/src/point-label-sharing/frontend/src/components/EnhancedTable.js"],"names":["React","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","CheckCircleOutlineIcon","CheckCircleIcon","Button","CSVLink","SimpleSelect","getSorting","stableSort","removeMultipleIndices","EnhancedTableHead","props","classes","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","csvData","onColSelected","selectedCols","createSortHandler","property","event","headerRow","length","header","map","columnName","id","disablePadding","label","row","index","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","spacer","flex","actions","title","EnhancedTableToolbar","rows","handleDeleteClick","importFileFromDB","useStyles","width","marginTop","paper","marginBottom","table","minWidth","tableWrapper","overflowX","border","clip","height","margin","overflow","padding","position","top","tableCellSelected","EnhancedTable","csvName","onSelectedCol","fileId","updateFile","slice","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","colMap","Object","keys","forEach","key","setSelectedCols","handleRequestSort","isDesc","handleSelectAllClick","target","checked","newSelecteds","n","handleCheckboxClick","selectedIndex","tempSelected","indexOf","splice","contents","then","res","files","file","fileid","handleChangePage","newPage","handleChangeRowsPerPage","value","handleChangeDense","handleColSelected","colIndex","newSelectedCols","isSelected","includes","emptyRows","Math","min","isItemSelected","labelId"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport Button from '@material-ui/core/Button';\nimport { CSVLink } from \"react-csv\";\nimport SimpleSelect from './SimpleSelect';\nimport { getSorting, stableSort, removeMultipleIndices } from '../helper.js';\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort, csvData, onColSelected, selectedCols } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  const headerRow = csvData && csvData.length > 0 ? csvData[0] : [];\n\n  const header = headerRow.map(columnName => {\n\n    return { \n      id: columnName,\n      disablePadding: false,\n      label: columnName\n    };\n  });\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all rows' }}\n          />\n        </TableCell>\n        {header.map((row, index) => {\n          return (<TableCell\n            key={index}\n            padding={row.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === index ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === index}\n              direction={order}\n              onClick={createSortHandler(index)}\n            >\n              {row.id}\n              {orderBy === index ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n            { csvData.length > 1 ?\n              <TableSortLabel\n                  active={true}\n                  direction='desc'\n                  IconComponent={selectedCols[index] ? CheckCircleIcon : CheckCircleOutlineIcon}\n                  onClick={event => onColSelected(index)}>\n                  </TableSortLabel> : \"\"\n            }\n          </TableCell>)\n        })}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.number.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n\n  const { numSelected, rows, handleDeleteClick, importFileFromDB } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      <div className={classes.title}>\n        {numSelected > 0 ? (\n          <Typography color=\"inherit\" variant=\"subtitle1\">\n            {numSelected} selected\n          </Typography>\n        ) : (\n          <Typography variant=\"h6\" id=\"tableTitle\">\n            <SimpleSelect importFileFromDB={importFileFromDB} />\n          </Typography>\n        )}\n      </div>\n      <div className={classes.spacer} />\n      <div className={classes.actions}>\n        {numSelected > 0 ? (\n          <Tooltip title=\"Delete\">\n            <IconButton onClick={handleDeleteClick} aria-label=\"delete\">\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        ) : \"\"}\n        <CSVLink data={rows}>\n          <Button variant=\"contained\" color=\"primary\">\n            Download\n          </Button>\n        </CSVLink>\n      </div>\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n  tableCellSelected: {\n    backgroundColor: \"#f7f7f7\"\n  }\n}));\n\nconst EnhancedTable  = (props) => {\n  const { csvData, csvName, importFileFromDB, onSelectedCol, fileId, updateFile } = props;\n  let rows = csvData && csvData.length > 0 ? csvData.slice(1) : [];\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState(0);\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(true);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n  let colMap = {};\n  if (rows && rows.length > 0) {\n    Object.keys(rows[0]).forEach((key, index) => {\n      colMap[index] = false;\n    });\n  }\n  \n  const [selectedCols, setSelectedCols] = React.useState(colMap)\n  function handleRequestSort(event, property) {\n    const isDesc = orderBy === property && order === 'desc';\n    setOrder(isDesc ? 'asc' : 'desc');\n    setOrderBy(property);\n  }\n\n  function handleSelectAllClick(event) {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n, index) => index);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  }\n\n  function handleCheckboxClick(event, selectedIndex) {\n\n    let tempSelected = [...selected];\n    const index = tempSelected.indexOf(selectedIndex);\n\n    if (index === -1) {\n      setSelected([...selected, selectedIndex]);\n    } else {\n      tempSelected.splice(index, 1);\n      setSelected(tempSelected);\n    }\n  }\n\n  async function handleDeleteClick(event) {\n\n    rows = removeMultipleIndices(rows, selected);\n\n    updateFile({\n      fileId,\n      contents: [csvData[0], ...rows]\n    }).then(res => {\n        importFileFromDB(res.files.file.fileid)\n        setSelected([]);\n    });\n    \n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  }\n\n  function handleChangeDense(event) {\n    setDense(event.target.checked);\n  }\n\n  function handleColSelected(colIndex) {\n    const newSelectedCols = { ...selectedCols, [colIndex]: !selectedCols[colIndex] }\n    onSelectedCol(newSelectedCols);\n    setSelectedCols(newSelectedCols);\n  }\n\n  const isSelected = index => selected.length > 0 && selected.includes(index);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  \n  rows = stableSort(rows, getSorting(order, orderBy));\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar csvName={csvName} handleDeleteClick={handleDeleteClick} rows={rows} fileId={fileId} importFileFromDB={importFileFromDB} numSelected={selected.length} />\n        <div className={classes.tableWrapper}>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n              csvData={csvData}\n              onColSelected={handleColSelected}\n              selectedCols={selectedCols}\n            />\n            <TableBody>\n              {rows && rows.length > 0 ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(index);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                                    \n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleCheckboxClick(event, index)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={index}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      { row.map((value, index) => {\n                          return <TableCell key={index} className={selectedCols[index] ? classes.tableCellSelected : \"\"}>{value}</TableCell>;\n                      })}\n                    </TableRow>\n                  );\n                }) : (<TableRow>\n                      <TableCell>\n                        <Typography variant=\"h6\">Choose dataset from dropdown.</Typography>\n                      </TableCell>\n                      </TableRow>)}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[25, 50, 100, 200, 300]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'previous page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'next page',\n          }}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n        />\n    </div>\n  );\n}\n\nexport default EnhancedTable;"]},"metadata":{},"sourceType":"module"}