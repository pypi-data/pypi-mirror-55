{"ast":null,"code":"import _slicedToArray from \"/home/gabe/src/point-label-sharing/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gabe/src/point-label-sharing/frontend/src/components/tool_dialogs/SplitDialogContent.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Switch from '@material-ui/core/Switch';\nimport SimpleTable from './SimpleTable';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(2)\n  },\n  dense: {\n    marginTop: theme.spacing(1),\n    width: 100\n  },\n  menu: {\n    width: 200\n  },\n  margin: {\n    margin: theme.spacing(1)\n  }\n}));\n\nconst SplitDialogContent = props => {\n  const previewData = props.previewData,\n        selectedCols = props.selectedCols,\n        open = props.open,\n        handleClose = props.handleClose,\n        title = props.title,\n        createRule = props.createRule,\n        applyRule = props.applyRule,\n        fileId = props.fileId,\n        importFileFromDB = props.importFileFromDB,\n        handleAddRule = props.handleAddRule;\n  const classes = useStyles();\n\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        delimeter = _React$useState2[0],\n        setDelimeter = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        sections = _React$useState4[0],\n        setSections = _React$useState4[1];\n\n  const _React$useState5 = React.useState(false),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        keepDelimeter = _React$useState6[0],\n        setKeepDelimeter = _React$useState6[1];\n\n  const handleChange = event => {\n    setKeepDelimeter(event.target.checked);\n  };\n\n  function handleApplyRule(e) {\n    createRule({\n      templateId: \"split\",\n      data: {\n        'cols': selectedCols,\n        'args': [delimeter, keepDelimeter, sections]\n      }\n    }).then(res => {\n      const ruleData = {\n        ruleid: res.rules.response.ruleid,\n        template: \"split\"\n      };\n      console.log(ruleData);\n      handleAddRule(ruleData);\n      applyRule({\n        ruleId: res.rules.response.ruleid,\n        fileId\n      }).then(res => {\n        importFileFromDB(res.rules.response.fileid);\n      });\n    });\n    handleClose();\n  }\n\n  function handleDelimeterChange(e) {\n    setDelimeter(e.target.value);\n  }\n\n  function handleSectionsClicked(sections) {\n    setSections(sections);\n  }\n\n  return React.createElement(Dialog, {\n    fullWidth: true,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, title), React.createElement(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(DialogContentText, {\n    color: \"textPrimary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Split phrases by a chosen delimeter.\"), React.createElement(TextField, {\n    id: \"outlined-dense\",\n    label: \"Delimeter\",\n    className: clsx(classes.textField, classes.dense),\n    margin: \"dense\",\n    variant: \"outlined\",\n    onChange: handleDelimeterChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(DialogContentText, {\n    color: \"textPrimary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"Keep delimeter\"), React.createElement(Switch, {\n    checked: keepDelimeter,\n    onChange: handleChange,\n    color: \"primary\",\n    inputProps: {\n      'aria-label': 'primary checkbox'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(DialogContentText, {\n    color: \"textPrimary\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Chosen Sections: \", sections.join(\", \")), React.createElement(DialogContentText, {\n    color: \"textPrimary\",\n    variant: \"h6\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"PREVIEW:\"), selectedCols.length > 0 ? React.createElement(SimpleTable, {\n    onSectionsClicked: handleSectionsClicked,\n    delimeterAndSections: [delimeter, sections],\n    previewData: previewData,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }) : \"First, choose the columns you would like to split.\"), React.createElement(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Cancel\"), React.createElement(Button, {\n    onClick: handleApplyRule,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \"Apply Rule\")));\n};\n\nexport default connect(null, actions)(SplitDialogContent);","map":{"version":3,"sources":["/home/gabe/src/point-label-sharing/frontend/src/components/tool_dialogs/SplitDialogContent.js"],"names":["React","clsx","makeStyles","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Switch","SimpleTable","connect","actions","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","marginBottom","dense","marginTop","width","menu","margin","SplitDialogContent","props","previewData","selectedCols","open","handleClose","title","createRule","applyRule","fileId","importFileFromDB","handleAddRule","classes","useState","delimeter","setDelimeter","sections","setSections","keepDelimeter","setKeepDelimeter","handleChange","event","target","checked","handleApplyRule","e","templateId","data","then","res","ruleData","ruleid","rules","response","template","console","log","ruleId","fileid","handleDelimeterChange","value","handleSectionsClicked","join","length"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Switch from '@material-ui/core/Switch';\nimport SimpleTable from './SimpleTable';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      marginBottom: theme.spacing(2),\n    },\n    dense: {\n      marginTop: theme.spacing(1),\n      width: 100\n    },\n    menu: {\n      width: 200,\n    },\n    margin: {\n        margin: theme.spacing(1),\n    }\n  }));\n\nconst SplitDialogContent = (props) => {\n    const { previewData, selectedCols, open, handleClose, title, createRule, applyRule, fileId, importFileFromDB, handleAddRule  } = props;\n    const classes = useStyles();\n\n    const [delimeter, setDelimeter] = React.useState(\"\");\n    const [sections, setSections] = React.useState([]);\n\n    const [keepDelimeter, setKeepDelimeter] = React.useState(false);\n    \n    const handleChange = event => {\n        setKeepDelimeter(event.target.checked);\n    };\n\n    function handleApplyRule(e) {\n        createRule({\n            templateId: \"split\",\n            data: {\n                'cols': selectedCols,\n                'args': [delimeter, keepDelimeter, sections]\n            }\n        }).then(res => {\n            const ruleData = {\n                ruleid: res.rules.response.ruleid,\n                template: \"split\"\n            };\n\n            console.log(ruleData);\n\n            handleAddRule(ruleData);\n\n            applyRule({\n                ruleId: res.rules.response.ruleid,\n                fileId\n            }).then(res => {\n                importFileFromDB(res.rules.response.fileid);\n            });\n        });\n\n        handleClose();\n\n    }\n\n    function handleDelimeterChange(e) {\n        setDelimeter(e.target.value);\n    }\n\n    function handleSectionsClicked(sections) {\n        setSections(sections);\n    }\n   \n    return (\n\n        <Dialog fullWidth={true} open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n            <DialogContent>\n                <DialogContentText color=\"textPrimary\">\n                Split phrases by a chosen delimeter.\n                </DialogContentText>\n                <TextField\n                    id=\"outlined-dense\"\n                    label=\"Delimeter\"\n                    className={clsx(classes.textField, classes.dense)}\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    onChange={handleDelimeterChange}\n                />\n                <DialogContentText color=\"textPrimary\">\n                Keep delimeter\n                </DialogContentText>\n                <Switch\n                    checked={keepDelimeter}\n                    onChange={handleChange}\n                    color=\"primary\"\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                />\n                <DialogContentText color=\"textPrimary\" variant=\"subtitle1\">\n                    Chosen Sections: {sections.join(\", \")}\n\n                </DialogContentText>\n                <DialogContentText color=\"textPrimary\" variant=\"h6\">\n                    PREVIEW:\n\n                </DialogContentText>\n                \n                { selectedCols.length > 0 ? <SimpleTable onSectionsClicked={handleSectionsClicked} delimeterAndSections={[delimeter, sections]} previewData={previewData} /> : \"First, choose the columns you would like to split.\"} \n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={handleApplyRule} color=\"primary\">\n                    Apply Rule\n                </Button>\n            </DialogActions>\n        </Dialog>        \n    );\n}\n\nexport default connect(null, actions)(SplitDialogContent);"]},"metadata":{},"sourceType":"module"}