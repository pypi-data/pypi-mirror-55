{"ast":null,"code":"import _slicedToArray from \"/home/gabe/src/point-label-sharing/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gabe/src/point-label-sharing/frontend/src/components/tool_dialogs/RangeSlider.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n    padding: 20\n  },\n  slider: {\n    marginTop: 40\n  }\n});\n\nfunction valuetext(value) {\n  return \"\".concat(value, \" chars\");\n}\n\nexport default function RangeSlider(props) {\n  const classes = useStyles();\n\n  const _React$useState = React.useState([props.minValue, props.maxValue]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        value = _React$useState2[0],\n        setValue = _React$useState2[1];\n\n  const onSliderChange = props.onSliderChange;\n\n  const handleChange = (event, newValue) => {\n    onSliderChange(newValue);\n    setValue(newValue);\n  };\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    id: \"range-slider\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.label), React.createElement(Slider, {\n    max: props.maxValue,\n    min: props.minValue,\n    value: value,\n    onChange: handleChange,\n    valueLabelDisplay: \"on\",\n    \"aria-labelledby\": \"range-slider\",\n    getAriaValueText: valuetext,\n    className: classes.slider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/gabe/src/point-label-sharing/frontend/src/components/tool_dialogs/RangeSlider.js"],"names":["React","makeStyles","Typography","Slider","useStyles","root","width","padding","slider","marginTop","valuetext","value","RangeSlider","props","classes","useState","minValue","maxValue","setValue","onSliderChange","handleChange","event","newValue","label"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAC;AAC3BI,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,GADH;AAEJC,IAAAA,OAAO,EAAE;AAFL,GADqB;AAK3BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,SAAS,EAAE;AADL;AALmB,CAAD,CAA5B;;AAUA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,mBAAUA,KAAV;AACD;;AAED,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,QAAMC,OAAO,GAAGV,SAAS,EAAzB;;AADyC,0BAEfJ,KAAK,CAACe,QAAN,CAAe,CAACF,KAAK,CAACG,QAAP,EAAiBH,KAAK,CAACI,QAAvB,CAAf,CAFe;AAAA;AAAA,QAElCN,KAFkC;AAAA,QAE3BO,QAF2B;;AAAA,QAGjCC,cAHiC,GAGdN,KAHc,CAGjCM,cAHiC;;AAIzC,QAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCH,IAAAA,cAAc,CAACG,QAAD,CAAd;AACAJ,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAER,OAAO,CAACT,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAC,cAAf;AAA8B,IAAA,YAAY,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGQ,KAAK,CAACU,KADT,CADF,EAIE,oBAAC,MAAD;AACE,IAAA,GAAG,EAAEV,KAAK,CAACI,QADb;AAEE,IAAA,GAAG,EAAEJ,KAAK,CAACG,QAFb;AAGE,IAAA,KAAK,EAAEL,KAHT;AAIE,IAAA,QAAQ,EAAES,YAJZ;AAKE,IAAA,iBAAiB,EAAC,IALpB;AAME,uBAAgB,cANlB;AAOE,IAAA,gBAAgB,EAAEV,SAPpB;AAQE,IAAA,SAAS,EAAEI,OAAO,CAACN,MARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAiBD","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nconst useStyles = makeStyles({\n  root: {\n    width: 300,\n    padding: 20\n  },\n  slider: {\n    marginTop: 40\n  }\n});\n\nfunction valuetext(value) {\n  return `${value} chars`;\n}\n\nexport default function RangeSlider(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState([props.minValue, props.maxValue]);\n  const { onSliderChange } = props;\n  const handleChange = (event, newValue) => {\n    onSliderChange(newValue);\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Typography id=\"range-slider\" gutterBottom>\n        {props.label}\n      </Typography>\n      <Slider\n        max={props.maxValue}\n        min={props.minValue}\n        value={value}\n        onChange={handleChange}\n        valueLabelDisplay=\"on\"\n        aria-labelledby=\"range-slider\"\n        getAriaValueText={valuetext}\n        className={classes.slider}\n      />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}