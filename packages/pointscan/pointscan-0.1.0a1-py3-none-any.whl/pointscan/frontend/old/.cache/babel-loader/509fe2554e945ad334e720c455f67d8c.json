{"ast":null,"code":"import _slicedToArray from \"/home/gabe/src/point-label-sharing/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/home/gabe/src/point-label-sharing/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/gabe/src/point-label-sharing/frontend/src/components/MiniDrawer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport StrikethroughSIcon from '@material-ui/icons/StrikethroughS';\nimport FindReplaceIcon from '@material-ui/icons/FindReplace';\nimport HorizontalSplitIcon from '@material-ui/icons/HorizontalSplit';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport LinearScaleIcon from '@material-ui/icons/LinearScale';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { TrimDialogContent, ReplaceDialogContent, SplitDialogContent, RegexDialogContent, RemoveDialogContent } from \"./Dialogs\";\nimport EnhancedTable from './EnhancedTable';\nimport { sliceData } from '../helper';\nconst drawerWidth = 240;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: \"calc(100% - \".concat(drawerWidth, \"px)\"),\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  hide: {\n    display: 'none'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap'\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1\n    }\n  },\n  toolbar: _objectSpread({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px'\n  }, theme.mixins.toolbar),\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\n\nconst MiniDrawer = props => {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const _React$useState = React.useState(true),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState(\"\"),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        action = _React$useState4[0],\n        setAction = _React$useState4[1];\n\n  const iconList = {\n    \"trim\": React.createElement(StrikethroughSIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }),\n    \"find and replace\": React.createElement(FindReplaceIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }),\n    \"split\": React.createElement(HorizontalSplitIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }),\n    \"regex\": React.createElement(LinearScaleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }),\n    \"remove\": React.createElement(RemoveCircleIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })\n  };\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        selectedCols = _React$useState6[0],\n        setSelectedCols = _React$useState6[1];\n\n  const _React$useState7 = React.useState(null),\n        _React$useState8 = _slicedToArray(_React$useState7, 2),\n        existingDialogData = _React$useState8[0],\n        setExistingDialogData = _React$useState8[1];\n\n  const _React$useState9 = React.useState([]),\n        _React$useState10 = _slicedToArray(_React$useState9, 2),\n        previewData = _React$useState10[0],\n        setPreviewData = _React$useState10[1];\n\n  const csvData = props.csvData,\n        csvName = props.csvName,\n        importFileFromDB = props.importFileFromDB,\n        appliedRules = props.appliedRules,\n        fileId = props.fileId,\n        deleteRule = props.deleteRule,\n        applyMultipleRules = props.applyMultipleRules,\n        getRule = props.getRule,\n        uploadFile = props.uploadFile,\n        updateFile = props.updateFile;\n\n  const _React$useState11 = React.useState(appliedRules),\n        _React$useState12 = _slicedToArray(_React$useState11, 2),\n        rules = _React$useState12[0],\n        setRules = _React$useState12[1];\n\n  function renderDialogByAction() {\n    switch (action) {\n      case \"Trim\":\n        return React.createElement(TrimDialogContent, {\n          existingData: existingDialogData,\n          importFileFromDB: importFileFromDB,\n          fileId: fileId,\n          open: true,\n          title: action,\n          handleClose: () => setAction(\"\"),\n          handleAddRule: rule => setRules([...rules, rule]),\n          selectedCols: selectedCols,\n          previewData: previewData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        });\n\n      case \"Find and Replace\":\n        return React.createElement(ReplaceDialogContent, {\n          existingData: existingDialogData,\n          importFileFromDB: importFileFromDB,\n          fileId: fileId,\n          open: true,\n          title: action,\n          handleClose: () => setAction(\"\"),\n          handleAddRule: rule => setRules([...rules, rule]),\n          selectedCols: selectedCols,\n          previewData: previewData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        });\n\n      case \"Split\":\n        return React.createElement(SplitDialogContent, {\n          existingData: existingDialogData,\n          importFileFromDB: importFileFromDB,\n          fileId: fileId,\n          open: true,\n          title: action,\n          handleClose: () => setAction(\"\"),\n          handleAddRule: rule => setRules([...rules, rule]),\n          selectedCols: selectedCols,\n          previewData: previewData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        });\n\n      case \"Regex\":\n        return React.createElement(RegexDialogContent, {\n          existingData: existingDialogData,\n          importFileFromDB: importFileFromDB,\n          fileId: fileId,\n          open: true,\n          title: action,\n          handleClose: () => setAction(\"\"),\n          handleAddRule: rule => setRules([...rules, rule]),\n          selectedCols: selectedCols,\n          previewData: previewData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        });\n\n      case \"Remove\":\n        return React.createElement(RemoveDialogContent, {\n          existingData: existingDialogData,\n          importFileFromDB: importFileFromDB,\n          fileId: fileId,\n          open: true,\n          title: action,\n          handleClose: () => setAction(\"\"),\n          handleAddRule: rule => setRules([...rules, rule]),\n          selectedCols: selectedCols,\n          previewData: previewData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        });\n\n      default:\n        return \"\";\n    }\n  }\n\n  function handleSelectedCol(colsSelected) {\n    var selectedIndexes = [];\n    Object.keys(colsSelected).forEach(key => {\n      if (colsSelected[key]) {\n        selectedIndexes.push(parseInt(key));\n      }\n    });\n    setSelectedCols(selectedIndexes);\n  }\n\n  function handleEditRule(ruleId, action) {\n    getRule({\n      ruleId\n    }).then(res => {\n      if (action === \"Find and replace\") {\n        setExistingDialogData(_objectSpread({}, res.rules.rule.args, {\n          ruleId\n        }));\n        setAction(\"Find and Replace\");\n      } else {\n        setExistingDialogData(_objectSpread({}, res.rules.rule.args, {\n          ruleId\n        }));\n        setAction(action);\n      }\n    });\n  }\n\n  function handleDeleteRule(ruleId) {\n    deleteRule({\n      fileId,\n      ruleId\n    }).then(res => {\n      applyMultipleRules({\n        ruleIds: res.rules.ruleIds,\n        fileId: res.rules.originalFile\n      }).then(({\n        rules\n      }) => {\n        importFileFromDB(rules.response.fileId);\n      });\n    });\n  }\n\n  function openDialog(action, selectedCols) {\n    console.log(csvData);\n    setPreviewData(sliceData(csvData, [0, 1, 2], selectedCols));\n    setExistingDialogData(null);\n    setAction(action);\n  }\n\n  function handleCapture({\n    target\n  }) {\n    uploadFile(target.files[0]);\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, renderDialogByAction(), React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }), React.createElement(AppBar, {\n    position: \"fixed\",\n    className: clsx(classes.appBar, {\n      [classes.appBarShift]: open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: () => setOpen(true),\n    edge: \"start\",\n    className: clsx(classes.menuButton, {\n      [classes.hide]: open\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  })), React.createElement(Typography, {\n    variant: \"h6\",\n    noWrap: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"Edit Building Datasets\"))), React.createElement(Drawer, {\n    variant: \"permanent\",\n    className: clsx(classes.drawer, {\n      [classes.drawerOpen]: open,\n      [classes.drawerClose]: !open\n    }),\n    classes: {\n      paper: clsx({\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open\n      })\n    },\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, \"TOOLS\"), React.createElement(IconButton, {\n    onClick: () => setOpen(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(ChevronRightIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }) : React.createElement(ChevronLeftIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237\n    },\n    __self: this\n  }, [\"Trim\", \"Find and Replace\", \"Split\", \"Regex\", \"Remove\"].map((action, index) => React.createElement(Tooltip, {\n    key: index,\n    title: action,\n    placement: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    onClick: () => openDialog(action, selectedCols, null),\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241\n    },\n    __self: this\n  }, iconList[action.toLowerCase()]), React.createElement(ListItemText, {\n    primary: action,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242\n    },\n    __self: this\n  }))), this), React.createElement(Tooltip, {\n    key: 5,\n    title: \"Upload\",\n    placement: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    key: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  }, React.createElement(CloudUploadIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248\n    },\n    __self: this\n  })), React.createElement(ListItemText, {\n    primary: \"Upload\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    accept: \".csv\",\n    className: classes.input,\n    id: \"csv-upload-button\",\n    onChange: handleCapture,\n    type: \"file\",\n    style: {\n      opacity: 0,\n      cursor: \"pointer\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250\n    },\n    __self: this\n  })))), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263\n    },\n    __self: this\n  }, \"APPLIED RULES\"), appliedRules.length > 0 ? appliedRules.map((rule, index) => React.createElement(Tooltip, {\n    key: index,\n    title: action,\n    placement: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    key: rule.ruleid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267\n    },\n    __self: this\n  }, iconList[rule.template]), React.createElement(ListItemText, {\n    primary: rule.template === \"find and replace\" ? \"Replace\" : rule.template.charAt(0).toUpperCase() + rule.template.slice(1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268\n    },\n    __self: this\n  }), React.createElement(IconButton, {\n    size: \"small\",\n    color: \"secondary\",\n    onClick: () => handleDeleteRule(rule.ruleid),\n    \"aria-label\": \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269\n    },\n    __self: this\n  })), !(rule.template === \"split\") ? React.createElement(IconButton, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: () => handleEditRule(rule.ruleid, rule.template.charAt(0).toUpperCase() + rule.template.slice(1)),\n    \"aria-label\": \"edit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  }, React.createElement(EditIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270\n    },\n    __self: this\n  })) : \"\"))) : \"No rules applied\")), React.createElement(\"main\", {\n    className: classes.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.toolbar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }), React.createElement(EnhancedTable, {\n    csvData: csvData,\n    csvName: csvName,\n    fileId: fileId,\n    updateFile: updateFile,\n    importFileFromDB: importFileFromDB,\n    onSelectedCol: handleSelectedCol,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278\n    },\n    __self: this\n  })));\n};\n\nexport default connect(null, actions)(MiniDrawer);","map":{"version":3,"sources":["/home/gabe/src/point-label-sharing/frontend/src/components/MiniDrawer.js"],"names":["React","clsx","connect","actions","makeStyles","useTheme","Drawer","AppBar","Toolbar","List","CssBaseline","Typography","Divider","IconButton","MenuIcon","ChevronLeftIcon","ChevronRightIcon","ListItem","ListItemIcon","ListItemText","StrikethroughSIcon","FindReplaceIcon","HorizontalSplitIcon","CloudUploadIcon","LinearScaleIcon","RemoveCircleIcon","DeleteIcon","EditIcon","Tooltip","TrimDialogContent","ReplaceDialogContent","SplitDialogContent","RegexDialogContent","RemoveDialogContent","EnhancedTable","sliceData","drawerWidth","useStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","props","classes","useState","open","setOpen","action","setAction","iconList","selectedCols","setSelectedCols","existingDialogData","setExistingDialogData","previewData","setPreviewData","csvData","csvName","importFileFromDB","appliedRules","fileId","deleteRule","applyMultipleRules","getRule","uploadFile","updateFile","rules","setRules","renderDialogByAction","rule","handleSelectedCol","colsSelected","selectedIndexes","Object","keys","forEach","key","push","parseInt","handleEditRule","ruleId","then","res","args","handleDeleteRule","ruleIds","originalFile","response","openDialog","console","log","handleCapture","target","files","paper","direction","map","index","toLowerCase","input","opacity","cursor","length","ruleid","template","charAt","toUpperCase","slice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { connect } from 'react-redux';\nimport * as actions from '../actions';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport StrikethroughSIcon from '@material-ui/icons/StrikethroughS';\nimport FindReplaceIcon from '@material-ui/icons/FindReplace';\nimport HorizontalSplitIcon from '@material-ui/icons/HorizontalSplit';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport LinearScaleIcon from '@material-ui/icons/LinearScale';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { TrimDialogContent, ReplaceDialogContent, SplitDialogContent, RegexDialogContent, RemoveDialogContent } from  \"./Dialogs\";\nimport EnhancedTable from './EnhancedTable';\nimport { sliceData } from '../helper';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));\n\nconst MiniDrawer = (props) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(true);\n  const [action, setAction] = React.useState(\"\");\n  const iconList = {\n    \"trim\": <StrikethroughSIcon />, \n    \"find and replace\": <FindReplaceIcon />, \n    \"split\": <HorizontalSplitIcon />,\n    \"regex\": <LinearScaleIcon />,\n    \"remove\": <RemoveCircleIcon />\n  };\n  const [selectedCols, setSelectedCols] = React.useState([]);\n  const [existingDialogData, setExistingDialogData] = React.useState(null);\n  const [previewData, setPreviewData] = React.useState([]);\n  const { csvData, csvName, importFileFromDB, appliedRules, fileId, deleteRule, applyMultipleRules, getRule, uploadFile, updateFile } = props;\n  const [rules, setRules] = React.useState(appliedRules);\n\n  function renderDialogByAction() {\n\n    switch(action) {\n      \n      case \"Trim\":\n        return <TrimDialogContent existingData={existingDialogData} importFileFromDB={importFileFromDB} fileId={fileId} open={true} title={action} handleClose={() => setAction(\"\")} handleAddRule={(rule) => setRules([...rules, rule])} selectedCols={selectedCols} previewData={previewData} />;\n      case \"Find and Replace\":\n        return <ReplaceDialogContent existingData={existingDialogData} importFileFromDB={importFileFromDB} fileId={fileId} open={true} title={action} handleClose={() => setAction(\"\")} handleAddRule={(rule) => setRules([...rules, rule])} selectedCols={selectedCols} previewData={previewData} />;\n      case \"Split\":\n        return <SplitDialogContent existingData={existingDialogData} importFileFromDB={importFileFromDB} fileId={fileId} open={true} title={action} handleClose={() => setAction(\"\")} handleAddRule={(rule) => setRules([...rules, rule])} selectedCols={selectedCols} previewData={previewData} />;\n      case \"Regex\":\n        return <RegexDialogContent existingData={existingDialogData} importFileFromDB={importFileFromDB} fileId={fileId} open={true} title={action} handleClose={() => setAction(\"\")} handleAddRule={(rule) => setRules([...rules, rule])} selectedCols={selectedCols} previewData={previewData} />;\n      case \"Remove\":\n        return <RemoveDialogContent existingData={existingDialogData} importFileFromDB={importFileFromDB} fileId={fileId} open={true} title={action} handleClose={() => setAction(\"\")} handleAddRule={(rule) => setRules([...rules, rule])} selectedCols={selectedCols} previewData={previewData} />;\n      default:\n        return \"\";\n    }\n  }\n\n  function handleSelectedCol(colsSelected) {\n    var selectedIndexes = [];\n    Object.keys(colsSelected).forEach(key => {\n      if (colsSelected[key]) {\n        selectedIndexes.push(parseInt(key));\n      }\n    });\n\n    setSelectedCols(selectedIndexes);\n  }\n\n  function handleEditRule(ruleId, action) {\n    getRule({\n      ruleId\n    }).then(res => {\n      if (action === \"Find and replace\") {\n        setExistingDialogData({ ...res.rules.rule.args, ruleId });\n        setAction(\"Find and Replace\");\n      } else {\n        setExistingDialogData({ ...res.rules.rule.args, ruleId });\n        setAction(action);\n      }\n\n    });\n\n  \n  }\n\n  function handleDeleteRule(ruleId) {\n\n    deleteRule({\n      fileId,\n      ruleId\n    }).then(res => {\n      applyMultipleRules({\n        ruleIds: res.rules.ruleIds,\n        fileId: res.rules.originalFile\n      }).then(({ rules }) => {\n        importFileFromDB(rules.response.fileId)\n      })\n    })\n  }\n\n  function openDialog(action, selectedCols) {\n    console.log(csvData);\n    setPreviewData(sliceData(csvData, [0, 1, 2], selectedCols));\n    setExistingDialogData(null);\n    setAction(action);\n  }\n\n  function handleCapture({ target }) {\n   \n    uploadFile(target.files[0]);\n\n  }\n\n  return (\n    <div className={classes.root}>\n      {renderDialogByAction()}\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={() => setOpen(true)}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" noWrap>\n            Edit Building Datasets\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbar}>\n          <h3>TOOLS</h3>\n          <IconButton onClick={() => setOpen(false)}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {[\"Trim\", \"Find and Replace\", \"Split\", \"Regex\", \"Remove\"].map((action, index) => (\n            <Tooltip key={index} title={action} placement=\"right\">\n              <ListItem button onClick={() => openDialog(action, selectedCols, null)} key={index}>\n                <ListItemIcon>{iconList[action.toLowerCase()]}</ListItemIcon>\n                <ListItemText primary={action} />\n              </ListItem>\n            </Tooltip>\n          ), this)}\n          <Tooltip key={5} title={\"Upload\"} placement=\"right\">\n              <ListItem button key={5}>\n                <ListItemIcon>{<CloudUploadIcon />}</ListItemIcon>\n                <ListItemText primary={\"Upload\"} />\n                <input\n                    accept=\".csv\"\n                    className={classes.input}\n                    id=\"csv-upload-button\"\n                    onChange={handleCapture}\n                    type=\"file\"\n                    style={{opacity: 0, cursor: \"pointer\"}}\n                />\n              </ListItem>\n          </Tooltip>\n        </List>\n        <Divider />\n        <List>\n           <h3>APPLIED RULES</h3>\n          {appliedRules.length > 0 ? appliedRules.map((rule, index) => (\n            <Tooltip key={index} title={action} placement=\"right\">\n              <ListItem button key={rule.ruleid}>\n                <ListItemIcon>{iconList[rule.template]}</ListItemIcon>\n                <ListItemText primary={rule.template === \"find and replace\" ? \"Replace\" : rule.template.charAt(0).toUpperCase() + rule.template.slice(1)} />\n                <IconButton size=\"small\" color=\"secondary\" onClick={() => handleDeleteRule(rule.ruleid)} aria-label=\"delete\"><DeleteIcon/></IconButton>\n                { !(rule.template === \"split\") ? <IconButton size=\"small\" color=\"primary\" onClick={() => handleEditRule(rule.ruleid, rule.template.charAt(0).toUpperCase() + rule.template.slice(1))} aria-label=\"edit\"><EditIcon/></IconButton> : \"\"}\n              </ListItem>\n            </Tooltip>\n          )) : \"No rules applied\"}\n        </List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.toolbar} />\n        <EnhancedTable csvData={csvData} csvName={csvName} fileId={fileId} updateFile={updateFile} importFileFromDB={importFileFromDB} onSelectedCol={handleSelectedCol} />\n      </main>\n    </div>\n  );\n\n\n}\n\nexport default connect(null, actions)(MiniDrawer);"]},"metadata":{},"sourceType":"module"}