{"version":3,"sources":["webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/components/hui-entity-editor.ts"],"names":["HaEntityPicker","_LitElement","[object Object]","args","super","_initialize","this","property","type","Boolean","attribute","memoizeOne","hass","domainFilter","entityFilter","states","entityIds","Object","keys","filter","eid","substr","indexOf","sort","map","key","stateObj","entity_id","value","changedProps","_get","_getPrototypeOf","prototype","call","has","_opened","_hass","_getStates","html","_value","allowCustomEntity","root","_owner","model","firstElementChild","innerHTML","querySelector","item","textContent","computeStateName","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","length","ev","detail","setTimeout","fireEvent","css","LitElement","customElements","define","__webpack_require__","d","__webpack_exports__","configElementStyle","_decorate","customElement","F","kind","decorators","entities","entityConf","index","entity","_entityDown","_entityUp","_addEntity","target","newConfigEntities","concat","newEntities","splice","assign","static"],"mappings":"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","file":"chunk.008270e11362ed1ea8a9.js","sourcesContent":["import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  @property({ attribute: \"domain-filter\" }) public domainFilter?: string;\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      domainFilter: this[\"domainFilter\"],\n      entityFilter: this[\"entityFilter\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (domainFilter) {\n        entityIds = entityIds.filter(\n          (eid) => eid.substr(0, eid.indexOf(\".\")) === domainFilter\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.domainFilter,\n      this.entityFilter\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.clear\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.show_entities\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this.value = ev.detail.value;\n      setTimeout(() => {\n        fireEvent(this, \"value-changed\", { value: this.value });\n        fireEvent(this, \"change\");\n      }, 0);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@polymer/paper-icon-button/paper-icon-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { EntityConfig } from \"../entity-rows/types\";\n\nimport \"../../../components/entity/ha-entity-picker\";\nimport { EditorTarget } from \"../editor/types\";\n\n@customElement(\"hui-entity-editor\")\nexport class HuiEntityEditor extends LitElement {\n  @property() protected hass?: HomeAssistant;\n\n  @property() protected entities?: EntityConfig[];\n\n  @property() protected label?: string;\n\n  protected render(): TemplateResult | void {\n    if (!this.entities) {\n      return html``;\n    }\n\n    return html`\n      <h3>\n        ${this.label ||\n          this.hass!.localize(\n            \"ui.panel.lovelace.editor.card.generic.entities\"\n          ) +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.required\"\n            ) +\n            \")\"}\n      </h3>\n      <div class=\"entities\">\n        ${this.entities.map((entityConf, index) => {\n          return html`\n            <div class=\"entity\">\n              <ha-entity-picker\n                .hass=\"${this.hass}\"\n                .value=\"${entityConf.entity}\"\n                .index=\"${index}\"\n                @change=\"${this._valueChanged}\"\n                allow-custom-entity\n              ></ha-entity-picker>\n              <paper-icon-button\n                title=\"Move entity down\"\n                icon=\"hass:arrow-down\"\n                .index=\"${index}\"\n                @click=\"${this._entityDown}\"\n                ?disabled=\"${index === this.entities!.length - 1}\"\n              ></paper-icon-button>\n              <paper-icon-button\n                title=\"Move entity up\"\n                icon=\"hass:arrow-up\"\n                .index=\"${index}\"\n                @click=\"${this._entityUp}\"\n                ?disabled=\"${index === 0}\"\n              ></paper-icon-button>\n            </div>\n          `;\n        })}\n        <ha-entity-picker\n          .hass=\"${this.hass}\"\n          @change=\"${this._addEntity}\"\n        ></ha-entity-picker>\n      </div>\n    `;\n  }\n\n  private _addEntity(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    if (target.value === \"\") {\n      return;\n    }\n    const newConfigEntities = this.entities!.concat({\n      entity: target.value as string,\n    });\n    target.value = \"\";\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  private _entityUp(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! - 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! - 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _entityDown(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newEntities = this.entities!.concat();\n\n    [newEntities[target.index! + 1], newEntities[target.index!]] = [\n      newEntities[target.index!],\n      newEntities[target.index! + 1],\n    ];\n\n    fireEvent(this, \"entities-changed\", { entities: newEntities });\n  }\n\n  private _valueChanged(ev: Event): void {\n    const target = ev.target! as EditorTarget;\n    const newConfigEntities = this.entities!.concat();\n\n    if (target.value === \"\") {\n      newConfigEntities.splice(target.index!, 1);\n    } else {\n      newConfigEntities[target.index!] = {\n        ...newConfigEntities[target.index!],\n        entity: target.value!,\n      };\n    }\n\n    fireEvent(this, \"entities-changed\", { entities: newConfigEntities });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .entities {\n        padding-left: 20px;\n      }\n      .entity {\n        display: flex;\n        align-items: flex-end;\n      }\n      .entity ha-entity-picker {\n        flex-grow: 1;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-entity-editor\": HuiEntityEditor;\n  }\n}\n"],"sourceRoot":""}