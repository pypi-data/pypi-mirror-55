{"version":3,"sources":["webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-alarm-panel-card-editor.ts"],"names":["Polymer","_template","html","_templateObject","is","__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","behaviors","PaperItemBehavior","rowRenderer","root","_owner","model","firstElementChild","innerHTML","querySelector","stateObj","item","textContent","computeStateName","entity_id","HaEntityPicker","property","type","Boolean","attribute","memoizeOne","hass","domainFilter","entityFilter","states","entityIds","Object","keys","filter","eid","substr","indexOf","sort","map","key","_this2","changedProps","_get","_getPrototypeOf","prototype","this","call","has","_opened","_hass","_getStates","_value","allowCustomEntity","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","_templateObject2","length","_templateObject3","ev","detail","_this3","setTimeout","fireEvent","css","_templateObject4","LitElement","customElements","define","_decorate","customElement","_initialize","_LitElement","F","_LitElement2","HuiThemeSelectEditor","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","args","Array","_key","apply","concat","_assertThisInitialized","_inherits","kind","decorators","themes","_changed","theme","static","target","configElementStyle","cardConfigStruct","entity","name","HuiAlarmPanelCardEditor","config","_config","_entity","_name","_states","state","index","_stateRemoved","_stateAdded","_theme","_templateObject5","Number","newStates","splice","assign","push","configValue"],"mappings":";knCA4CAA,YAAQ,CACNC,UAAWC,YAAFC,KAmCTC,GAAI,mEChFNC,EAAAC,EAAAC,EAAA,sBAAAC,IAIO,IAAMA,EAASC,YAAY,CAChCC,MAAO,CACLC,YCNG,SAAoBC,GACzB,MAAqB,iBAAVA,EACF,iCAEJA,EAAMC,SAAS,MACX,qDDEPC,KEPG,SAAgBF,GACrB,MAAqB,iBAAVA,EACF,4BAEJA,EAAMC,SAAS,MACX,k4BCgDXb,YAAQ,CACNC,UAAWC,YAAFC,KA2BTC,GAAI,kBACJW,UAAW,CAACC,+4HCxDd,IAAMC,EAAc,SAClBC,EACAC,EACAC,GAEKF,EAAKG,oBACRH,EAAKI,UAAL,qbAiBFJ,EAAKK,cAAc,eAAgBC,SAAWJ,EAAMK,KACpDP,EAAKK,cAAc,SAAUG,YAAcC,YAAiBP,EAAMK,MAClEP,EAAKK,cAAc,eAAgBG,YAAcN,EAAMK,KAAKG,WAGxDC,48MACHC,YAAS,CAAEC,KAAMC,mEACjBF,YAAS,CAAEC,KAAMC,kEACjBF,YAAS,CAAEC,KAAMC,QAASC,UAAW,yFAErCH,kEACAA,mEACAA,mEACAA,YAAS,CAAEG,UAAW,8EACtBH,0EACAA,YAAS,CAAEC,KAAMC,iEACjBF,2GAEoBI,YACnB,SACEC,EACAC,EACAC,GAEA,IAAIC,EAAuB,GAE3B,IAAKH,EACH,MAAO,GAET,IAAII,EAAYC,OAAOC,KAAKN,EAAKG,QAiBjC,OAfIF,IACFG,EAAYA,EAAUG,OACpB,SAACC,GAAD,OAASA,EAAIC,OAAO,EAAGD,EAAIE,QAAQ,QAAUT,KAIjDE,EAASC,EAAUO,OAAOC,IAAI,SAACC,GAAD,OAASb,EAAMG,OAAOU,KAEhDX,IACFC,EAASA,EAAOI,OACd,SAAClB,GAAD,OAEEA,EAASI,YAAcqB,EAAKrC,OAASyB,EAAcb,MAGlDc,yCAIX,SAAkBY,GAChBC,EAAAC,EA9CEvB,EA8CFwB,WAAA,UAAAC,MAAAC,KAAAD,KAAcJ,GAEVA,EAAaM,IAAI,UAAYF,KAAKG,UACpCH,KAAKI,MAAQJ,KAAKnB,0CAItB,WACE,IAAMG,EAASgB,KAAKK,WAClBL,KAAKI,MACLJ,KAAKlB,aACLkB,KAAKjB,cAGP,OAAOnC,YAAPC,IAIamC,EACAgB,KAAKM,OACMN,KAAKO,kBACb5C,EACMqC,KAAKQ,eACNR,KAAKS,cAGPT,KAAKU,eACMC,IAAfX,KAAKY,OAAuBZ,KAAKI,MACtCJ,KAAKI,MAAMS,SAAS,6CACpBb,KAAKY,MACAZ,KAAKM,OACFN,KAAKc,SAOfd,KAAK1C,MACHV,YADFmE,IAGmBf,KAAKnB,KAAMgC,SACtB,6CAUN,GACF7B,EAAOgC,OAAS,EACdpE,YADFqE,IAGmBjB,KAAKnB,KAAMgC,SACtB,oDAIMb,KAAKG,QAAU,eAAiB,kBAK5C,qCAMZ,WACE,OAAOH,KAAK1C,OAAS,+CAGvB,SAAuB4D,GACrBlB,KAAKG,QAAUe,EAAGC,OAAO7D,iDAG3B,SAAsB4D,GAAiC,IAAAE,EAAApB,KACpCkB,EAAGC,OAAO7D,QACV0C,KAAKM,SACpBN,KAAK1C,MAAQ4D,EAAGC,OAAO7D,MACvB+D,WAAW,WACTC,YAAUF,EAAM,gBAAiB,CAAE9D,MAAO8D,EAAK9D,QAC/CgE,YAAUF,EAAM,WACf,+CAIP,WACE,OAAOG,YAAPC,UA1IyBC,KAwJ7BC,eAAeC,OAAO,mBAAoBpD,22QCpL1CqD,CAAA,CADCC,YAAc,4BACf,SAAAC,EAAAC,GAAA,OAAAC,EAAA,SAAAC,GAAA,SAAAC,IAAA,IAAAC,EAAAC,mGAAAC,CAAArC,KAAAkC,GAAA,QAAAI,EAAAC,UAAAvB,OAAAwB,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,SAAA1C,KAAAoC,OAAAD,EAAArC,EAAAoC,IAAAjC,KAAA0C,MAAAR,EAAA,CAAAnC,MAAA4C,OAAAJ,mDAAAV,EAAAe,EAAAT,MAAA,yOAAAU,CAAAZ,EAAAH,GAAAG,EAAA,GAAAlF,EAAA,EAAA+F,KAAA,QAAAC,WAAA,CACGxE,eADHkB,IAAA,QAAApC,WAAA,IAAAyF,KAAA,QAAAC,WAAA,CAEGxE,eAFHkB,IAAA,QAAApC,WAAA,IAAAyF,KAAA,QAAAC,WAAA,CAGGxE,eAHHkB,IAAA,OAAApC,WAAA,IAAAyF,KAAA,SAAArD,IAAA,SAAApC,MAKE,WACE,IAAM2F,EAAS,CAAC,mBAAoB,WAAWL,OAC7C1D,OAAOC,KAAKa,KAAKnB,KAAMoE,OAAOA,QAAQzD,QAGxC,OAAO5C,YAAPC,IAEamD,KAAKY,OACZZ,KAAKnB,KAAMgC,SAAS,+CAClB,KACAb,KAAKnB,KAAMgC,SACT,iDAEF,IAEcb,KAAKkD,SAIRlD,KAAK1C,MAGhB2F,EAAOxD,IAAI,SAAC0D,GACZ,OAAOvG,YAAPmE,IACuBoC,EAAUA,QA7B7C,CAAAJ,KAAA,MAAAK,QAAA,EAAA1D,IAAA,SAAApC,MAqCE,WACE,OAAOiE,YAAPN,OAtCJ,CAAA8B,KAAA,SAAArD,IAAA,WAAApC,MA6CE,SAAiB4D,GACVlB,KAAKnB,MAA4B,KAApBqC,EAAGmC,OAAO/F,QAG5B0C,KAAK1C,MAAQ4D,EAAGmC,OAAO/F,MACvBgE,YAAUtB,KAAM,uBAlDsByB,8eCxBnC,IAAM6B,EAAqB1G,YAAHC,o2HCuB/B,IAAM0G,EAAmBrG,YAAO,CAC9BuB,KAAM,SACN+E,OAAQ,UACRC,KAAM,UACNzE,OAAQ,SACRmE,MAAO,YAIIO,80LAAb9B,CAAA,CADCC,YAAc,gCACf,SAAAC,EAAAC,GAAA,OAAAC,EAAA,SAAAC,GAAA,SAAAyB,IAAA,IAAAvB,EAAAC,mGAAAC,CAAArC,KAAA0D,GAAA,QAAApB,EAAAC,UAAAvB,OAAAwB,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAH,UAAAG,GAAA,SAAA1C,KAAAoC,OAAAD,EAAArC,EAAA4D,IAAAzD,KAAA0C,MAAAR,EAAA,CAAAnC,MAAA4C,OAAAJ,mDAAAV,EAAAe,EAAAT,MAAA,yOAAAU,CAAAY,EAAA3B,GAAA2B,EAAA,GAAA1G,EAAA,EAAA+F,KAAA,QAAAC,WAAA,CAEGxE,eAFHkB,IAAA,OAAApC,WAAA,IAAAyF,KAAA,QAAAC,WAAA,CAIGxE,eAJHkB,IAAA,UAAApC,WAAA,IAAAyF,KAAA,SAAArD,IAAA,YAAApC,MAME,SAAiBqG,GACfA,EAASJ,EAAiBI,GAC1B3D,KAAK4D,QAAUD,IARnB,CAAAZ,KAAA,MAAArD,IAAA,UAAApC,MAWE,WACE,OAAO0C,KAAK4D,QAASJ,QAAU,KAZnC,CAAAT,KAAA,MAAArD,IAAA,QAAApC,MAeE,WACE,OAAO0C,KAAK4D,QAASH,MAAQ,KAhBjC,CAAAV,KAAA,MAAArD,IAAA,UAAApC,MAmBE,WACE,OAAO0C,KAAK4D,QAAS5E,QAAU,KApBnC,CAAA+D,KAAA,MAAArD,IAAA,SAAApC,MAuBE,WACE,OAAO0C,KAAK4D,QAAST,OAAS,qBAxBlC,CAAAJ,KAAA,SAAArD,IAAA,SAAApC,MA2BE,WAA0C,IAAAqC,EAAAK,KACxC,IAAKA,KAAKnB,KACR,OAAOjC,YAAPC,KAKF,OAAOD,YAAPmE,IACIuC,IAGYtD,KAAKnB,KAAKgC,SAClB,gDACIb,KAAKnB,KAAKgC,SACd,iDAEOb,KAAKnB,KACJmB,KAAK6D,QACA,SAEJ7D,KAAKS,cAINT,KAAKnB,KAAKgC,SAClB,8CACIb,KAAKnB,KAAKgC,SACd,iDAEQb,KAAK8D,MACC,OACE9D,KAAKS,cAEET,KAAK+D,QAAQtE,IAAI,SAACuE,EAAOC,GAClD,OAAOrH,YAAPqE,IAEkB+C,EAGFC,EAEDtE,EAAKuE,iBAMVlE,KAAKnB,KAAKgC,SAClB,8DAEgBb,KAAKmE,YA7Cd,CAAC,WAAY,WAAY,YAAa,qBAgDpC1E,IAAI,SAACuE,GACZ,OAAOpH,YAAP4E,IACgBwC,KAMXhE,KAAKnB,KACJmB,KAAKoE,OACC,QACEpE,KAAKS,iBA3FjC,CAAAsC,KAAA,MAAAK,QAAA,EAAA1D,IAAA,SAAApC,MAiGE,WACE,OAAOiE,YAAP8C,OAlGJ,CAAAtB,KAAA,SAAArD,IAAA,gBAAApC,MAmHE,SAAsB4D,GACpB,GAAKlB,KAAK4D,SAAY5D,KAAK+D,SAAY/D,KAAKnB,KAA5C,CAIA,IAAMwE,EAASnC,EAAGmC,OACZY,EAAQK,OAAOjB,EAAO/F,OAC5B,GAAI2G,GAAS,EAAG,CACd,IAAMM,EAAYvE,KAAK+D,QACvBQ,EAAUC,OAAOP,EAAO,GACxBjE,KAAK4D,QAAL1E,OAAAuF,OAAA,GACKzE,KAAK4D,QADV,CAEE5E,OAAQuF,IAEVjD,YAAUtB,KAAM,iBAAkB,CAAE2D,OAAQ3D,KAAK4D,cAjIvD,CAAAb,KAAA,SAAArD,IAAA,cAAApC,MAqIE,SAAoB4D,GAClB,GAAKlB,KAAK4D,SAAY5D,KAAKnB,KAA3B,CAGA,IAAMwE,EAASnC,EAAGmC,OAClB,GAAKA,EAAO/F,SAAS0C,KAAK+D,QAAQxE,QAAQ8D,EAAO/F,QAAU,GAA3D,CAGA,IAAMiH,EAAYvE,KAAK+D,QACvBQ,EAAUG,KAAKrB,EAAO/F,OACtB0C,KAAK4D,QAAL1E,OAAAuF,OAAA,GACKzE,KAAK4D,QADV,CAEE5E,OAAQuF,IAEVlB,EAAO/F,MAAQ,GACfgE,YAAUtB,KAAM,iBAAkB,CAAE2D,OAAQ3D,KAAK4D,cApJrD,CAAAb,KAAA,SAAArD,IAAA,gBAAApC,MAuJE,SAAsB4D,GACpB,GAAKlB,KAAK4D,SAAY5D,KAAKnB,KAA3B,CAGA,UAAMwE,EAASnC,EAAGmC,OAClB,GAAIrD,KAAA,IAAA4C,OAASS,EAAOsB,gBAAmBtB,EAAO/F,MAG1C+F,EAAOsB,cACY,KAAjBtB,EAAO/F,aACF0C,KAAK4D,QAAQP,EAAOsB,aAE3B3E,KAAK4D,QAAL1E,OAAAuF,OAAA,GACKzE,KAAK4D,WADV,KAEGP,EAAOsB,cAAetB,EAAO/F,wGAIpCgE,YAAUtB,KAAM,iBAAkB,CAAE2D,OAAQ3D,KAAK4D,gBAzKRnC","file":"chunk.b7f6f57dc360ecc54e40.js","sourcesContent":["/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-\nor three- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text\nstyling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an\ninteractive list item with a fixed-width icon area, according to Material\nDesign. This is useful if the icons are of varying widths, but you want the item\nbodies to line up. Use this like a `<paper-item>`. The child node with the slot\nname `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area | `56px`\n`--paper-item-icon` | Mixin applied to the icon area | `{}`\n`--paper-icon-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  @property({ attribute: \"domain-filter\" }) public domainFilter?: string;\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      domainFilter: this[\"domainFilter\"],\n      entityFilter: this[\"entityFilter\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (domainFilter) {\n        entityIds = entityIds.filter(\n          (eid) => eid.substr(0, eid.indexOf(\".\")) === domainFilter\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.domainFilter,\n      this.entityFilter\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.clear\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.show_entities\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this.value = ev.detail.value;\n      setTimeout(() => {\n        fireEvent(this, \"value-changed\", { value: this.value });\n        fireEvent(this, \"change\");\n      }, 0);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { AlarmPanelCardConfig } from \"../../cards/types\";\n\nimport \"../../../../components/entity/ha-entity-picker\";\nimport \"../../../../components/ha-icon\";\nimport \"../../components/hui-theme-select-editor\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  entity: \"string?\",\n  name: \"string?\",\n  states: \"array?\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-alarm-panel-card-editor\")\nexport class HuiAlarmPanelCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: AlarmPanelCardConfig;\n\n  public setConfig(config: AlarmPanelCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _states(): string[] {\n    return this._config!.states || [];\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"Backend-selected\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    const states = [\"arm_home\", \"arm_away\", \"arm_night\", \"arm_custom_bypass\"];\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.entity\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .hass=\"${this.hass}\"\n          .value=\"${this._entity}\"\n          .configValue=${\"entity\"}\n          domain-filter=\"alarm_control_panel\"\n          @change=\"${this._valueChanged}\"\n          allow-custom-entity\n        ></ha-entity-picker>\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.name\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._name}\"\n          .configValue=\"${\"name\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <span>Used States</span> ${this._states.map((state, index) => {\n          return html`\n            <div class=\"states\">\n              <paper-item>${state}</paper-item>\n              <ha-icon\n                class=\"deleteState\"\n                .value=\"${index}\"\n                icon=\"hass:close\"\n                @click=${this._stateRemoved}\n              ></ha-icon>\n            </div>\n          `;\n        })}\n        <paper-dropdown-menu\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.alarm-panel.available_states\"\n          )}\"\n          @value-changed=\"${this._stateAdded}\"\n        >\n          <paper-listbox slot=\"dropdown-content\">\n            ${states.map((state) => {\n              return html`\n                <paper-item>${state}</paper-item>\n              `;\n            })}\n          </paper-listbox>\n        </paper-dropdown-menu>\n        <hui-theme-select-editor\n          .hass=\"${this.hass}\"\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @theme-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .states {\n        display: flex;\n        flex-direction: row;\n      }\n      .deleteState {\n        visibility: hidden;\n      }\n      .states:hover > .deleteState {\n        visibility: visible;\n      }\n      ha-icon {\n        padding-top: 12px;\n      }\n    `;\n  }\n\n  private _stateRemoved(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this._states || !this.hass) {\n      return;\n    }\n\n    const target = ev.target! as EditorTarget;\n    const index = Number(target.value);\n    if (index > -1) {\n      const newStates = this._states;\n      newStates.splice(index, 1);\n      this._config = {\n        ...this._config,\n        states: newStates,\n      };\n      fireEvent(this, \"config-changed\", { config: this._config });\n    }\n  }\n\n  private _stateAdded(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (!target.value || this._states.indexOf(target.value) >= 0) {\n      return;\n    }\n    const newStates = this._states;\n    newStates.push(target.value);\n    this._config = {\n      ...this._config,\n      states: newStates,\n    };\n    target.value = \"\";\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-alarm-panel-card-editor\": HuiAlarmPanelCardEditor;\n  }\n}\n"],"sourceRoot":""}