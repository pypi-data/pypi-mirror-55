Metadata-Version: 2.1
Name: vote4film
Version: 1.0.1
Summary: Easy scheduling for regular film nights
Home-page: https://github.com/Fustra/vote4film/
License: AGPL-3.0
Author: QasimK
Author-email: noreply@QasimK.io
Requires-Python: >=3.7,<4.0
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: No Input/Output (Daemon)
Classifier: License :: OSI Approved :: GNU Affero General Public License v3
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Topic :: Internet :: WWW/HTTP :: WSGI :: Application
Requires-Dist: django (>=2.2,<3.0)
Requires-Dist: django-environ (>=0.4.5,<0.5.0)
Requires-Dist: lxml (>=4.4,<5.0)
Requires-Dist: requests (>=2.22,<3.0)
Project-URL: Repository, https://github.com/Fustra/vote4film/
Description-Content-Type: text/markdown

# Vote4Film

Simplify film selection for regular film nights. Participants can:

- Add films
- Vote for films
- Declare absences
- See the schedule which takes into account votes and absences

Admins can set the schedule of film nights.

This is a simple WSGI Web Application.

## Development

1. `poetry install` to set-up the virtualenv (one-off)
2. `poetry run ./src/vote4film/manage.py migrate` to set-up the local DB (one-off)
3. `poetry run ./src/vote4film/manage.py runserver_plus`
4. `make check` and `make test` before committing

### Publishing

This application will be published on PyPi.

1. Ensure you have configured Poetry repositories including `TestPyPi` (one-off)
2. `poetry publish --build -r testpypi` to upload to the test repository
3. `poetry publish --build` to release

## Deployment

Unfortunately, I will not provide any guidance here.

## Changelog

### v1.0.1 - 2019/11/10

- First release of Vote4Film.

