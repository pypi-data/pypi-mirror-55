Metadata-Version: 2.1
Name: Munin
Version: 0.1.2
Summary: A package for easing return of multiple values
Home-page: https://github.com/cnheider/munin
Author: Christian Heider Nielsen
Author-email: christian.heider@alexandra.dk
Maintainer: Christian Heider Nielsen
Maintainer-email: christian.heider@alexandra.dk
License: Apache License, Version 2.0
Download-URL: https://github.com/cnheider/munin/releases
Keywords: python reinforcement-learning interface api
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Environment :: Console
Classifier: Intended Audience :: End Users/Desktop
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Natural Language :: English
Requires-Python: >=3
Description-Content-Type: text/markdown
Requires-Dist: numpy (==1.16.3)
Requires-Dist: six (==1.12.0)
Requires-Dist: warg
Requires-Dist: pytest (==4.4.1)
Requires-Dist: pillow
Requires-Dist: markdown
Requires-Dist: python-markdown-math
Requires-Dist: matplotlib
Requires-Dist: jinja2
Requires-Dist: pyqrcode
Requires-Dist: pdfkit
Requires-Dist: scikit-learn
Requires-Dist: sorcery
Requires-Dist: draugr
Provides-Extra: all

# Munin
```
Old Norse: Muninn
``` 

![munin](.github/images/munin.svg) ![munin](.github/images/python.svg)

[![Build Status](https://travis-ci.com/cnheider/munin.svg?branch=master)](https://travis-ci.com/cnheider/munin) [![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black) [![Coverage Status](https://coveralls.io/repos/github/cnheider/munin/badge.svg?branch=master)](https://coveralls.io/github/cnheider/munin?branch=master)
___
> Reporting.
___

This package is a package for generating classification reports. Uses jinja2 templates, see documentation.

# Quick Start

```
  pip install munin

```

Now you can add all your metrics and plots.

```
  from munin import generate_html
  from warg import NOD

  ...

  metrics = NOD.dict_of(accuracy, precision, f1_score, recall, support).as_flat_tuples()

  bundle = NOD.dict_of(title, confusion_matrix, metrics, predictions)

  generate_html(file_name, **bundle)
```

