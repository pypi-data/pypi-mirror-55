[tox]
envlist = py35,py27,pep8
minversion = 1.6
skipsdist = True

[testenv]
setenv = VIRTUAL_ENV={envdir}
         PYTHONWARNINGS=default::DeprecationWarning
         OS_STDOUT_CAPTURE={env:OS_STDOUT_CAPTURE:1}
         OS_STDERR_CAPTURE={env:OS_STDERR_CAPTURE:1}
         OS_LOG_CAPTURE={env:OS_LOG_CAPTURE:1}
         OS_LOG_DEFAULTS={env:OS_LOG_DEFAULTS:""}
usedevelop = True
install_command = pip install {opts} {packages}
deps = -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/stein}
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands =
  stestr run {posargs}
  stestr slowest

[testenv:releasenotes]
basepython = python3
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/stein}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:pep8]
basepython = python3
commands =
  flake8
  # pylint --rcfile=.pylintrc --output-format=colorized {posargs:neutron_lbaas}
  neutron-db-manage --subproject neutron-lbaas --config-file neutron_lbaas/tests/etc/neutron.conf check_migration
  {[testenv:genconfig]commands}
whitelist_externals = sh

[testenv:cover]
basepython = python3
setenv =
  {[testenv]setenv}
  PYTHON=coverage run --source neutron_lbaas --parallel-mode
commands =
  stestr run {posargs}
  coverage combine
  coverage report

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:docs]
basepython = python3
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/stein}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -b html doc/source doc/build/html

[flake8]
# E125 continuation line does not distinguish itself from next logical line
# E126 continuation line over-indented for hanging indent
# E128 continuation line under-indented for visual indent
# E129 visually indented line with same indent as next logical line
# E265 block comment should start with '# '
# H405 multi line docstring summary not separated with an empty line
# TODO(marun) H404 multi line docstring should start with a summary
# N524 contextlib.nested is deprecated
# TODO(dougwig) -- uncomment this to test for remaining linkages
# N530 direct neutron imports not allowed
# N531 Log messages require translation hints
ignore = E125,E126,E128,E129,E265,H404,H405,N524,N530,N531
show-source = true
builtins = _
exclude = .venv,.git,.tox,dist,doc,*lib/python*,*egg,build,tools,.tmp,.ropeproject,rally-scenarios,neutron_lbaas/tests/tempest/lib
import-order-style = pep8

[hacking]
import_exceptions = neutron_lbaas._i18n
local-check-factory = neutron_lib.hacking.checks.factory

[testenv:functional]
basepython = python2.7
setenv = {[testenv]setenv}
         OS_TEST_PATH={toxinidir}/neutron_lbaas/tests/functional
         OS_LOG_PATH={env:OS_LOG_PATH:/opt/stack/logs}
deps =
  {[testenv]deps}
  -r{toxinidir}/neutron_lbaas/tests/functional/requirements.txt

[testenv:dsvm-functional]
basepython = python3
setenv = {[testenv]setenv}
         {[testenv:functional]setenv}
         OS_SUDO_TESTING=1
         OS_ROOTWRAP_CMD=sudo {envdir}/bin/neutron-rootwrap {envdir}/etc/neutron/rootwrap.conf
         OS_ROOTWRAP_DAEMON_CMD=sudo {envdir}/bin/neutron-rootwrap-daemon {envdir}/etc/neutron/rootwrap.conf
         OS_FAIL_ON_MISSING_DEPS=1
deps =
  {[testenv:functional]deps}
commands =
  stestr run {posargs}

# If you are running the tests locally you should set the env variable
# TEMPEST_CONFIG_DIR=/opt/stack/tempest/etc
[testenv:apiv2]
basepython = python3
passenv = TEMPEST_CONFIG_DIR
setenv =
 OS_TEST_PATH={toxinidir}/neutron_lbaas/tests/tempest/v2/api
commands =
  stestr run --concurrency 1 {posargs}
  stestr slowest

# If you are running the tests locally you should set the env variable
# TEMPEST_CONFIG_DIR=/opt/stack/tempest/etc
[testenv:scenario]
basepython = python3
passenv = TEMPEST_CONFIG_DIR
setenv =
 OS_TEST_PATH={toxinidir}/neutron_lbaas/tests/tempest/v2/scenario
commands =
  stestr run --concurrency 1 {posargs}
  stestr slowest

# If you are running the tests locally you should set the env variable
# TEMPEST_CONFIG_DIR=/opt/stack/tempest/etc
[testenv:ddt]
basepython = python3
passenv = TEMPEST_CONFIG_DIR
setenv =
 OS_TEST_PATH={toxinidir}/neutron_lbaas/tests/tempest/v2/ddt
commands =
  stestr run --concurrency 1 {posargs}
  stestr slowest

[testenv:genconfig]
basepython = python3
commands = {toxinidir}/tools/generate_config_file_samples.sh

[testenv:lower-constraints]
basepython = python3
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt

[testenv:dev]
# run locally (not in the gate) using editable mode
# https://pip.pypa.io/en/stable/reference/pip_install/#editable-installs
commands =
    pip install -q -e "git+https://git.openstack.org/openstack/neutron#egg=neutron"

[testenv:py3-dev]
basepython = python3
commands =
    {[testenv:dev]commands}
    {[testenv]commands}

[testenv:pep8-dev]
deps =
    {[testenv]deps}
commands =
    {[testenv:dev]commands}
    {[testenv:pep8]commands}
