# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: datacatalog/service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from flyteidl.core import literals_pb2 as flyteidl_dot_core_dot_literals__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='datacatalog/service.proto',
  package='datacatalog',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x19\x64\x61tacatalog/service.proto\x12\x0b\x64\x61tacatalog\x1a\x1c\x66lyteidl/core/literals.proto\"=\n\x14\x43reateDatasetRequest\x12%\n\x07\x64\x61taset\x18\x01 \x01(\x0b\x32\x14.datacatalog.Dataset\"\x17\n\x15\x43reateDatasetResponse\"<\n\x11GetDatasetRequest\x12\'\n\x07\x64\x61taset\x18\x01 \x01(\x0b\x32\x16.datacatalog.DatasetID\";\n\x12GetDatasetResponse\x12%\n\x07\x64\x61taset\x18\x01 \x01(\x0b\x32\x14.datacatalog.Dataset\"x\n\x12GetArtifactRequest\x12\'\n\x07\x64\x61taset\x18\x01 \x01(\x0b\x32\x16.datacatalog.DatasetID\x12\x15\n\x0b\x61rtifact_id\x18\x02 \x01(\tH\x00\x12\x12\n\x08tag_name\x18\x03 \x01(\tH\x00\x42\x0e\n\x0cquery_handle\">\n\x13GetArtifactResponse\x12\'\n\x08\x61rtifact\x18\x01 \x01(\x0b\x32\x15.datacatalog.Artifact\"@\n\x15\x43reateArtifactRequest\x12\'\n\x08\x61rtifact\x18\x01 \x01(\x0b\x32\x15.datacatalog.Artifact\"\x18\n\x16\x43reateArtifactResponse\".\n\rAddTagRequest\x12\x1d\n\x03tag\x18\x01 \x01(\x0b\x32\x10.datacatalog.Tag\"\x10\n\x0e\x41\x64\x64TagResponse\"V\n\x07\x44\x61taset\x12\"\n\x02id\x18\x01 \x01(\x0b\x32\x16.datacatalog.DatasetID\x12\'\n\x08metadata\x18\x02 \x01(\x0b\x32\x15.datacatalog.Metadata\"Y\n\tDatasetID\x12\x0f\n\x07project\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0e\n\x06\x64omain\x18\x03 \x01(\t\x12\x0f\n\x07version\x18\x04 \x01(\t\x12\x0c\n\x04UUID\x18\x05 \x01(\t\"\x91\x01\n\x08\x41rtifact\x12\n\n\x02id\x18\x01 \x01(\t\x12\'\n\x07\x64\x61taset\x18\x02 \x01(\x0b\x32\x16.datacatalog.DatasetID\x12\'\n\x04\x64\x61ta\x18\x03 \x03(\x0b\x32\x19.datacatalog.ArtifactData\x12\'\n\x08metadata\x18\x04 \x01(\x0b\x32\x15.datacatalog.Metadata\"C\n\x0c\x41rtifactData\x12\x0c\n\x04name\x18\x01 \x01(\t\x12%\n\x05value\x18\x02 \x01(\x0b\x32\x16.flyteidl.core.Literal\"Q\n\x03Tag\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x61rtifact_id\x18\x02 \x01(\t\x12\'\n\x07\x64\x61taset\x18\x03 \x01(\x0b\x32\x16.datacatalog.DatasetID\"m\n\x08Metadata\x12\x32\n\x07key_map\x18\x01 \x03(\x0b\x32!.datacatalog.Metadata.KeyMapEntry\x1a-\n\x0bKeyMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x32\xa4\x03\n\x0b\x44\x61taCatalog\x12V\n\rCreateDataset\x12!.datacatalog.CreateDatasetRequest\x1a\".datacatalog.CreateDatasetResponse\x12M\n\nGetDataset\x12\x1e.datacatalog.GetDatasetRequest\x1a\x1f.datacatalog.GetDatasetResponse\x12Y\n\x0e\x43reateArtifact\x12\".datacatalog.CreateArtifactRequest\x1a#.datacatalog.CreateArtifactResponse\x12P\n\x0bGetArtifact\x12\x1f.datacatalog.GetArtifactRequest\x1a .datacatalog.GetArtifactResponse\x12\x41\n\x06\x41\x64\x64Tag\x12\x1a.datacatalog.AddTagRequest\x1a\x1b.datacatalog.AddTagResponseb\x06proto3')
  ,
  dependencies=[flyteidl_dot_core_dot_literals__pb2.DESCRIPTOR,])




_CREATEDATASETREQUEST = _descriptor.Descriptor(
  name='CreateDatasetRequest',
  full_name='datacatalog.CreateDatasetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dataset', full_name='datacatalog.CreateDatasetRequest.dataset', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=72,
  serialized_end=133,
)


_CREATEDATASETRESPONSE = _descriptor.Descriptor(
  name='CreateDatasetResponse',
  full_name='datacatalog.CreateDatasetResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=135,
  serialized_end=158,
)


_GETDATASETREQUEST = _descriptor.Descriptor(
  name='GetDatasetRequest',
  full_name='datacatalog.GetDatasetRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dataset', full_name='datacatalog.GetDatasetRequest.dataset', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=160,
  serialized_end=220,
)


_GETDATASETRESPONSE = _descriptor.Descriptor(
  name='GetDatasetResponse',
  full_name='datacatalog.GetDatasetResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dataset', full_name='datacatalog.GetDatasetResponse.dataset', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=222,
  serialized_end=281,
)


_GETARTIFACTREQUEST = _descriptor.Descriptor(
  name='GetArtifactRequest',
  full_name='datacatalog.GetArtifactRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dataset', full_name='datacatalog.GetArtifactRequest.dataset', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='artifact_id', full_name='datacatalog.GetArtifactRequest.artifact_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tag_name', full_name='datacatalog.GetArtifactRequest.tag_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='query_handle', full_name='datacatalog.GetArtifactRequest.query_handle',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=283,
  serialized_end=403,
)


_GETARTIFACTRESPONSE = _descriptor.Descriptor(
  name='GetArtifactResponse',
  full_name='datacatalog.GetArtifactResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='artifact', full_name='datacatalog.GetArtifactResponse.artifact', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=405,
  serialized_end=467,
)


_CREATEARTIFACTREQUEST = _descriptor.Descriptor(
  name='CreateArtifactRequest',
  full_name='datacatalog.CreateArtifactRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='artifact', full_name='datacatalog.CreateArtifactRequest.artifact', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=469,
  serialized_end=533,
)


_CREATEARTIFACTRESPONSE = _descriptor.Descriptor(
  name='CreateArtifactResponse',
  full_name='datacatalog.CreateArtifactResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=535,
  serialized_end=559,
)


_ADDTAGREQUEST = _descriptor.Descriptor(
  name='AddTagRequest',
  full_name='datacatalog.AddTagRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tag', full_name='datacatalog.AddTagRequest.tag', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=561,
  serialized_end=607,
)


_ADDTAGRESPONSE = _descriptor.Descriptor(
  name='AddTagResponse',
  full_name='datacatalog.AddTagResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=609,
  serialized_end=625,
)


_DATASET = _descriptor.Descriptor(
  name='Dataset',
  full_name='datacatalog.Dataset',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='datacatalog.Dataset.id', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='metadata', full_name='datacatalog.Dataset.metadata', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=627,
  serialized_end=713,
)


_DATASETID = _descriptor.Descriptor(
  name='DatasetID',
  full_name='datacatalog.DatasetID',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='project', full_name='datacatalog.DatasetID.project', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='datacatalog.DatasetID.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='domain', full_name='datacatalog.DatasetID.domain', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='version', full_name='datacatalog.DatasetID.version', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='UUID', full_name='datacatalog.DatasetID.UUID', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=715,
  serialized_end=804,
)


_ARTIFACT = _descriptor.Descriptor(
  name='Artifact',
  full_name='datacatalog.Artifact',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='datacatalog.Artifact.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dataset', full_name='datacatalog.Artifact.dataset', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='datacatalog.Artifact.data', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='metadata', full_name='datacatalog.Artifact.metadata', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=807,
  serialized_end=952,
)


_ARTIFACTDATA = _descriptor.Descriptor(
  name='ArtifactData',
  full_name='datacatalog.ArtifactData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='datacatalog.ArtifactData.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='datacatalog.ArtifactData.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=954,
  serialized_end=1021,
)


_TAG = _descriptor.Descriptor(
  name='Tag',
  full_name='datacatalog.Tag',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='datacatalog.Tag.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='artifact_id', full_name='datacatalog.Tag.artifact_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dataset', full_name='datacatalog.Tag.dataset', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1023,
  serialized_end=1104,
)


_METADATA_KEYMAPENTRY = _descriptor.Descriptor(
  name='KeyMapEntry',
  full_name='datacatalog.Metadata.KeyMapEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='datacatalog.Metadata.KeyMapEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='datacatalog.Metadata.KeyMapEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1170,
  serialized_end=1215,
)

_METADATA = _descriptor.Descriptor(
  name='Metadata',
  full_name='datacatalog.Metadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key_map', full_name='datacatalog.Metadata.key_map', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_METADATA_KEYMAPENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1106,
  serialized_end=1215,
)

_CREATEDATASETREQUEST.fields_by_name['dataset'].message_type = _DATASET
_GETDATASETREQUEST.fields_by_name['dataset'].message_type = _DATASETID
_GETDATASETRESPONSE.fields_by_name['dataset'].message_type = _DATASET
_GETARTIFACTREQUEST.fields_by_name['dataset'].message_type = _DATASETID
_GETARTIFACTREQUEST.oneofs_by_name['query_handle'].fields.append(
  _GETARTIFACTREQUEST.fields_by_name['artifact_id'])
_GETARTIFACTREQUEST.fields_by_name['artifact_id'].containing_oneof = _GETARTIFACTREQUEST.oneofs_by_name['query_handle']
_GETARTIFACTREQUEST.oneofs_by_name['query_handle'].fields.append(
  _GETARTIFACTREQUEST.fields_by_name['tag_name'])
_GETARTIFACTREQUEST.fields_by_name['tag_name'].containing_oneof = _GETARTIFACTREQUEST.oneofs_by_name['query_handle']
_GETARTIFACTRESPONSE.fields_by_name['artifact'].message_type = _ARTIFACT
_CREATEARTIFACTREQUEST.fields_by_name['artifact'].message_type = _ARTIFACT
_ADDTAGREQUEST.fields_by_name['tag'].message_type = _TAG
_DATASET.fields_by_name['id'].message_type = _DATASETID
_DATASET.fields_by_name['metadata'].message_type = _METADATA
_ARTIFACT.fields_by_name['dataset'].message_type = _DATASETID
_ARTIFACT.fields_by_name['data'].message_type = _ARTIFACTDATA
_ARTIFACT.fields_by_name['metadata'].message_type = _METADATA
_ARTIFACTDATA.fields_by_name['value'].message_type = flyteidl_dot_core_dot_literals__pb2._LITERAL
_TAG.fields_by_name['dataset'].message_type = _DATASETID
_METADATA_KEYMAPENTRY.containing_type = _METADATA
_METADATA.fields_by_name['key_map'].message_type = _METADATA_KEYMAPENTRY
DESCRIPTOR.message_types_by_name['CreateDatasetRequest'] = _CREATEDATASETREQUEST
DESCRIPTOR.message_types_by_name['CreateDatasetResponse'] = _CREATEDATASETRESPONSE
DESCRIPTOR.message_types_by_name['GetDatasetRequest'] = _GETDATASETREQUEST
DESCRIPTOR.message_types_by_name['GetDatasetResponse'] = _GETDATASETRESPONSE
DESCRIPTOR.message_types_by_name['GetArtifactRequest'] = _GETARTIFACTREQUEST
DESCRIPTOR.message_types_by_name['GetArtifactResponse'] = _GETARTIFACTRESPONSE
DESCRIPTOR.message_types_by_name['CreateArtifactRequest'] = _CREATEARTIFACTREQUEST
DESCRIPTOR.message_types_by_name['CreateArtifactResponse'] = _CREATEARTIFACTRESPONSE
DESCRIPTOR.message_types_by_name['AddTagRequest'] = _ADDTAGREQUEST
DESCRIPTOR.message_types_by_name['AddTagResponse'] = _ADDTAGRESPONSE
DESCRIPTOR.message_types_by_name['Dataset'] = _DATASET
DESCRIPTOR.message_types_by_name['DatasetID'] = _DATASETID
DESCRIPTOR.message_types_by_name['Artifact'] = _ARTIFACT
DESCRIPTOR.message_types_by_name['ArtifactData'] = _ARTIFACTDATA
DESCRIPTOR.message_types_by_name['Tag'] = _TAG
DESCRIPTOR.message_types_by_name['Metadata'] = _METADATA
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CreateDatasetRequest = _reflection.GeneratedProtocolMessageType('CreateDatasetRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATEDATASETREQUEST,
  __module__ = 'datacatalog.service_pb2'
  # @@protoc_insertion_point(class_scope:datacatalog.CreateDatasetRequest)
  ))
_sym_db.RegisterMessage(CreateDatasetRequest)

CreateDatasetResponse = _reflection.GeneratedProtocolMessageType('CreateDatasetResponse', (_message.Message,), dict(
  DESCRIPTOR = _CREATEDATASETRESPONSE,
  __module__ = 'datacatalog.service_pb2'
  # @@protoc_insertion_point(class_scope:datacatalog.CreateDatasetResponse)
  ))
_sym_db.RegisterMessage(CreateDatasetResponse)

GetDatasetRequest = _reflection.GeneratedProtocolMessageType('GetDatasetRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETDATASETREQUEST,
  __module__ = 'datacatalog.service_pb2'
  # @@protoc_insertion_point(class_scope:datacatalog.GetDatasetRequest)
  ))
_sym_db.RegisterMessage(GetDatasetRequest)

GetDatasetResponse = _reflection.GeneratedProtocolMessageType('GetDatasetResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETDATASETRESPONSE,
  __module__ = 'datacatalog.service_pb2'
  # @@protoc_insertion_point(class_scope:datacatalog.GetDatasetResponse)
  ))
_sym_db.RegisterMessage(GetDatasetResponse)

GetArtifactRequest = _reflection.GeneratedProtocolMessageType('GetArtifactRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETARTIFACTREQUEST,
  __module__ = 'datacatalog.service_pb2'
  # @@protoc_insertion_point(class_scope:datacatalog.GetArtifactRequest)
  ))
_sym_db.RegisterMessage(GetArtifactRequest)

GetArtifactResponse = _reflection.GeneratedProtocolMessageType('GetArtifactResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETARTIFACTRESPONSE,
  __module__ = 'datacatalog.service_pb2'
  # @@protoc_insertion_point(class_scope:datacatalog.GetArtifactResponse)
  ))
_sym_db.RegisterMessage(GetArtifactResponse)

CreateArtifactRequest = _reflection.GeneratedProtocolMessageType('CreateArtifactRequest', (_message.Message,), dict(
  DESCRIPTOR = _CREATEARTIFACTREQUEST,
  __module__ = 'datacatalog.service_pb2'
  # @@protoc_insertion_point(class_scope:datacatalog.CreateArtifactRequest)
  ))
_sym_db.RegisterMessage(CreateArtifactRequest)

CreateArtifactResponse = _reflection.GeneratedProtocolMessageType('CreateArtifactResponse', (_message.Message,), dict(
  DESCRIPTOR = _CREATEARTIFACTRESPONSE,
  __module__ = 'datacatalog.service_pb2'
  # @@protoc_insertion_point(class_scope:datacatalog.CreateArtifactResponse)
  ))
_sym_db.RegisterMessage(CreateArtifactResponse)

AddTagRequest = _reflection.GeneratedProtocolMessageType('AddTagRequest', (_message.Message,), dict(
  DESCRIPTOR = _ADDTAGREQUEST,
  __module__ = 'datacatalog.service_pb2'
  # @@protoc_insertion_point(class_scope:datacatalog.AddTagRequest)
  ))
_sym_db.RegisterMessage(AddTagRequest)

AddTagResponse = _reflection.GeneratedProtocolMessageType('AddTagResponse', (_message.Message,), dict(
  DESCRIPTOR = _ADDTAGRESPONSE,
  __module__ = 'datacatalog.service_pb2'
  # @@protoc_insertion_point(class_scope:datacatalog.AddTagResponse)
  ))
_sym_db.RegisterMessage(AddTagResponse)

Dataset = _reflection.GeneratedProtocolMessageType('Dataset', (_message.Message,), dict(
  DESCRIPTOR = _DATASET,
  __module__ = 'datacatalog.service_pb2'
  # @@protoc_insertion_point(class_scope:datacatalog.Dataset)
  ))
_sym_db.RegisterMessage(Dataset)

DatasetID = _reflection.GeneratedProtocolMessageType('DatasetID', (_message.Message,), dict(
  DESCRIPTOR = _DATASETID,
  __module__ = 'datacatalog.service_pb2'
  # @@protoc_insertion_point(class_scope:datacatalog.DatasetID)
  ))
_sym_db.RegisterMessage(DatasetID)

Artifact = _reflection.GeneratedProtocolMessageType('Artifact', (_message.Message,), dict(
  DESCRIPTOR = _ARTIFACT,
  __module__ = 'datacatalog.service_pb2'
  # @@protoc_insertion_point(class_scope:datacatalog.Artifact)
  ))
_sym_db.RegisterMessage(Artifact)

ArtifactData = _reflection.GeneratedProtocolMessageType('ArtifactData', (_message.Message,), dict(
  DESCRIPTOR = _ARTIFACTDATA,
  __module__ = 'datacatalog.service_pb2'
  # @@protoc_insertion_point(class_scope:datacatalog.ArtifactData)
  ))
_sym_db.RegisterMessage(ArtifactData)

Tag = _reflection.GeneratedProtocolMessageType('Tag', (_message.Message,), dict(
  DESCRIPTOR = _TAG,
  __module__ = 'datacatalog.service_pb2'
  # @@protoc_insertion_point(class_scope:datacatalog.Tag)
  ))
_sym_db.RegisterMessage(Tag)

Metadata = _reflection.GeneratedProtocolMessageType('Metadata', (_message.Message,), dict(

  KeyMapEntry = _reflection.GeneratedProtocolMessageType('KeyMapEntry', (_message.Message,), dict(
    DESCRIPTOR = _METADATA_KEYMAPENTRY,
    __module__ = 'datacatalog.service_pb2'
    # @@protoc_insertion_point(class_scope:datacatalog.Metadata.KeyMapEntry)
    ))
  ,
  DESCRIPTOR = _METADATA,
  __module__ = 'datacatalog.service_pb2'
  # @@protoc_insertion_point(class_scope:datacatalog.Metadata)
  ))
_sym_db.RegisterMessage(Metadata)
_sym_db.RegisterMessage(Metadata.KeyMapEntry)


_METADATA_KEYMAPENTRY._options = None

_DATACATALOG = _descriptor.ServiceDescriptor(
  name='DataCatalog',
  full_name='datacatalog.DataCatalog',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=1218,
  serialized_end=1638,
  methods=[
  _descriptor.MethodDescriptor(
    name='CreateDataset',
    full_name='datacatalog.DataCatalog.CreateDataset',
    index=0,
    containing_service=None,
    input_type=_CREATEDATASETREQUEST,
    output_type=_CREATEDATASETRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetDataset',
    full_name='datacatalog.DataCatalog.GetDataset',
    index=1,
    containing_service=None,
    input_type=_GETDATASETREQUEST,
    output_type=_GETDATASETRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='CreateArtifact',
    full_name='datacatalog.DataCatalog.CreateArtifact',
    index=2,
    containing_service=None,
    input_type=_CREATEARTIFACTREQUEST,
    output_type=_CREATEARTIFACTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='GetArtifact',
    full_name='datacatalog.DataCatalog.GetArtifact',
    index=3,
    containing_service=None,
    input_type=_GETARTIFACTREQUEST,
    output_type=_GETARTIFACTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='AddTag',
    full_name='datacatalog.DataCatalog.AddTag',
    index=4,
    containing_service=None,
    input_type=_ADDTAGREQUEST,
    output_type=_ADDTAGRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_DATACATALOG)

DESCRIPTOR.services_by_name['DataCatalog'] = _DATACATALOG

# @@protoc_insertion_point(module_scope)
