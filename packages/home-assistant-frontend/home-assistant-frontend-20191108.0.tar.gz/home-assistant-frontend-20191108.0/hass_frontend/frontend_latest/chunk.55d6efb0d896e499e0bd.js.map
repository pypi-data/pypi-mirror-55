{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-sensor-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","HaEntityPicker","_LitElement","[object Object]","args","super","_initialize","this","property","type","Boolean","attribute","Array","memoizeOne","hass","includeDomains","excludeDomains","entityFilter","states","entityIds","Object","keys","filter","eid","substr","indexOf","sort","map","key","stateObj","entity_id","changedProps","_get","_getPrototypeOf","prototype","call","has","_opened","_hass","_getStates","html","_value","allowCustomEntity","root","_owner","model","firstElementChild","innerHTML","querySelector","item","textContent","computeStateName","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","length","ev","detail","setTimeout","fireEvent","css","LitElement","customElements","define","_decorate","customElement","F","kind","decorators","themes","concat","_changed","theme","static","target","configElementStyle","cardConfigStruct","entity","name","graph","unit","hours_to_show","HuiSensorCardEditor","config","_config","number","graphs","_entity","_name","_icon","_graph","_unit","_detail","_theme","_hours_to_show","configValue","isNaN","Number","assign"],"mappings":"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","file":"chunk.55d6efb0d896e499e0bd.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  /**\n   * Show entities from specific domains.\n   * @type {string}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n  /**\n   * Show no entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      includeDomains: this[\"includeDomains\"],\n      excludeDomains: this[\"excludeDomains\"],\n      entityFilter: this[\"entityFilter\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (includeDomains) {\n        entityIds = entityIds.filter((eid) =>\n          includeDomains.includes(eid.substr(0, eid.indexOf(\".\")))\n        );\n      }\n\n      if (excludeDomains) {\n        entityIds = entityIds.filter(\n          (eid) => !excludeDomains.includes(eid.substr(0, eid.indexOf(\".\")))\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.includeDomains,\n      this.excludeDomains,\n      this.entityFilter\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.clear\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.show_entities\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this.value = ev.detail.value;\n      setTimeout(() => {\n        fireEvent(this, \"value-changed\", { value: this.value });\n        fireEvent(this, \"change\");\n      }, 0);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../../../components/entity/ha-entity-picker\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { SensorCardConfig } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  entity: \"string?\",\n  name: \"string?\",\n  icon: \"string?\",\n  graph: \"string?\",\n  unit: \"string?\",\n  detail: \"number?\",\n  theme: \"string?\",\n  hours_to_show: \"number?\",\n});\n\n@customElement(\"hui-sensor-card-editor\")\nexport class HuiSensorCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: SensorCardConfig;\n\n  public setConfig(config: SensorCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _icon(): string {\n    return this._config!.icon || \"\";\n  }\n\n  get _graph(): string {\n    return this._config!.graph || \"none\";\n  }\n\n  get _unit(): string {\n    return this._config!.unit || \"\";\n  }\n\n  get _detail(): number | string {\n    return this._config!.number || \"1\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"default\";\n  }\n\n  get _hours_to_show(): number | string {\n    return this._config!.hours_to_show || \"24\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    const graphs = [\"line\", \"none\"];\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.entity\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .hass=\"${this.hass}\"\n          .value=\"${this._entity}\"\n          .configValue=${\"entity\"}\n          include-domains='[\"sensor\"]'\n          @change=\"${this._valueChanged}\"\n          allow-custom-entity\n        ></ha-entity-picker>\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.name\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._name}\"\n          .configValue=\"${\"name\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.icon\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._icon}\"\n            .configValue=\"${\"icon\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-dropdown-menu\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.sensor.graph_type\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .configValue=\"${\"graph\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          >\n            <paper-listbox\n              slot=\"dropdown-content\"\n              .selected=\"${graphs.indexOf(this._graph)}\"\n            >\n              ${graphs.map((graph) => {\n                return html`\n                  <paper-item>${graph}</paper-item>\n                `;\n              })}\n            </paper-listbox>\n          </paper-dropdown-menu>\n        </div>\n        <div class=\"side-by-side\">\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.unit\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            .value=\"${this._unit}\"\n            .configValue=\"${\"unit\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.sensor.graph_detail\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            type=\"number\"\n            .value=\"${this._detail}\"\n            .configValue=\"${\"detail\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <div class=\"side-by-side\">\n          <hui-theme-select-editor\n            .hass=\"${this.hass}\"\n            .value=\"${this._theme}\"\n            .configValue=\"${\"theme\"}\"\n            @theme-changed=\"${this._valueChanged}\"\n          ></hui-theme-select-editor>\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.hours_to_show\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            type=\"number\"\n            .value=\"${this._hours_to_show}\"\n            .configValue=\"${\"hours_to_show\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n      </div>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (\n        target.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(target.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = target.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = { ...this._config, [target.configValue!]: value };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-sensor-card-editor\": HuiSensorCardEditor;\n  }\n}\n"],"sourceRoot":""}