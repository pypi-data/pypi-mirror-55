{"version":3,"sources":["webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/components/entity/ha-entity-picker.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/config-elements/config-elements-style.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-alarm-panel-card-editor.ts"],"names":["__webpack_require__","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","HaEntityPicker","_LitElement","[object Object]","args","super","_initialize","this","property","type","Boolean","attribute","Array","memoizeOne","hass","includeDomains","excludeDomains","entityFilter","states","entityIds","Object","keys","filter","eid","substr","indexOf","sort","map","key","stateObj","entity_id","changedProps","_get","_getPrototypeOf","prototype","call","has","_opened","_hass","_getStates","html","_value","allowCustomEntity","root","_owner","model","firstElementChild","innerHTML","querySelector","item","textContent","computeStateName","_openedChanged","_valueChanged","autofocus","undefined","label","localize","disabled","length","ev","detail","setTimeout","fireEvent","css","LitElement","customElements","define","_decorate","customElement","F","kind","decorators","themes","concat","_changed","theme","static","target","configElementStyle","cardConfigStruct","entity","name","HuiAlarmPanelCardEditor","config","_config","_entity","_name","_states","state","index","_stateRemoved","_stateAdded","_theme","Number","newStates","splice","assign","push","configValue"],"mappings":"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","file":"chunk.c90e4a733922899995ae.js","sourcesContent":["import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import \"@polymer/paper-icon-button/paper-icon-button\";\nimport \"@polymer/paper-input/paper-input\";\nimport \"@polymer/paper-item/paper-icon-item\";\nimport \"@polymer/paper-item/paper-item-body\";\nimport \"@vaadin/vaadin-combo-box/vaadin-combo-box-light\";\nimport memoizeOne from \"memoize-one\";\n\nimport \"./state-badge\";\n\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport {\n  LitElement,\n  TemplateResult,\n  html,\n  css,\n  CSSResult,\n  property,\n  PropertyValues,\n} from \"lit-element\";\nimport { HomeAssistant } from \"../../types\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\nimport { PolymerChangedEvent } from \"../../polymer-types\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\n\nexport type HaEntityPickerEntityFilterFunc = (entityId: HassEntity) => boolean;\n\nconst rowRenderer = (\n  root: HTMLElement,\n  _owner,\n  model: { item: HassEntity }\n) => {\n  if (!root.firstElementChild) {\n    root.innerHTML = `\n      <style>\n        paper-icon-item {\n          margin: -10px;\n          padding: 0;\n        }\n      </style>\n      <paper-icon-item>\n        <state-badge state-obj=\"[[item]]\" slot=\"item-icon\"></state-badge>\n        <paper-item-body two-line=\"\">\n          <div class='name'>[[_computeStateName(item)]]</div>\n          <div secondary>[[item.entity_id]]</div>\n        </paper-item-body>\n      </paper-icon-item>\n    `;\n  }\n\n  root.querySelector(\"state-badge\")!.stateObj = model.item;\n  root.querySelector(\".name\")!.textContent = computeStateName(model.item);\n  root.querySelector(\"[secondary]\")!.textContent = model.item.entity_id;\n};\n\nclass HaEntityPicker extends LitElement {\n  @property({ type: Boolean }) public autofocus?: boolean;\n  @property({ type: Boolean }) public disabled?: boolean;\n  @property({ type: Boolean, attribute: \"allow-custom-entity\" })\n  public allowCustomEntity;\n  @property() public hass?: HomeAssistant;\n  @property() public label?: string;\n  @property() public value?: string;\n  /**\n   * Show entities from specific domains.\n   * @type {string}\n   * @attr include-domains\n   */\n  @property({ type: Array, attribute: \"include-domains\" })\n  public includeDomains?: string[];\n  /**\n   * Show no entities of these domains.\n   * @type {Array}\n   * @attr exclude-domains\n   */\n  @property({ type: Array, attribute: \"exclude-domains\" })\n  public excludeDomains?: string[];\n  @property() public entityFilter?: HaEntityPickerEntityFilterFunc;\n  @property({ type: Boolean }) private _opened?: boolean;\n  @property() private _hass?: HomeAssistant;\n\n  private _getStates = memoizeOne(\n    (\n      hass: this[\"hass\"],\n      includeDomains: this[\"includeDomains\"],\n      excludeDomains: this[\"excludeDomains\"],\n      entityFilter: this[\"entityFilter\"]\n    ) => {\n      let states: HassEntity[] = [];\n\n      if (!hass) {\n        return [];\n      }\n      let entityIds = Object.keys(hass.states);\n\n      if (includeDomains) {\n        entityIds = entityIds.filter((eid) =>\n          includeDomains.includes(eid.substr(0, eid.indexOf(\".\")))\n        );\n      }\n\n      if (excludeDomains) {\n        entityIds = entityIds.filter(\n          (eid) => !excludeDomains.includes(eid.substr(0, eid.indexOf(\".\")))\n        );\n      }\n\n      states = entityIds.sort().map((key) => hass!.states[key]);\n\n      if (entityFilter) {\n        states = states.filter(\n          (stateObj) =>\n            // We always want to include the entity of the current value\n            stateObj.entity_id === this.value || entityFilter!(stateObj)\n        );\n      }\n      return states;\n    }\n  );\n\n  protected updated(changedProps: PropertyValues) {\n    super.updated(changedProps);\n\n    if (changedProps.has(\"hass\") && !this._opened) {\n      this._hass = this.hass;\n    }\n  }\n\n  protected render(): TemplateResult | void {\n    const states = this._getStates(\n      this._hass,\n      this.includeDomains,\n      this.excludeDomains,\n      this.entityFilter\n    );\n\n    return html`\n      <vaadin-combo-box-light\n        item-value-path=\"entity_id\"\n        item-label-path=\"entity_id\"\n        .items=${states}\n        .value=${this._value}\n        .allowCustomValue=${this.allowCustomEntity}\n        .renderer=${rowRenderer}\n        @opened-changed=${this._openedChanged}\n        @value-changed=${this._valueChanged}\n      >\n        <paper-input\n          .autofocus=${this.autofocus}\n          .label=${this.label === undefined && this._hass\n            ? this._hass.localize(\"ui.components.entity.entity-picker.entity\")\n            : this.label}\n          .value=${this._value}\n          .disabled=${this.disabled}\n          class=\"input\"\n          autocapitalize=\"none\"\n          autocomplete=\"off\"\n          autocorrect=\"off\"\n          spellcheck=\"false\"\n        >\n          ${this.value\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.clear\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"clear-button\"\n                  icon=\"hass:close\"\n                  no-ripple\n                >\n                  Clear\n                </paper-icon-button>\n              `\n            : \"\"}\n          ${states.length > 0\n            ? html`\n                <paper-icon-button\n                  aria-label=${this.hass!.localize(\n                    \"ui.components.entity.entity-picker.show_entities\"\n                  )}\n                  slot=\"suffix\"\n                  class=\"toggle-button\"\n                  .icon=${this._opened ? \"hass:menu-up\" : \"hass:menu-down\"}\n                >\n                  Toggle\n                </paper-icon-button>\n              `\n            : \"\"}\n        </paper-input>\n      </vaadin-combo-box-light>\n    `;\n  }\n\n  private get _value() {\n    return this.value || \"\";\n  }\n\n  private _openedChanged(ev: PolymerChangedEvent<boolean>) {\n    this._opened = ev.detail.value;\n  }\n\n  private _valueChanged(ev: PolymerChangedEvent<string>) {\n    const newValue = ev.detail.value;\n    if (newValue !== this._value) {\n      this.value = ev.detail.value;\n      setTimeout(() => {\n        fireEvent(this, \"value-changed\", { value: this.value });\n        fireEvent(this, \"change\");\n      }, 0);\n    }\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-input > paper-icon-button {\n        width: 24px;\n        height: 24px;\n        padding: 2px;\n        color: var(--secondary-text-color);\n      }\n      [hidden] {\n        display: none;\n      }\n    `;\n  }\n}\n\ncustomElements.define(\"ha-entity-picker\", HaEntityPicker);\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-entity-picker\": HaEntityPicker;\n  }\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult | void {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import { html } from \"lit-element\";\n\nexport const configElementStyle = html`\n  <style>\n    ha-switch {\n      padding: 16px 0;\n    }\n    .side-by-side {\n      display: flex;\n    }\n    .side-by-side > * {\n      flex: 1;\n      padding-right: 4px;\n    }\n    .suffix {\n      margin: 0 8px;\n    }\n  </style>\n`;\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { EntitiesEditorEvent, EditorTarget } from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { AlarmPanelCardConfig } from \"../../cards/types\";\n\nimport \"../../../../components/entity/ha-entity-picker\";\nimport \"../../../../components/ha-icon\";\nimport \"../../components/hui-theme-select-editor\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  entity: \"string?\",\n  name: \"string?\",\n  states: \"array?\",\n  theme: \"string?\",\n});\n\n@customElement(\"hui-alarm-panel-card-editor\")\nexport class HuiAlarmPanelCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: AlarmPanelCardConfig;\n\n  public setConfig(config: AlarmPanelCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n  }\n\n  get _entity(): string {\n    return this._config!.entity || \"\";\n  }\n\n  get _name(): string {\n    return this._config!.name || \"\";\n  }\n\n  get _states(): string[] {\n    return this._config!.states || [];\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"Backend-selected\";\n  }\n\n  protected render(): TemplateResult | void {\n    if (!this.hass) {\n      return html``;\n    }\n\n    const states = [\"arm_home\", \"arm_away\", \"arm_night\", \"arm_custom_bypass\"];\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <ha-entity-picker\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.entity\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.required\"\n          )})\"\n          .hass=\"${this.hass}\"\n          .value=\"${this._entity}\"\n          .configValue=${\"entity\"}\n          include-domains='[\"alarm_control_panel\"]'\n          @change=\"${this._valueChanged}\"\n          allow-custom-entity\n        ></ha-entity-picker>\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.name\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._name}\"\n          .configValue=\"${\"name\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <span>Used States</span> ${this._states.map((state, index) => {\n          return html`\n            <div class=\"states\">\n              <paper-item>${state}</paper-item>\n              <ha-icon\n                class=\"deleteState\"\n                .value=\"${index}\"\n                icon=\"hass:close\"\n                @click=${this._stateRemoved}\n              ></ha-icon>\n            </div>\n          `;\n        })}\n        <paper-dropdown-menu\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.alarm-panel.available_states\"\n          )}\"\n          @value-changed=\"${this._stateAdded}\"\n        >\n          <paper-listbox slot=\"dropdown-content\">\n            ${states.map((state) => {\n              return html`\n                <paper-item>${state}</paper-item>\n              `;\n            })}\n          </paper-listbox>\n        </paper-dropdown-menu>\n        <hui-theme-select-editor\n          .hass=\"${this.hass}\"\n          .value=\"${this._theme}\"\n          .configValue=\"${\"theme\"}\"\n          @theme-changed=\"${this._valueChanged}\"\n        ></hui-theme-select-editor>\n      </div>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      .states {\n        display: flex;\n        flex-direction: row;\n      }\n      .deleteState {\n        visibility: hidden;\n      }\n      .states:hover > .deleteState {\n        visibility: visible;\n      }\n      ha-icon {\n        padding-top: 12px;\n      }\n    `;\n  }\n\n  private _stateRemoved(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this._states || !this.hass) {\n      return;\n    }\n\n    const target = ev.target! as EditorTarget;\n    const index = Number(target.value);\n    if (index > -1) {\n      const newStates = this._states;\n      newStates.splice(index, 1);\n      this._config = {\n        ...this._config,\n        states: newStates,\n      };\n      fireEvent(this, \"config-changed\", { config: this._config });\n    }\n  }\n\n  private _stateAdded(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (!target.value || this._states.indexOf(target.value) >= 0) {\n      return;\n    }\n    const newStates = this._states;\n    newStates.push(target.value);\n    this._config = {\n      ...this._config,\n      states: newStates,\n    };\n    target.value = \"\";\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n    if (this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (target.configValue) {\n      if (target.value === \"\") {\n        delete this._config[target.configValue!];\n      } else {\n        this._config = {\n          ...this._config,\n          [target.configValue!]: target.value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-alarm-panel-card-editor\": HuiAlarmPanelCardEditor;\n  }\n}\n"],"sourceRoot":""}