{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "title": "Schema for checking Airflow configuration files",
  "properties": {
    "admin": {
      "type": "object",
      "title": "Administrative Settings",
      "required": [
        "hide_sensitive_variable_fields"
      ],
      "properties": {
        "hide_sensitive_variable_fields": {
          "title": "Web UI Settings -> Hide sensitive variables in the UI",
          "type": "boolean",
          "const": true
        }
      }
    },
    "api": {
      "type": "object",
      "title": "API Settings",
      "required": [
        "auth_backend"
      ],
      "properties": {
        "auth_backend": {
          "title": "Authentication Settings for the API -> Enable authentication",
          "type": "string",
          "minlength": 1,
          "not": {"enum":["airflow.api.auth.backend.default"]}
        }
      }
    },
    "celery": {
      "type": "object",
      "title": "Celery Settings",
      "required": [
        "flower_basic_auth",
        "ssl_active",
        "ssl_cacert",
        "ssl_cert",
        "ssl_key"
      ],
      "properties": {
        "flower_basic_auth": {
          "title": "Authentication Settings -> Enable authentication for Flower (BASIC only)",
          "type": "array",
          "minLength": 1
        },
        "ssl_active": {
          "title": "SSL Settings -> Enable SSL for Celery -> Flag",
          "type": "boolean",
          "const": true
        },
        "ssl_cacert": {
          "title": "SSL Settings -> Enable SSL for Celery -> SSL CA Certificate",
          "type": "string",
          "minLength": 1
        },
        "ssl_cert": {
          "title": "SSL Settings -> Enable SSL for Celery -> SSL Certificate",
          "type": "string",
          "minLength": 1
        },
        "ssl_key": {
          "title": "SSL Settings -> Enable SSL for Celery -> SSL Key",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "core": {
      "type": "object",
      "title": "Core Settings",
      "required": [
        "default_impersonation",
        "donot_pickle",
        "enable_xcom_pickling",
        "fernet_key",
        "load_examples",
        "secure_mode"
      ],
      "properties": {
        "default_impersonation": {
          "title": "Disabling Dangerous Settings -> Prevent sudo for tasks that don't use impersonation by specifying the user to be used",
          "type": "string",
          "minLength": 1
        },
        "donot_pickle": {
          "title": "Disabling Dangerous Settings -> Disable pickling (vulnerable to RCE)",
          "type": "boolean",
          "const": true
        },
        "enable_xcom_pickling": {
          "title": "Disabling Dangerous Settings -> Disable pickling of XCom between tasks (vulnerable to RCE)",
          "type": "boolean",
          "const": false
        },
        "fernet_key": {
          "title": "Enabling Settings That Increase Security -> Change the Fernet key to something random",
          "type": "string",
          "minLength": 2
        },
        "load_examples": {
          "title": "Disabling Dangerous Settings -> Disable examples that ship with Airflow",
          "type": "boolean",
          "const": false
        },
        "secure_mode": {
          "title": "Enabling Settings That Increase Security -> Enable secure mode (turns off charts and ad-hoc queries)",
          "type": "boolean",
          "const": true
        }
      }
    },
    "dask": {
      "type": "object",
      "title": "DASK Settings",
      "required": [
        "tls_ca",
        "tls_cert",
        "tls_key"
      ],
      "properties": {
        "tls_ca": {
          "title": "SSL Settings -> Enable SSL for DASK -> SSL CA Certificate",
          "type": "string",
          "minLength": 1
        },
        "tls_cert": {
          "title": "SSL Settings -> Enable SSL for DASK -> SSL Certificate",
          "type": "string",
          "minLength": 1
        },
        "tls_key": {
          "title": "SSL Settings -> Enable SSL for DASK -> SSL Key",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "ldap": {
      "type": "object",
      "title": "LDAP Settings",
      "required": [
        "uri"
      ],
      "properties": {
        "uri": {
          "title": "SSL Settings -> Enable SSL for LDAP - ldaps and port 636 (if using LDAP backends)",
          "type": "string",
          "format": "uri",
          "minLength": 1,
          "pattern": "ldaps:\/\/.*:636"
        }
      }
    },
    "scheduler": {
      "type": "object",
      "title": "Scheduler Settings",
      "required": [
        "authenticate"
      ],
      "properties": {
        "authenticate": {
          "title": "Authentication Settings -> Enable authentication for the scheduler",
          "type": "boolean",
          "const": true
        }
      }
    },
    "smtp": {
      "type": "object",
      "title": "Email/SMTP Settings",
      "required": [
        "smtp_password",
        "smtp_ssl",
        "smtp_starttls",
        "smtp_user"
      ],
      "properties": {
        "smtp_password": {
          "title": "Authentication Settings -> Enable authentication for email -> Password",
          "type": "string",
          "minLength": 1
        },
        "smtp_ssl": {
          "title": "SSL Settings -> Enable SSL for email",
          "type": "boolean",
          "const": true
        },
        "smtp_starttls": {
          "title": "SSL Settings -> Enable SSL for email",
          "type": "boolean",
          "const": true
        },
        "smtp_user": {
          "title": "Authentication Settings -> Enable authentication for email -> Username",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "webserver": {
      "type": "object",
      "title": "Web UI Settings",
      "required": [
        "authenticate",
        "auth_backend",
        "base_url",
        "cookie_samesite",
        "cookie_secure",
        "expose_config",
        "filter_by_owner",
        "rbac",
        "secret_key",
        "web_server_port",
        "web_server_ssl_cert",
        "web_server_ssl_key"
      ],
      "properties": {
        "authenticate": {
          "title": "Authentication Settings -> Turn on authentication for the web UI",
          "type": "boolean",
          "const": true
        },
        "auth_backend": {
          "title": "Authentication Settings -> Turn on authentication for the web UI (any backend)",
          "type": "string",
          "minlength": 1,
          "not": {"enum":["airflow.api.auth.backend.default"]}
        },
        "base_url": {
          "title": "SSL Settings -> Enable SSL for the web UI  -> Base URL",
          "type": "string",
          "format": "uri",
          "minLength": 1,
          "pattern": "https:\/\/.*:443"
        },
        "cookie_samesite": {
          "title": "Web UI Settings -> Make session cookies more secure -> SameSite flag",
          "type": "string",
          "pattern": "(?i)Strict"
        },
        "cookie_secure": {
          "title": "Web UI Settings -> Make session cookies more secure -> Secure flag",
          "type": "boolean",
          "const": true
        },
        "expose_config": {
          "title": "Disabling Dangerous Settings -> Don't expose the configuration file via the web UI (if not using RBAC)",
          "type": "boolean",
          "const": false
        },
        "filter_by_owner": {
          "title": "Authorization Settings -> Only show the user their own DAGs (requires authentication)",
          "type": "boolean",
          "const": true
        },
        "rbac": {
          "title": "Authorization Settings -> Enable web UI authorization",
          "type": "boolean",
          "const": true
        },
        "secret_key": {
          "title": "Web UI Settings -> Leave the Flask secret key set to {SECRET_KEY} or generate your own",
          "type": "string",
          "minlength": 2,
          "pattern": "{SECRET_KEY}|.*"
        },
        "web_server_port": {
          "title": "SSL Settings -> Enable SSL for the web UI -> port",
          "type": "integer",
          "const": 443
        },
        "web_server_ssl_cert": {
          "title": "SSL Settings -> Enable SSL for the Web UI -> SSL Certificate",
          "type": "string",
          "minLength": 1
        },
        "web_server_ssl_key": {
          "title": "SSL Settings -> Enable SSL for the Web UI -> SSL Key",
          "type": "string",
          "minLength": 1
        }
      }
    }
  }
}