# -*- coding: utf-8 -*-

"""
bandwidth

This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""
import bandwidth.voice.models.duration


class TemporalUnit(object):

    """Implementation of the 'TemporalUnit' model.

    TODO: type model description here.

    Attributes:
        duration (Duration): TODO: type description here.
        duration_estimated (bool): TODO: type description here.
        date_based (bool): TODO: type description here.
        time_based (bool): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "duration": 'duration',
        "duration_estimated": 'durationEstimated',
        "date_based": 'dateBased',
        "time_based": 'timeBased'
    }

    def __init__(self,
                 duration=None,
                 duration_estimated=None,
                 date_based=None,
                 time_based=None):
        """Constructor for the TemporalUnit class"""

        # Initialize members of the class
        self.duration = duration
        self.duration_estimated = duration_estimated
        self.date_based = date_based
        self.time_based = time_based

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        duration = bandwidth.voice.models.duration.Duration.from_dictionary(dictionary.get('duration')) if dictionary.get('duration') else None
        duration_estimated = dictionary.get('durationEstimated')
        date_based = dictionary.get('dateBased')
        time_based = dictionary.get('timeBased')

        # Return an object of this model
        return cls(duration,
                   duration_estimated,
                   date_based,
                   time_based)
