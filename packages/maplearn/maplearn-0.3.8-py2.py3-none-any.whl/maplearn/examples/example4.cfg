[metadata]
title = Ex. 4 : Algorithmes recents de classification
description = Comparaison d'un algorithme classique (knn) avec des algorithmes
 plus recents, comme passive, mlp (reseau de neurones)
author = Mapping learning team
[io]
samples=iris
# [optionnel] colonne correspondant au ID des classes (numeriques)
label_id=
# [optionnel] colonne correspondant aux libelles des classes (texte)
label=
# [optionnel] liste des features a utiliser
features=
# [optionnel] jeu de donnees sur lequel appliquer les classification
data=
# dossier qui contiendra les sorties
output=build/bdist.linux-x86_64/wheel/tmp/example4/
[preprocess]
# [optionnel:booleen] faut-il centrer/reduire ? [true/false]
scale=
# [optionnel:booleen] faut-il reequilibrer les echantillons ? [true/false]
balance=
# [optionnel:txt] Reduit les dimensions du jeu de donnees (pca, lda, kbest, rfe,kernel_pca)
reduce=
# [optionnel:nombre] nombre de dimensions souhaitees apres reduction
ncomp=
# [optionnel:booleen] faut-il analyser la separabilite des echantillons ? [true/false]
separability=
[process]
type=classification
# [optionnel:txt] quelle mesure de distance utiliser (si different euclidean)
distance=
# [optionnel:txt ou list]algorithme(s) de classification a appliquer (ex: knn)
algorithm=knn, passive, mlp
kfold=
# optimize des parametres de classification ? [true/false]
optimize=
# faut-il predire des resultats (exporter des classifs) ? [true/false]
predict=f
