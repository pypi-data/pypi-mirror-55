[metadata]
title = Ex. 1 : Classification a partir d'un shapefile
description = * Les echantillons sont charges a partir de la table attributaire
 du fichier 'echantillon.shp', avec la colonne 'ECH' qui contient les
 libelles des classes.
 * les donnees a classer sont dans un second fichier ('data.shp').<br/><br/>
 
 3 algorithmes de classification sont compares :
     1. **tree** : un arbre de decision simple
     2. **knn** : k nearest neighbour (knn)
     3. **lda** : Linear Discriminant analysis
 <br/><br/>
 Le resultat est ecrit dans un nouveau shapefile 'sortie.shp'
author = Mapping learning team
[io]
samples=build/bdist.linux-x86_64/wheel/maplearn/datasets/echantillon.shp
# [optionnel] colonne correspondant au ID des classes (numeriques)
label_id=
# [optionnel] colonne correspondant aux libelles des classes (texte)
label=ECH
# [optionnel] liste des features a utiliser
features=
# [optionnel] jeu de donnees sur lequel appliquer les classification
data=build/bdist.linux-x86_64/wheel/maplearn/datasets/data.shp
# dossier qui contiendra les sorties
output=build/bdist.linux-x86_64/wheel/tmp/example1/
[preprocess]
# [optionnel:booleen] faut-il centrer/reduire ? [true/false]
scale=
# [optionnel:booleen] faut-il reequilibrer les echantillons ? [true/false]
balance=
# [optionnel:txt] Reduit les dimensions du jeu de donnees (pca, lda, kbest, rfe,kernel_pca)
reduce=
# [optionnel:nombre] nombre de dimensions souhaitees apres reduction
ncomp=
# [optionnel:booleen] faut-il analyser la separabilite des echantillons ? [true/false]
separability=
[process]
type=classification
# [optionnel:txt] quelle mesure de distance utiliser (si different euclidean)
distance=
# [optionnel:txt ou list]algorithme(s) de classification a appliquer (ex: knn)
algorithm=tree, knn,lda
kfold=
# optimize des parametres de classification ? [true/false]
optimize=
# faut-il predire des resultats (exporter des classifs) ? [true/false]
predict=true