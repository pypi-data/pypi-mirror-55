[metadata]
title = Ex. 2 : Lecture d'un csv avec un dictionnaire de codes
description = Les echantillons sont lus a partir d'un fichier csv, avec la 
 colonne 'Id_classes' qui indique les numeros de classes. Ces identifiants sont
 associes a des libelles grace a un dictionnaire ecrit dans le code.<br/><br/>
 
 Lors du pretraitement, les meilleures features sont selectionnees.<br/><br/>
 
 La classification se fait par SVM, avec une recherche des parametres
 optimaux. Les echantillons sont separes en 2 (approche 2-fold).
author = Mapping learning team
[io]
samples={path}/maplearn/datasets/t11-t22.csv
# [optionnel] colonne correspondant au ID des classes (numeriques)
label_id=Id_classes
# [optionnel] colonne correspondant aux libelles des classes (texte)
label=
# [optionnel] liste des features a utiliser
features=
# [optionnel] jeu de donnees sur lequel appliquer les classification
data=
# dossier qui contiendra les sorties
output={path}/tmp/example2/
[codes]
# [optionnel] liste des codes et des libelles de classes associees (code=libelle de classe)
1=bois valid
2=ditches and pondbelt
3=eau libre
4=prairie_hygro
5=prairie long inondees
6=prairie sec
7=prairie_meso_hygro
[preprocess]
# [optionnel:booleen] faut-il centrer/reduire ? [true/false]
scale=
# [optionnel:booleen] faut-il reequilibrer les echantillons ? [true/false]
balance=
# [optionnel:txt] Reduit les dimensions du jeu de donnees (pca, lda, kbest, rfe,kernel_pca)
reduce=
# [optionnel:nombre] nombre de dimensions souhaitees apres reduce
ncomp=6
# [optionnel:booleen] faut-il analyser la separability des echantillons ? [true/false]
separability=
[process]
type=classification
# [optionnel:txt] quelle mesure de distance utiliser (si different euclidean)
distance=
# [optionnel:txt ou list]algorithme(s) de classification a appliquer (ex: knn)
algorithm=tree, knn,lda
kfold=2
# optimize des parametres de classification ? [true/false]
optimize=
# faut-il predire des resultats (exporter des classifs) ? [true/false]
predict=false