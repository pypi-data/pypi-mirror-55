# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\thomas_a\dev\maplearn\maplearn\app\gui\maplearn_main.ui'
#
# Created by: PyQt5 UI code generator 5.6
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets
try:
    from PyQt5 import QtWebEngineWidgets
except ImportError:
    from PyQt5 import QtWebKitWidgets as QtWebEngineWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1200, 699)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/logo/Icon/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.frm_main = QtWidgets.QFrame(self.centralwidget)
        self.frm_main.setMinimumSize(QtCore.QSize(400, 600))
        self.frm_main.setToolTip("")
        self.frm_main.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frm_main.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frm_main.setObjectName("frm_main")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frm_main)
        self.verticalLayout.setObjectName("verticalLayout")
        self.cbo_process = QtWidgets.QComboBox(self.frm_main)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cbo_process.sizePolicy().hasHeightForWidth())
        self.cbo_process.setSizePolicy(sizePolicy)
        self.cbo_process.setMinimumSize(QtCore.QSize(80, 40))
        self.cbo_process.setMaximumSize(QtCore.QSize(200, 16777215))
        font = QtGui.QFont()
        font.setFamily("MS Sans Serif")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.cbo_process.setFont(font)
        self.cbo_process.setObjectName("cbo_process")
        self.cbo_process.addItem("")
        self.cbo_process.addItem("")
        self.cbo_process.addItem("")
        self.verticalLayout.addWidget(self.cbo_process)
        self.tbx_main = QtWidgets.QToolBox(self.frm_main)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tbx_main.sizePolicy().hasHeightForWidth())
        self.tbx_main.setSizePolicy(sizePolicy)
        self.tbx_main.setMinimumSize(QtCore.QSize(200, 400))
        self.tbx_main.setMaximumSize(QtCore.QSize(1200, 16777215))
        self.tbx_main.setSizeIncrement(QtCore.QSize(0, 0))
        self.tbx_main.setBaseSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.tbx_main.setFont(font)
        self.tbx_main.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.tbx_main.setAcceptDrops(False)
        self.tbx_main.setStatusTip("")
        self.tbx_main.setStyleSheet("")
        self.tbx_main.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.tbx_main.setFrameShadow(QtWidgets.QFrame.Plain)
        self.tbx_main.setLineWidth(1)
        self.tbx_main.setObjectName("tbx_main")
        self.frm_io = QtWidgets.QWidget()
        self.frm_io.setGeometry(QtCore.QRect(0, 0, 376, 450))
        self.frm_io.setStatusTip("")
        self.frm_io.setAccessibleName("")
        self.frm_io.setObjectName("frm_io")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.frm_io)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.__hl_io_1 = QtWidgets.QHBoxLayout()
        self.__hl_io_1.setObjectName("__hl_io_1")
        self.lbl_samples = QtWidgets.QLabel(self.frm_io)
        self.lbl_samples.setObjectName("lbl_samples")
        self.__hl_io_1.addWidget(self.lbl_samples)
        self.le_io_samples = QtWidgets.QLineEdit(self.frm_io)
        self.le_io_samples.setObjectName("le_io_samples")
        self.__hl_io_1.addWidget(self.le_io_samples)
        self.btn_io_samples = QtWidgets.QPushButton(self.frm_io)
        self.btn_io_samples.setMinimumSize(QtCore.QSize(20, 0))
        self.btn_io_samples.setMaximumSize(QtCore.QSize(40, 16777215))
        self.btn_io_samples.setObjectName("btn_io_samples")
        self.__hl_io_1.addWidget(self.btn_io_samples)
        self.verticalLayout_5.addLayout(self.__hl_io_1)
        self.__hl_io_2 = QtWidgets.QHBoxLayout()
        self.__hl_io_2.setObjectName("__hl_io_2")
        self.lbl_data = QtWidgets.QLabel(self.frm_io)
        self.lbl_data.setObjectName("lbl_data")
        self.__hl_io_2.addWidget(self.lbl_data)
        self.le_io_data = QtWidgets.QLineEdit(self.frm_io)
        self.le_io_data.setObjectName("le_io_data")
        self.__hl_io_2.addWidget(self.le_io_data)
        self.btn_io_data = QtWidgets.QPushButton(self.frm_io)
        self.btn_io_data.setMinimumSize(QtCore.QSize(20, 0))
        self.btn_io_data.setMaximumSize(QtCore.QSize(40, 16777215))
        self.btn_io_data.setObjectName("btn_io_data")
        self.__hl_io_2.addWidget(self.btn_io_data)
        self.verticalLayout_5.addLayout(self.__hl_io_2)
        spacerItem = QtWidgets.QSpacerItem(20, 107, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_5.addItem(spacerItem)
        self.__gb_io_attributes = QtWidgets.QGroupBox(self.frm_io)
        self.__gb_io_attributes.setObjectName("__gb_io_attributes")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.__gb_io_attributes)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.__spl_io_1 = QtWidgets.QSplitter(self.__gb_io_attributes)
        self.__spl_io_1.setOrientation(QtCore.Qt.Horizontal)
        self.__spl_io_1.setObjectName("__spl_io_1")
        self.__lab_io_label_id = QtWidgets.QLabel(self.__spl_io_1)
        self.__lab_io_label_id.setObjectName("__lab_io_label_id")
        self.le_io_label_id = QtWidgets.QLineEdit(self.__spl_io_1)
        self.le_io_label_id.setMaximumSize(QtCore.QSize(200, 16777215))
        self.le_io_label_id.setObjectName("le_io_label_id")
        self.verticalLayout_4.addWidget(self.__spl_io_1)
        self.__spl_io_2 = QtWidgets.QSplitter(self.__gb_io_attributes)
        self.__spl_io_2.setOrientation(QtCore.Qt.Horizontal)
        self.__spl_io_2.setObjectName("__spl_io_2")
        self.__lab_io_label = QtWidgets.QLabel(self.__spl_io_2)
        self.__lab_io_label.setObjectName("__lab_io_label")
        self.le_io_label = QtWidgets.QLineEdit(self.__spl_io_2)
        self.le_io_label.setMaximumSize(QtCore.QSize(200, 16777215))
        self.le_io_label.setObjectName("le_io_label")
        self.verticalLayout_4.addWidget(self.__spl_io_2)
        self.__spl_io_3 = QtWidgets.QSplitter(self.__gb_io_attributes)
        self.__spl_io_3.setOrientation(QtCore.Qt.Horizontal)
        self.__spl_io_3.setObjectName("__spl_io_3")
        self.__lab_io_features = QtWidgets.QLabel(self.__spl_io_3)
        self.__lab_io_features.setObjectName("__lab_io_features")
        self.le_io_features = QtWidgets.QLineEdit(self.__spl_io_3)
        self.le_io_features.setMaximumSize(QtCore.QSize(200, 16777215))
        self.le_io_features.setObjectName("le_io_features")
        self.verticalLayout_4.addWidget(self.__spl_io_3)
        self.verticalLayout_5.addWidget(self.__gb_io_attributes)
        spacerItem1 = QtWidgets.QSpacerItem(20, 106, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_5.addItem(spacerItem1)
        self.__hl_io_3 = QtWidgets.QHBoxLayout()
        self.__hl_io_3.setObjectName("__hl_io_3")
        self.lbl_output = QtWidgets.QLabel(self.frm_io)
        self.lbl_output.setObjectName("lbl_output")
        self.__hl_io_3.addWidget(self.lbl_output)
        self.le_io_output = QtWidgets.QLineEdit(self.frm_io)
        self.le_io_output.setObjectName("le_io_output")
        self.__hl_io_3.addWidget(self.le_io_output)
        self.btn_io_output = QtWidgets.QPushButton(self.frm_io)
        self.btn_io_output.setMinimumSize(QtCore.QSize(20, 0))
        self.btn_io_output.setMaximumSize(QtCore.QSize(40, 16777215))
        self.btn_io_output.setObjectName("btn_io_output")
        self.__hl_io_3.addWidget(self.btn_io_output)
        self.verticalLayout_5.addLayout(self.__hl_io_3)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icon/Icon/io_icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon1.addPixmap(QtGui.QPixmap(":/icon/Icon/io_icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.tbx_main.addItem(self.frm_io, icon1, "")
        self.frm_preprocess = QtWidgets.QWidget()
        self.frm_preprocess.setGeometry(QtCore.QRect(0, 0, 376, 450))
        self.frm_preprocess.setObjectName("frm_preprocess")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.frm_preprocess)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        spacerItem2 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem2)
        self.chk_pre_scale = QtWidgets.QCheckBox(self.frm_preprocess)
        self.chk_pre_scale.setChecked(True)
        self.chk_pre_scale.setObjectName("chk_pre_scale")
        self.verticalLayout_2.addWidget(self.chk_pre_scale)
        self.chk_pre_balance = QtWidgets.QCheckBox(self.frm_preprocess)
        self.chk_pre_balance.setObjectName("chk_pre_balance")
        self.verticalLayout_2.addWidget(self.chk_pre_balance)
        self.chk_pre_separability = QtWidgets.QCheckBox(self.frm_preprocess)
        self.chk_pre_separability.setObjectName("chk_pre_separability")
        self.verticalLayout_2.addWidget(self.chk_pre_separability)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem3)
        self.gb_pre_reducion = QtWidgets.QGroupBox(self.frm_preprocess)
        self.gb_pre_reducion.setMinimumSize(QtCore.QSize(0, 120))
        self.gb_pre_reducion.setObjectName("gb_pre_reducion")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.gb_pre_reducion)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.spl_pre_reduction = QtWidgets.QSplitter(self.gb_pre_reducion)
        self.spl_pre_reduction.setOrientation(QtCore.Qt.Horizontal)
        self.spl_pre_reduction.setObjectName("spl_pre_reduction")
        self.__lab_pre_reduce = QtWidgets.QLabel(self.spl_pre_reduction)
        self.__lab_pre_reduce.setObjectName("__lab_pre_reduce")
        self.cbo_pre_reduce = QtWidgets.QComboBox(self.spl_pre_reduction)
        self.cbo_pre_reduce.setObjectName("cbo_pre_reduce")
        self.cbo_pre_reduce.addItem("")
        self.cbo_pre_reduce.setItemText(0, "")
        self.verticalLayout_8.addWidget(self.spl_pre_reduction)
        self.spl_pre_ncomp = QtWidgets.QSplitter(self.gb_pre_reducion)
        self.spl_pre_ncomp.setOrientation(QtCore.Qt.Horizontal)
        self.spl_pre_ncomp.setObjectName("spl_pre_ncomp")
        self.__lab_pre_ncomp = QtWidgets.QLabel(self.spl_pre_ncomp)
        self.__lab_pre_ncomp.setEnabled(True)
        self.__lab_pre_ncomp.setObjectName("__lab_pre_ncomp")
        self.sb_pre_ncomp = QtWidgets.QSpinBox(self.spl_pre_ncomp)
        self.sb_pre_ncomp.setEnabled(False)
        self.sb_pre_ncomp.setMaximumSize(QtCore.QSize(100, 16777215))
        self.sb_pre_ncomp.setMinimum(1)
        self.sb_pre_ncomp.setMaximum(160000)
        self.sb_pre_ncomp.setObjectName("sb_pre_ncomp")
        self.verticalLayout_8.addWidget(self.spl_pre_ncomp)
        self.verticalLayout_2.addWidget(self.gb_pre_reducion)
        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem4)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/icon/Icon/preprocess-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon2.addPixmap(QtGui.QPixmap(":/icon/Icon/preprocess-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.tbx_main.addItem(self.frm_preprocess, icon2, "")
        self.frm_process = QtWidgets.QWidget()
        self.frm_process.setGeometry(QtCore.QRect(0, 0, 376, 450))
        self.frm_process.setObjectName("frm_process")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.frm_process)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.spl_pro_algorithm = QtWidgets.QSplitter(self.frm_process)
        self.spl_pro_algorithm.setOrientation(QtCore.Qt.Horizontal)
        self.spl_pro_algorithm.setObjectName("spl_pro_algorithm")
        self.__lab_pro_algorithm = QtWidgets.QLabel(self.spl_pro_algorithm)
        self.__lab_pro_algorithm.setObjectName("__lab_pro_algorithm")
        self.lst_pro_algorithm = QtWidgets.QListWidget(self.spl_pro_algorithm)
        self.lst_pro_algorithm.setMinimumSize(QtCore.QSize(100, 50))
        self.lst_pro_algorithm.setMaximumSize(QtCore.QSize(200, 600))
        self.lst_pro_algorithm.setBaseSize(QtCore.QSize(0, 0))
        self.lst_pro_algorithm.setAutoScrollMargin(8)
        self.lst_pro_algorithm.setSelectionMode(QtWidgets.QAbstractItemView.MultiSelection)
        self.lst_pro_algorithm.setObjectName("lst_pro_algorithm")
        self.verticalLayout_6.addWidget(self.spl_pro_algorithm)
        spacerItem5 = QtWidgets.QSpacerItem(351, 14, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_6.addItem(spacerItem5)
        self.hl_pro_1 = QtWidgets.QHBoxLayout()
        self.hl_pro_1.setObjectName("hl_pro_1")
        self.__lbl_pro_kfold = QtWidgets.QLabel(self.frm_process)
        self.__lbl_pro_kfold.setObjectName("__lbl_pro_kfold")
        self.hl_pro_1.addWidget(self.__lbl_pro_kfold)
        self.sbo_pro_kfold = QtWidgets.QSpinBox(self.frm_process)
        self.sbo_pro_kfold.setMaximumSize(QtCore.QSize(100, 16777215))
        self.sbo_pro_kfold.setMinimum(2)
        self.sbo_pro_kfold.setMaximum(10)
        self.sbo_pro_kfold.setProperty("value", 3)
        self.sbo_pro_kfold.setObjectName("sbo_pro_kfold")
        self.hl_pro_1.addWidget(self.sbo_pro_kfold)
        self.verticalLayout_6.addLayout(self.hl_pro_1)
        self.vl_pro_1 = QtWidgets.QVBoxLayout()
        self.vl_pro_1.setObjectName("vl_pro_1")
        self.chk_pro_optimize = QtWidgets.QCheckBox(self.frm_process)
        self.chk_pro_optimize.setObjectName("chk_pro_optimize")
        self.vl_pro_1.addWidget(self.chk_pro_optimize)
        self.chk_pro_predict = QtWidgets.QCheckBox(self.frm_process)
        self.chk_pro_predict.setObjectName("chk_pro_predict")
        self.vl_pro_1.addWidget(self.chk_pro_predict)
        self.verticalLayout_6.addLayout(self.vl_pro_1)
        spacerItem6 = QtWidgets.QSpacerItem(351, 14, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_6.addItem(spacerItem6)
        self.hl_pro_2 = QtWidgets.QHBoxLayout()
        self.hl_pro_2.setObjectName("hl_pro_2")
        self.__lbl_pro_distance = QtWidgets.QLabel(self.frm_process)
        self.__lbl_pro_distance.setObjectName("__lbl_pro_distance")
        self.hl_pro_2.addWidget(self.__lbl_pro_distance)
        self.cbo_pro_distance = QtWidgets.QComboBox(self.frm_process)
        self.cbo_pro_distance.setObjectName("cbo_pro_distance")
        self.cbo_pro_distance.addItem("")
        self.cbo_pro_distance.addItem("")
        self.hl_pro_2.addWidget(self.cbo_pro_distance)
        self.verticalLayout_6.addLayout(self.hl_pro_2)
        spacerItem7 = QtWidgets.QSpacerItem(351, 15, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_6.addItem(spacerItem7)
        self.hl_pro_3 = QtWidgets.QHBoxLayout()
        self.hl_pro_3.setObjectName("hl_pro_3")
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.hl_pro_3.addItem(spacerItem8)
        self.btn_cancel = QtWidgets.QPushButton(self.frm_process)
        self.btn_cancel.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.btn_cancel.setFont(font)
        self.btn_cancel.setObjectName("btn_cancel")
        self.hl_pro_3.addWidget(self.btn_cancel)
        self.btn_run = QtWidgets.QPushButton(self.frm_process)
        self.btn_run.setMaximumSize(QtCore.QSize(200, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.btn_run.setFont(font)
        self.btn_run.setObjectName("btn_run")
        self.hl_pro_3.addWidget(self.btn_run)
        self.verticalLayout_6.addLayout(self.hl_pro_3)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/icon/Icon/process_icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.tbx_main.addItem(self.frm_process, icon3, "")
        self.verticalLayout.addWidget(self.tbx_main)
        self.verticalLayout_7.addWidget(self.frm_main)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1200, 26))
        self.menubar.setObjectName("menubar")
        self.menuFichier = QtWidgets.QMenu(self.menubar)
        self.menuFichier.setObjectName("menuFichier")
        self.menuAide = QtWidgets.QMenu(self.menubar)
        self.menuAide.setObjectName("menuAide")
        MainWindow.setMenuBar(self.menubar)
        self.dock_doc = QtWidgets.QDockWidget(MainWindow)
        self.dock_doc.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.dock_doc.setObjectName("dock_doc")
        self.__dock_web = QtWidgets.QWidget()
        self.__dock_web.setObjectName("__dock_web")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.__dock_web)
        self.horizontalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        try:
            self.web_doc = QtWebEngineWidgets.QWebEngineView(self.__dock_web)
        except AttributeError:
            self.web_doc = QtWebEngineWidgets.QWebView(self.__dock_web)
        #self.web_doc.setUrl(QtCore.QUrl("file:///C:/Users/thomas_a/dev/maplearn_gui/doc/index.html"))
        self.web_doc.setObjectName("web_doc")
        self.horizontalLayout_3.addWidget(self.web_doc)
        self.dock_doc.setWidget(self.__dock_web)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.dock_doc)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_quit = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/icon/Icon/quit-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_quit.setIcon(icon4)
        self.action_quit.setObjectName("action_quit")
        self.action_open = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/icon/Icon/open-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_open.setIcon(icon5)
        self.action_open.setObjectName("action_open")
        self.action_new = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/icon/Icon/new-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_new.setIcon(icon6)
        self.action_new.setObjectName("action_new")
        self.action_save = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/icon/Icon/save-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_save.setIcon(icon7)
        self.action_save.setObjectName("action_save")
        self.action_saveas = QtWidgets.QAction(MainWindow)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/icon/Icon/saveas-icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_saveas.setIcon(icon8)
        self.action_saveas.setObjectName("action_saveas")
        self.actionA_propos = QtWidgets.QAction(MainWindow)
        self.actionA_propos.setObjectName("actionA_propos")
        self.menuFichier.addAction(self.action_new)
        self.menuFichier.addAction(self.action_open)
        self.menuFichier.addSeparator()
        self.menuFichier.addAction(self.action_save)
        self.menuFichier.addAction(self.action_saveas)
        self.menuFichier.addSeparator()
        self.menuFichier.addAction(self.action_quit)
        self.menuAide.addAction(self.actionA_propos)
        self.menubar.addAction(self.menuFichier.menuAction())
        self.menubar.addAction(self.menuAide.menuAction())
        self.lbl_samples.setBuddy(self.le_io_samples)
        self.lbl_data.setBuddy(self.le_io_data)
        self.__lab_io_label_id.setBuddy(self.le_io_label_id)
        self.__lab_io_label.setBuddy(self.le_io_label)
        self.__lab_io_features.setBuddy(self.le_io_features)
        self.lbl_output.setBuddy(self.le_io_output)
        self.__lab_pre_reduce.setBuddy(self.cbo_pre_reduce)
        self.__lab_pre_ncomp.setBuddy(self.sb_pre_ncomp)
        self.__lab_pro_algorithm.setBuddy(self.lst_pro_algorithm)
        self.__lbl_pro_kfold.setBuddy(self.sbo_pro_kfold)
        self.__lbl_pro_distance.setBuddy(self.cbo_pro_distance)

        self.retranslateUi(MainWindow)
        self.tbx_main.setCurrentIndex(2)
        self.tbx_main.layout().setSpacing(7)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Mapping Learning"))
        self.cbo_process.setStatusTip(_translate("MainWindow", "Choisissez le type de traitement à réaliser : classification, clustering ou régression"))
        self.cbo_process.setItemText(0, _translate("MainWindow", "Classification"))
        self.cbo_process.setItemText(1, _translate("MainWindow", "Clustering"))
        self.cbo_process.setItemText(2, _translate("MainWindow", "Regression"))
        self.frm_io.setAccessibleDescription(_translate("MainWindow", "<html><head/><body><p>Entrées/Sorties</p></body></html>"))
        self.lbl_samples.setText(_translate("MainWindow", "Echantillons"))
        self.le_io_samples.setStatusTip(_translate("MainWindow", "Choisissez le fichier contenant les échantillons, ou 1 des jeux fournis : iris, digits ou boston"))
        self.btn_io_samples.setText(_translate("MainWindow", "..."))
        self.lbl_data.setText(_translate("MainWindow", "Données"))
        self.le_io_data.setStatusTip(_translate("MainWindow", "Chemin vers le fichier contenant les données."))
        self.btn_io_data.setText(_translate("MainWindow", "..."))
        self.__gb_io_attributes.setTitle(_translate("MainWindow", "Attributs"))
        self.__lab_io_label_id.setText(_translate("MainWindow", "label_id"))
        self.le_io_label_id.setStatusTip(_translate("MainWindow", "Indiquez ici si un attribut contient les identifiants de classe"))
        self.__lab_io_label.setText(_translate("MainWindow", "label"))
        self.le_io_label.setStatusTip(_translate("MainWindow", "Indiquez ici si un attribut contient les libellés des classes"))
        self.__lab_io_features.setText(_translate("MainWindow", "features"))
        self.le_io_features.setStatusTip(_translate("MainWindow", "Liste des attributs à utiliser (toutes si laissé vide)"))
        self.lbl_output.setText(_translate("MainWindow", "Sortie (dossier)"))
        self.le_io_output.setStatusTip(_translate("MainWindow", "Chemin vers le dossier qui contiendra les résultats"))
        self.btn_io_output.setText(_translate("MainWindow", "..."))
        self.tbx_main.setItemText(self.tbx_main.indexOf(self.frm_io), _translate("MainWindow", "Entrée(s)/Sortie"))
        self.chk_pre_scale.setStatusTip(_translate("MainWindow", "Faut-il centrer et réduire les données (oui par défaut) ?"))
        self.chk_pre_scale.setText(_translate("MainWindow", "Centrer/Réduire"))
        self.chk_pre_balance.setStatusTip(_translate("MainWindow", "Faut-il rééquilibrer les échantillons, c\'est à dire retirer des échantillons des classes qui en contiennent le plus ?"))
        self.chk_pre_balance.setText(_translate("MainWindow", "Equilibrage des échantillons"))
        self.chk_pre_separability.setStatusTip(_translate("MainWindow", "Faut-il tester la séparabilité des échantillons ?"))
        self.chk_pre_separability.setText(_translate("MainWindow", "Séparabilité"))
        self.gb_pre_reducion.setTitle(_translate("MainWindow", "Réduction"))
        self.__lab_pre_reduce.setText(_translate("MainWindow", "Méthode"))
        self.cbo_pre_reduce.setStatusTip(_translate("MainWindow", "Faut-il réduire le jeu de données avant d\'appliquer les traitements ?"))
        self.__lab_pre_ncomp.setText(_translate("MainWindow", "Nombre de dimensions"))
        self.sb_pre_ncomp.setStatusTip(_translate("MainWindow", "Nombre de dimensions souhaitées"))
        self.tbx_main.setItemText(self.tbx_main.indexOf(self.frm_preprocess), _translate("MainWindow", "Prétraitements"))
        self.__lab_pro_algorithm.setText(_translate("MainWindow", "Algorithmes"))
        self.lst_pro_algorithm.setStatusTip(_translate("MainWindow", "Choisissez parmi la liste le(s) algorithme(s) que vous souhaitez appliquer"))
        self.__lbl_pro_kfold.setText(_translate("MainWindow", "Validation croisée (kfold)"))
        self.sbo_pro_kfold.setStatusTip(_translate("MainWindow", "Nombre de lots à utiliser dans la validation croisée (3 par défaut)"))
        self.chk_pro_optimize.setStatusTip(_translate("MainWindow", "Faut-il rechercher les paramètres qui améliorent la précision des prédictions (non par défaut). Peut demander du temps."))
        self.chk_pro_optimize.setText(_translate("MainWindow", "Optimisation"))
        self.chk_pro_predict.setStatusTip(_translate("MainWindow", "Faut-il prédire des résultats ou simplement obtenir des résultats statistiques sur les échantillons (non par défaut)"))
        self.chk_pro_predict.setText(_translate("MainWindow", "Prédiction des résultats"))
        self.__lbl_pro_distance.setText(_translate("MainWindow", "Distance"))
        self.cbo_pro_distance.setStatusTip(_translate("MainWindow", "Quelle distance faut-il considérer (euclidienne par défaut)"))
        self.cbo_pro_distance.setItemText(0, _translate("MainWindow", "euclidean"))
        self.cbo_pro_distance.setItemText(1, _translate("MainWindow", "mahalanobis"))
        self.btn_cancel.setText(_translate("MainWindow", "Annuler"))
        self.btn_run.setText(_translate("MainWindow", " Exécuter "))
        self.tbx_main.setItemText(self.tbx_main.indexOf(self.frm_process), _translate("MainWindow", "Traitements"))
        self.menuFichier.setTitle(_translate("MainWindow", "Fichier"))
        self.menuAide.setTitle(_translate("MainWindow", "Aide"))
        self.dock_doc.setWindowTitle(_translate("MainWindow", "Didacticiel"))
        self.action_quit.setText(_translate("MainWindow", "Quitter"))
        self.action_quit.setStatusTip(_translate("MainWindow", "Quitter Mapping Learning"))
        self.action_quit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.action_open.setText(_translate("MainWindow", "Ouvrir"))
        self.action_open.setToolTip(_translate("MainWindow", "Ouvrir un fichier de configuration existant (*.cfg)"))
        self.action_open.setStatusTip(_translate("MainWindow", "Charger la configuration à partir d\'un fichier existant (*.cfg)"))
        self.action_open.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.action_new.setText(_translate("MainWindow", "Nouveau"))
        self.action_new.setToolTip(_translate("MainWindow", "Nouvelle configuration"))
        self.action_new.setStatusTip(_translate("MainWindow", "Créer une nouvelle configuration"))
        self.action_new.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.action_save.setText(_translate("MainWindow", "Enregistrer"))
        self.action_save.setStatusTip(_translate("MainWindow", "Enregistrer la configuration actuelle"))
        self.action_save.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.action_saveas.setText(_translate("MainWindow", "Enregistrer sous"))
        self.action_saveas.setStatusTip(_translate("MainWindow", "Enregistrer la configuration actuelle dans un nouveau fichier (*.cfg)"))
        self.action_saveas.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.actionA_propos.setText(_translate("MainWindow", "A propos"))

import maplearn.app.gui.maplearn_rc
