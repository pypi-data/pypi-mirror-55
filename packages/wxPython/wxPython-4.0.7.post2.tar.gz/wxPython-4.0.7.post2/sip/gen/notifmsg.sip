//---------------------------------------------------------------------------
// This file is generated by wxPython's SIP generator.  Do not edit by hand.
//
// Copyright: (c) 2018 by Total Control Software
// License:   wxWindows License
//
// This file will be included by _adv.sip
//
//---------------------------------------------------------------------------

//---------------------------------------------------------------------------

class wxNotificationMessage : wxEvtHandler
{
    %Docstring
        NotificationMessage()
        NotificationMessage(title, message=wx.EmptyString, parent=None, flags=wx.ICON_INFORMATION)
        
        This class allows showing the user a message non intrusively.
    %End
    %TypeHeaderCode
        #include <wx/notifmsg.h>
    %End

public:
    enum 
    {
        Timeout_Auto,
        Timeout_Never    
    };

    wxNotificationMessage();

    wxNotificationMessage(
        const wxString & title,
        const wxString & message = wxEmptyString,
        wxWindow * parent = NULL,
        int flags = wxICON_INFORMATION
    );

    virtual
    ~wxNotificationMessage();

    virtual
    bool Close();
    %Docstring
        Close() -> bool
        
        Hides the notification.
    %End

    void SetFlags(
        int flags
    );
    %Docstring
        SetFlags(flags)
        
        This parameter can be currently used to specify the icon to show in
        the notification.
    %End

    void SetMessage(
        const wxString & message
    );
    %Docstring
        SetMessage(message)
        
        Set the main text of the notification.
    %End

    void SetParent(
        wxWindow * parent
    );
    %Docstring
        SetParent(parent)
        
        Set the parent for this notification: the notification will be
        associated with the top level parent of this window or, if this method
        is not called, with the main application window by default.
    %End

    void SetTitle(
        const wxString & title
    );
    %Docstring
        SetTitle(title)
        
        Set the title, it must be a concise string (not more than 64
        characters), use SetMessage() to give the user more details.
    %End

    virtual
    bool Show(
        int timeout = Timeout_Auto
    );
    %Docstring
        Show(timeout=Timeout_Auto) -> bool
        
        Show the notification to the user and hides it after timeout seconds
        are elapsed.
    %End

    public:


};  // end of class wxNotificationMessage



//---------------------------------------------------------------------------

