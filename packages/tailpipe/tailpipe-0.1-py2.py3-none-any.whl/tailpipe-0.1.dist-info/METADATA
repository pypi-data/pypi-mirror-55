Metadata-Version: 2.1
Name: tailpipe
Version: 0.1
Summary: A simple command-line tool for reading the output of all jobs
Home-page: https://example.com
License: UNKNOWN
Author: Jeremy Axmacher
Author-email: jeremy@obsoleter.com
Description-Content-Type: text/markdown
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Dist: certifi==2019.9.11
Requires-Dist: chardet==3.0.4
Requires-Dist: Click==7.0
Requires-Dist: colorama==0.4.1
Requires-Dist: idna==2.8
Requires-Dist: prompt-toolkit==2.0.10
Requires-Dist: Pygments==2.4.2
Requires-Dist: pypager==0.3
Requires-Dist: python-gitlab==1.12.1
Requires-Dist: requests==2.22.0
Requires-Dist: six==1.12.0
Requires-Dist: urllib3==1.25.6
Requires-Dist: wcwidth==0.1.7

# Tailpipe

A simple, command-line tool for reading Gitlab pipeline job output in the
console.  Just run `tailpipe` when your working directory is within a Git
repository and the tool will determine your remote repository details, the
current commit, and what pipeline jobs are currently running in Gitlab for
that commit.

## Setup

You will need to create a `~/.python-gitlab.cfg` file with a format like this:

```
[global]
default = pims
ssl_verify = true
timeout = 5

[pims]
url = <GITLAB_URL>
private_token = <PRIVATE_TOKEN>
api_version = 4
```

Replace <GITLAB_URL> with your Gitlab URL.  Replace `<PRIVATE_TOKEN>` with a Gitlab private token created with API access.
Follow the instructions [here](https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html#creating-a-personal-access-token)
